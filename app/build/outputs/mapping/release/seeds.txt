androidx.appcompat.widget.ActionMenuView
okio.FileHandle
retrofit2.ParameterHandler$Field
com.waldy.androidcurrencyexchange.R$string
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt$lambda-1$1
okio.internal.ZipFilesKt$readEntry$1
okio.CipherSource
retrofit2.BuiltInConverters$UnitResponseBodyConverter
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult
com.google.gson.reflect.TypeToken
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1
okio.InflaterSource
okio.Options$Companion
retrofit2.http.PATCH
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3
com.google.android.material.datepicker.MaterialCalendarGridView
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
okio.-SegmentedByteString
okio.ForwardingTimeout
okio.Throttler$source$1
androidx.compose.foundation.text.modifiers.TextStringSimpleElement
androidx.versionedparcelable.CustomVersionedParcelable
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1
androidx.compose.ui.draw.ShadowGraphicsLayerElement
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2
okio.HashingSource$Companion
androidx.graphics.path.ConicConverter
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback
okio.JvmSystemFileSystem
androidx.versionedparcelable.ParcelImpl
okio.FileHandle$FileHandleSink
androidx.compose.foundation.IndicationModifierElement
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1
retrofit2.Utils$GenericArrayTypeImpl
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt$lambda-1$1
androidx.compose.foundation.layout.PaddingElement
com.waldy.androidcurrencyexchange.di.AppContainer
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1
retrofit2.http.HTTP
androidx.compose.foundation.ScrollingLayoutElement
okio.AsyncTimeout$Companion
com.google.android.material.behavior.SwipeDismissBehavior
okio.-Base64
okio.BufferedSink
okio.RealBufferedSource$inputStream$1
okio.internal.-FileSystem$collectRecursively$1
okio.ForwardingSource
androidx.compose.material3.MinimumInteractiveModifier
retrofit2.http.Tag
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1
okio.Throttler
okio.Buffer
okio.Throttler$sink$1
retrofit2.ParameterHandler$HeaderMap
androidx.compose.ui.layout.LayoutElement
com.bumptech.glide.load.ImageHeaderParser$ImageType
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt
androidx.lifecycle.ProcessLifecycleOwner$attach$1
retrofit2.package-info
androidx.compose.ui.focus.FocusPropertiesElement
okio.Buffer$UnsafeCursor
androidx.compose.ui.draw.PainterElement
com.google.android.material.button.MaterialButton
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation$filter$offsetMapping$1
com.waldy.androidcurrencyexchange.R$color
okio.JvmFileHandle
okio.SegmentPool
okio.NioSystemFileSystem
androidx.compose.foundation.BorderModifierNodeElement
androidx.compose.foundation.lazy.layout.TraversablePrefetchStateModifierElement
retrofit2.Utils$ParameterizedTypeImpl
retrofit2.CallAdapter
com.google.android.material.tabs.TabLayout
androidx.compose.ui.layout.OnSizeChangedModifier
androidx.compose.ui.draw.DrawWithCacheElement
retrofit2.Call
retrofit2.http.PartMap
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2$1
okio.BlackholeSink
com.google.android.material.timepicker.ChipTextInputComboView
okio.HashingSink$Companion
retrofit2.Utils
com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase
retrofit2.http.Path
com.google.android.material.internal.NavigationMenuItemView
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1
okio.internal.ZipFilesKt$openZip$1
androidx.compose.ui.graphics.GraphicsLayerElement
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.google.android.material.transformation.FabTransformationSheetBehavior
androidx.lifecycle.ReportFragment$LifecycleCallbacks
okio.GzipSink
androidx.compose.ui.input.pointer.SuspendPointerInputElement
retrofit2.Converter$Factory
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2
androidx.compose.ui.draw.DrawWithContentElement
retrofit2.http.Headers
retrofit2.http.Part
androidx.compose.foundation.lazy.layout.LazyLayoutItemAnimator$DisplayingDisappearingItemsElement
retrofit2.KotlinExtensions$suspendAndThrow$1
com.google.android.material.timepicker.TimePickerView
okio.Source
okio.Buffer$outputStream$1
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.google.android.material.divider.MaterialDivider
retrofit2.OkHttpCall$1
retrofit2.http.Streaming
retrofit2.ParameterHandler$PartMap
okio.internal.-FileSystem
com.google.android.material.datepicker.MaterialTextInputPicker
okio.RealBufferedSource
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$2
retrofit2.ParameterHandler$Path
kotlin.coroutines.Continuation
retrofit2.HttpServiceMethod$SuspendForBody
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall
okio.CipherSink
okio.-DeprecatedUpgrade
androidx.appcompat.widget.ButtonBarLayout
androidx.profileinstaller.ProfileInstallReceiver
retrofit2.internal.EverythingIsNonNull
retrofit2.OkHttpCall$ExceptionCatchingResponseBody
okio.-DeprecatedUtf8
okio.ForwardingFileSystem
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2
retrofit2.Response
androidx.compose.ui.input.nestedscroll.NestedScrollElement
com.waldy.androidcurrencyexchange.R$style
androidx.compose.foundation.FocusableElement
androidx.core.graphics.drawable.IconCompatParcelizer
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl
okio.FileSystem$Companion
androidx.compose.foundation.layout.IntrinsicWidthElement
retrofit2.BuiltInConverters$StreamingResponseBodyConverter
okio.BufferedSource
retrofit2.ParameterHandler$2
androidx.compose.ui.draw.DrawBehindElement
retrofit2.http.DELETE
androidx.coordinatorlayout.widget.CoordinatorLayout
com.google.android.material.textfield.TextInputEditText
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1
com.waldy.androidcurrencyexchange.ui.theme.ThemeKt
okio.internal.ZipEntry
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2
okio.internal.-SegmentedByteString
com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase
com.waldy.androidcurrencyexchange.CurrencyApplication
okio.Okio
com.waldy.androidcurrencyexchange.R$layout
retrofit2.ParameterHandler$RelativeUrl
androidx.compose.foundation.text.input.internal.LegacyAdaptingPlatformTextInputModifier
com.waldy.androidcurrencyexchange.ui.util.Language
retrofit2.ParameterHandler$Header
com.waldy.androidcurrencyexchange.R$id
retrofit2.OptionalConverterFactory$OptionalConverter
retrofit2.http.Multipart
androidx.compose.foundation.text.modifiers.SelectableTextAnnotatedStringElement
okio.GzipSource
retrofit2.HttpServiceMethod$CallAdapted
retrofit2.RequestBuilder
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2
retrofit2.Platform
okio.PeekSource
androidx.constraintlayout.helper.widget.Flow
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2
retrofit2.BuiltInConverters$RequestBodyConverter
com.google.android.material.internal.CheckableImageButton
androidx.compose.ui.focus.FocusChangedElement
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$1$1
retrofit2.converter.gson.GsonConverterFactory
retrofit2.SkipCallbackExecutorImpl
androidx.compose.ui.layout.OnGloballyPositionedElement
okio.Pipe$sink$1
androidx.constraintlayout.widget.ConstraintLayout
androidx.appcompat.widget.ContentFrameLayout
com.google.android.material.internal.BaselineLayout
okio.internal.-RealBufferedSink
okio.RealBufferedSink
androidx.appcompat.widget.Toolbar
com.google.android.material.bottomappbar.BottomAppBar$Behavior
okio.AsyncTimeout$source$1
retrofit2.KotlinExtensions$await$2$2
androidx.appcompat.view.menu.ActionMenuItemView
okio.FileHandle$FileHandleSource
com.google.android.material.datepicker.MaterialCalendar
com.google.android.material.transformation.ExpandableTransformationBehavior
okio.internal.-Path
com.waldy.androidcurrencyexchange.ui.util.StringKeys
retrofit2.BuiltInConverters$ToStringConverter
retrofit2.KotlinExtensions$awaitResponse$2$2
okio.ByteString$Companion
retrofit2.http.QueryMap
com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase
okio.FileSystem
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2$1
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter
androidx.compose.ui.input.key.KeyInputElement
retrofit2.KotlinExtensions$await$4$2
okio.-GzipSourceExtensions
okio.internal.ResourceFileSystem$roots$2
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1
com.waldy.androidcurrencyexchange.ui.theme.ColorKt
androidx.compose.foundation.text.modifiers.TextAnnotatedStringElement
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation
okio.InputStreamSource
kotlin.Metadata
retrofit2.http.GET
okio.internal.ResourceFileSystem
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel
retrofit2.Utils$WildcardTypeImpl
com.waldy.androidcurrencyexchange.domain.repository.CurrencyRepository
retrofit2.converter.gson.package-info
com.waldy.androidcurrencyexchange.R$mipmap
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1$1$1$2
androidx.compose.foundation.MagnifierElement
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$1$1
okio.NioFileSystemFileHandle
androidx.compose.foundation.ClickableElement
retrofit2.ParameterHandler$Query
okio.Segment$Companion
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1
okio.-GzipSinkExtensions
retrofit2.Platform$Android$MainThreadExecutor
androidx.compose.ui.focus.FocusOwnerImpl$modifier$2
com.google.android.material.snackbar.SnackbarContentLayout
okio.Pipe$source$1
androidx.core.app.CoreComponentFactory
androidx.compose.foundation.layout.FillElement
androidx.compose.foundation.layout.LayoutWeightElement
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.recyclerview.widget.LinearLayoutManager
retrofit2.Callback
retrofit2.RequestFactory
retrofit2.http.POST
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$1
androidx.startup.InitializationProvider
okio._JvmPlatformKt
androidx.compose.ui.input.pointer.PointerHoverIconModifierElement
com.google.android.material.transformation.FabTransformationScrimBehavior
retrofit2.ServiceMethod
retrofit2.Converter
retrofit2.Invocation
okio.AsyncTimeout$sink$1
okio.HashingSink
com.waldy.androidcurrencyexchange.data.remote.CurrencyApiService
com.waldy.androidcurrencyexchange.R$drawable
com.waldy.androidcurrencyexchange.ui.util.LocalizationKt
androidx.appcompat.widget.ViewStubCompat
retrofit2.http.HEAD
okio.Segment
androidx.compose.foundation.layout.WrapContentElement
androidx.appcompat.widget.SearchView$SearchAutoComplete
retrofit2.Retrofit
androidx.compose.foundation.gestures.ScrollableElement
androidx.core.graphics.drawable.IconCompat
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2$1
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsGroup$1$1
retrofit2.http.QueryName
okio.internal.-ByteString
com.waldy.androidcurrencyexchange.domain.model.Currency
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$2
retrofit2.CallAdapter$Factory
androidx.compose.foundation.lazy.layout.LazyLayoutSemanticsModifier
retrofit2.http.Field
retrofit2.ParameterHandler$QueryName
retrofit2.converter.gson.GsonResponseBodyConverter
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt$lambda-1$1
com.google.android.material.chip.Chip
com.google.android.material.internal.ClippableRoundedCornerLayout
retrofit2.OptionalConverterFactory
okio.Timeout
androidx.compose.foundation.FocusableKt$FocusableInNonTouchModeElement$1
android.support.v4.app.RemoteActionCompatParcelizer
com.google.android.material.timepicker.ClockFaceView
retrofit2.converter.gson.GsonRequestBodyConverter
com.waldy.androidcurrencyexchange.ui.util.Localization
retrofit2.ParameterHandler$Tag
okio.SegmentedByteString
okio.Path$Companion
androidx.compose.ui.focus.FocusRequesterElement
com.google.android.material.search.SearchView$Behavior
androidx.compose.ui.platform.DragAndDropModifierOnDragListener$modifier$1
retrofit2.DefaultCallAdapterFactory$1
androidx.compose.foundation.text.handwriting.StylusHandwritingElementWithNegativePadding
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1
retrofit2.Retrofit$Builder
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository
com.google.android.material.timepicker.ClockHandView
retrofit2.BuiltInConverters
okio.internal.EocdRecord
androidx.appcompat.widget.ActionBarContainer
okio.Timeout$Companion$NONE$1
androidx.appcompat.widget.AlertDialogLayout
retrofit2.BuiltInConverters$VoidResponseBodyConverter
com.bumptech.glide.GeneratedAppGlideModule
retrofit2.Platform$Android
retrofit2.KotlinExtensions
retrofit2.ParameterHandler$FieldMap
retrofit2.http.OPTIONS
retrofit2.http.FormUrlEncoded
androidx.compose.foundation.relocation.BringIntoViewRequesterElement
okio.internal.-FileSystem$commonListRecursively$1
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$3
retrofit2.http.Header
retrofit2.ParameterHandler$RawPart
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$2$1
androidx.viewpager2.widget.ViewPager2
okio.NioFileSystemWrappingFileSystem
retrofit2.Retrofit$1
retrofit2.CompletableFutureCallAdapterFactory
okio.-DeprecatedOkio
com.google.android.material.internal.TouchObserverFrameLayout
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt
retrofit2.ParameterHandler$Body
com.google.android.material.bottomsheet.BottomSheetBehavior
androidx.compose.ui.semantics.EmptySemanticsElement
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$4
okio.Buffer$inputStream$1
com.google.android.material.datepicker.MaterialDatePicker
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput
androidx.transition.FragmentTransitionSupport
okio.internal._Utf8Kt
androidx.appcompat.view.menu.ExpandedMenuView
androidx.appcompat.widget.ActionBarOverlayLayout
androidx.compose.ui.semantics.AppendedSemanticsElement
okio.HashingSource
androidx.recyclerview.widget.RecyclerView
retrofit2.OkHttpCall
okio.internal.ZipFilesKt$buildIndex$$inlined$sortedBy$1
androidx.recyclerview.widget.StaggeredGridLayoutManager
retrofit2.SkipCallbackExecutor
retrofit2.OkHttpCall$NoContentResponseBody
androidx.compose.foundation.layout.PaddingValuesElement
com.google.android.material.appbar.MaterialToolbar
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModelFactory
retrofit2.ParameterHandler
retrofit2.ParameterHandler$QueryMap
androidx.lifecycle.ProcessLifecycleInitializer
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$2$1
androidx.lifecycle.SavedStateHandlesVM
okio.ZipFileSystem
retrofit2.BuiltInConverters$BufferingResponseBodyConverter
retrofit2.HttpServiceMethod$SuspendForResponse
okio.-InflaterSourceExtensions
androidx.appcompat.widget.ActionBarContextView
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1
okio.FileMetadata
retrofit2.http.Url
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1
androidx.compose.ui.input.rotary.RotaryInputElement
androidx.graphics.path.PathIteratorPreApi34Impl
okio.ForwardingSink
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepositoryKt
retrofit2.http.Query
kotlinx.coroutines.android.AndroidDispatcherFactory
okio.Pipe
okio.internal.ResourceFileSystem$Companion
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1
okio.RealBufferedSink$outputStream$1
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback
androidx.appcompat.widget.DialogTitle
okio.Utf8
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
okio.AsyncTimeout$Watchdog
retrofit2.http.FieldMap
retrofit2.RequestFactory$Builder
com.waldy.androidcurrencyexchange.MainActivityScreenKt
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2
androidx.emoji2.text.EmojiCompatInitializer
androidx.compose.foundation.BackgroundElement
com.google.android.material.transformation.ExpandableBehavior
retrofit2.ParameterHandler$Part
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$3$1
androidx.compose.foundation.ScrollSemanticsElement
okio.ByteString
okio.Okio__JvmOkioKt
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1$1
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture
com.google.android.material.carousel.CarouselLayoutManager
okio.OutputStreamSink
okio.internal.FixedLengthSource
com.google.android.material.textfield.TextInputLayout
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback
kotlinx.coroutines.internal.StackTraceRecoveryKt
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt
com.waldy.androidcurrencyexchange.R$xml
okio.DeflaterSink
com.google.android.material.internal.NavigationMenuView
com.google.android.material.behavior.HideViewOnScrollBehavior
com.google.android.material.appbar.AppBarLayout$Behavior
com.waldy.androidcurrencyexchange.data.local.CurrencyCache
androidx.core.widget.NestedScrollView
retrofit2.http.PUT
retrofit2.HttpException
retrofit2.http.Body
androidx.annotation.Keep
android.support.v4.graphics.drawable.IconCompatParcelizer
okhttp3.internal.publicsuffix.PublicSuffixDatabase
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory
androidx.compose.foundation.layout.UnspecifiedConstraintsElement
com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel
androidx.appcompat.app.AlertController$RecycleListView
androidx.loader.app.LoaderManagerImpl$LoaderViewModel
com.waldy.androidcurrencyexchange.MainActivity
com.google.android.material.search.SearchBar$ScrollingViewBehavior
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody
okio.ZipFileSystem$Companion
com.google.android.material.snackbar.Snackbar$SnackbarLayout
okio.internal.ResourceFileSystem$Companion$toJarRoot$zip$1
androidx.appcompat.widget.ActivityChooserView$InnerLayout
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$4$1
kotlin.coroutines.jvm.internal.BaseContinuationImpl
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt
retrofit2.ParameterHandler$1
com.google.android.material.sidesheet.SideSheetBehavior
com.waldy.androidcurrencyexchange.R
com.google.android.material.button.MaterialButtonToggleGroup
okio.Sink
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4
okio.Okio__OkioKt
androidx.fragment.app.FragmentContainerView
androidx.fragment.app.DialogFragment
okio.internal.-Buffer
okio.AsyncTimeout
okio.ForwardingFileSystem$listRecursively$1
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1
retrofit2.DefaultCallAdapterFactory
androidx.recyclerview.widget.GridLayoutManager
androidx.compose.foundation.layout.SizeElement
com.google.android.material.transformation.FabTransformationBehavior
com.waldy.androidcurrencyexchange.ui.theme.TypeKt
androidx.core.app.RemoteActionCompatParcelizer
okio.ExperimentalFileSystem
kotlinx.coroutines.internal.MainDispatcherFactory
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2
okio.Options
retrofit2.HttpServiceMethod
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase
androidx.appcompat.widget.FitWindowsFrameLayout
androidx.core.app.RemoteActionCompat
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2
androidx.appcompat.view.menu.ListMenuItemView
okio.internal.ZipFilesKt
retrofit2.http.HeaderMap
okio.Timeout$Companion
okio.internal.-RealBufferedSource
okio.-DeflaterSinkExtensions
androidx.profileinstaller.ProfileInstallerInitializer
okio.Path
com.google.android.material.appbar.AppBarLayout$BaseBehavior
retrofit2.ParameterHandler$Headers
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
androidx.lifecycle.ReportFragment
okio.SocketAsyncTimeout
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: java.text.DecimalFormatSymbols symbols
retrofit2.RequestFactory$Builder: boolean isFormEncoded
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: char decimalSeparator
okio.internal.-FileSystem$collectRecursively$1: java.lang.Object L$2
okio.CipherSource: int blockSize
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList onPictureInPictureModeChangedListeners
okio.Throttler: java.util.concurrent.locks.Condition condition
okio.internal.-FileSystem$collectRecursively$1: boolean Z$1
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long LightTan
okio.internal.ZipFilesKt: long MAX_ZIP_ENTRY_AND_ARCHIVE_SIZE
retrofit2.HttpServiceMethod$SuspendForResponse: retrofit2.CallAdapter callAdapter
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: com.waldy.androidcurrencyexchange.data.local.CurrencyCache cache
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
okio.PeekSource: okio.BufferedSource upstream
retrofit2.Retrofit$Builder: java.util.List converterFactories
retrofit2.ParameterHandler$Path: java.lang.String name
com.waldy.androidcurrencyexchange.ui.theme.TypeKt: androidx.compose.material3.Typography Typography
okio.Pipe: java.util.concurrent.locks.Condition condition
retrofit2.ParameterHandler$RelativeUrl: java.lang.reflect.Method method
okio.InflaterSource: java.util.zip.Inflater inflater
com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase: int $stable
okio.internal.-Buffer: int SEGMENTING_THRESHOLD
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2$1: java.lang.Object result
retrofit2.RequestFactory$Builder: java.util.Set relativeUrlParamNames
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: java.lang.Object L$0
retrofit2.ParameterHandler$2: retrofit2.ParameterHandler this$0
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: int $stable
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: okio.FileSystem $this_commonDeleteRecursively
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2$1: java.lang.Object result
okio.internal.FixedLengthSource: long size
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
retrofit2.HttpException: int code
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
okio.internal.-FileSystem$commonListRecursively$1: boolean $followSymlinks
retrofit2.ParameterHandler$Query: java.lang.String name
okio.GzipSource: okio.RealBufferedSource source
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long DarkRoast
okio.Utf8: byte REPLACEMENT_BYTE
com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase: int $stable
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String SEND_FEEDBACK
okio.internal.ZipFilesKt: int ZIP64_LOCATOR_SIGNATURE
retrofit2.DefaultCallAdapterFactory$1: java.lang.reflect.Type val$responseType
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler[] parameterHandlers
okio.Segment: okio.Segment next
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
retrofit2.ParameterHandler$Path: java.lang.reflect.Method method
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.waldy.androidcurrencyexchange.domain.model.Currency: java.lang.String fullName
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
kotlin.jvm.internal.CallableReference: java.lang.String name
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long MilkyWhite
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap extraDataMap
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: kotlinx.coroutines.Job conversionJob
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_EUR
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl this$0
okio.ZipFileSystem: java.util.Map entries
okio.PeekSource: boolean closed
okio.internal.ZipFilesKt$readEntry$1: kotlin.jvm.internal.Ref$LongRef $offset
okio.RealBufferedSink: boolean closed
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type lowerBound
okio.Throttler$source$1: okio.Throttler this$0
okio.internal.-Path: okio.ByteString BACKSLASH
okio.internal.ZipFilesKt$readEntry$1: kotlin.jvm.internal.Ref$BooleanRef $hasZip64Extra
com.google.gson.reflect.TypeToken: java.lang.reflect.Type type
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt: kotlin.jvm.functions.Function4 lambda-1
retrofit2.BuiltInConverters: boolean checkForKotlinUnit
okio.-SegmentedByteString: int DEFAULT__ByteString_size
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$4: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel this$0
okio.-DeprecatedUpgrade: okio.-DeprecatedUtf8 Utf8
okio.AsyncTimeout: int TIMEOUT_WRITE_SIZE
retrofit2.ParameterHandler$Body: java.lang.reflect.Method method
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: java.math.BigDecimal convertedAmount
com.waldy.androidcurrencyexchange.ui.util.Language: com.waldy.androidcurrencyexchange.ui.util.Language ENGLISH
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: java.lang.Object L$0
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
kotlin.jvm.internal.FunctionReference: int arity
kotlin.jvm.internal.CallableReference: java.lang.Class owner
okio.HashingSource: javax.crypto.Mac mac
retrofit2.HttpServiceMethod: okhttp3.Call$Factory callFactory
okio.AsyncTimeout$sink$1: okio.AsyncTimeout this$0
retrofit2.OkHttpCall: java.lang.Object[] args
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_VND
com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase: int $stable
retrofit2.CompletableFutureCallAdapterFactory: retrofit2.CallAdapter$Factory INSTANCE
okio.FileSystem: okio.FileSystem$Companion Companion
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: int $stable
com.google.gson.reflect.TypeToken: int hashCode
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String FEEDBACK
retrofit2.RequestFactory: okhttp3.Headers headers
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: com.waldy.androidcurrencyexchange.domain.model.Currency $from
retrofit2.RequestFactory$Builder: boolean gotPart
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: int label
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper contextAwareHelper
okio.ZipFileSystem: okio.FileSystem fileSystem
com.waldy.androidcurrencyexchange.R$drawable: int united_kingdom
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
retrofit2.SkipCallbackExecutorImpl: retrofit2.SkipCallbackExecutor INSTANCE
retrofit2.Retrofit: okhttp3.HttpUrl baseUrl
okio.-Base64: byte[] BASE64
okio.RealBufferedSink$outputStream$1: okio.RealBufferedSink this$0
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long DarkCream
okio.Pipe: long maxBufferSize
retrofit2.Retrofit: okhttp3.Call$Factory callFactory
retrofit2.RequestBuilder: okhttp3.HttpUrl$Builder urlBuilder
androidx.compose.runtime.ParcelableSnapshotMutableIntState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: boolean isOffline
com.google.gson.reflect.TypeToken: java.lang.Class rawType
okio.internal.ZipEntry: int compressionMethod
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String DARK
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
retrofit2.RequestFactory: retrofit2.ParameterHandler[] parameterHandlers
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.MutableStateFlow _theme
androidx.compose.runtime.ParcelableSnapshotMutableState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1: com.waldy.androidcurrencyexchange.ui.util.Language $language
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1: androidx.compose.runtime.MutableState $showDialog$delegate
retrofit2.OkHttpCall: boolean canceled
okio.FileHandle: java.util.concurrent.locks.ReentrantLock lock
retrofit2.RequestFactory: boolean isMultipart
retrofit2.ParameterHandler$Field: java.lang.String name
retrofit2.DefaultCallAdapterFactory: java.util.concurrent.Executor callbackExecutor
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
okio.FileHandle$FileHandleSource: boolean closed
okio.CipherSink: int blockSize
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepositoryKt: kotlin.properties.ReadOnlyProperty dataStore$delegate
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: java.lang.Object L$0
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList onTrimMemoryListeners
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2$1: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2 this$0
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel this$0
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
okio.GzipSink: java.util.zip.Deflater deflater
okio.ByteString: int hashCode
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
okio.internal.-Buffer: byte[] HEX_DIGIT_BYTES
okio.Pipe: java.util.concurrent.locks.ReentrantLock lock
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long OnCoffeeBrown
okio.internal.ResourceFileSystem$roots$2: java.lang.ClassLoader $classLoader
okio.HashingSink: javax.crypto.Mac mac
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
okio.RealBufferedSink: okio.Buffer bufferField
okio.Timeout: okio.Timeout$Companion Companion
okio.internal.ZipEntry: long offset
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase: com.waldy.androidcurrencyexchange.domain.repository.CurrencyRepository currencyRepository
retrofit2.ParameterHandler$QueryMap: java.lang.reflect.Method method
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String LANGUAGE
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: retrofit2.BuiltInConverters$StreamingResponseBodyConverter INSTANCE
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: int label
okio.-SegmentedByteString: okio.Buffer$UnsafeCursor DEFAULT__new_UnsafeCursor
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String DEVICE
com.waldy.androidcurrencyexchange.R$drawable: int ic_launcher_foreground
okio.InflaterSource: int bufferBytesHeldByInflater
okio.CipherSource: okio.Buffer buffer
okio.internal.ZipFilesKt: int LOCAL_FILE_HEADER_SIGNATURE
retrofit2.RequestFactory: boolean isFormEncoded
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
com.waldy.androidcurrencyexchange.R$id: int viewPager
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
retrofit2.Platform: retrofit2.Platform PLATFORM
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter this$0
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: okio.Path $fileOrDirectory
okio.internal.ZipEntry: long size
retrofit2.RequestFactory$Builder: boolean gotQueryName
com.waldy.androidcurrencyexchange.ui.util.Localization: com.waldy.androidcurrencyexchange.ui.util.Localization INSTANCE
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2: int label
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall this$0
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt$lambda-1$1: com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt$lambda-1$1 INSTANCE
okio.-DeprecatedOkio: okio.-DeprecatedOkio INSTANCE
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
okio.FileHandle: boolean readWrite
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter this$0
okio.Path: okio.ByteString bytes
okio.RealBufferedSource: okio.Source source
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper menuHostHelper
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1: java.math.BigDecimal $amount$inlined
com.waldy.androidcurrencyexchange.di.AppContainer: retrofit2.Retrofit retrofit
okio.ByteString: long serialVersionUID
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.MediaType contentType
retrofit2.HttpException: retrofit2.Response response
com.waldy.androidcurrencyexchange.ui.util.Localization: java.util.Map strings
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt: kotlin.jvm.functions.Function2 lambda-1
retrofit2.OkHttpCall: okhttp3.Call$Factory callFactory
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: com.waldy.androidcurrencyexchange.ui.util.Language $language
okio.Segment: int pos
okio.RealBufferedSource$inputStream$1: okio.RealBufferedSource this$0
okio.Pipe$sink$1: okio.Timeout timeout
okio.internal.ZipFilesKt: int CENTRAL_FILE_HEADER_SIGNATURE
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
okio.SocketAsyncTimeout: java.net.Socket socket
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2$1: java.lang.Object result
okio.DeflaterSink: java.util.zip.Deflater deflater
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: int $stable
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: retrofit2.Callback val$callback
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
okio.SegmentPool: int MAX_SIZE
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String REPORT_ISSUES
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$Companion Companion
okio.internal.-FileSystem$collectRecursively$1: java.lang.Object L$1
retrofit2.ParameterHandler$Part: int p
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$2: android.content.Context $context
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: kotlin.jvm.functions.Function0 $onDismiss
com.waldy.androidcurrencyexchange.R$color: int ic_launcher_background
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
retrofit2.OkHttpCall$NoContentResponseBody: okhttp3.MediaType contentType
retrofit2.HttpServiceMethod: retrofit2.Converter responseConverter
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
okio.Segment: int limit
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModelFactory: int $stable
com.waldy.androidcurrencyexchange.domain.model.Currency: kotlin.enums.EnumEntries $ENTRIES
retrofit2.Retrofit$1: retrofit2.Retrofit this$0
retrofit2.RequestBuilder: java.lang.String relativeUrl
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
retrofit2.ParameterHandler$FieldMap: java.lang.reflect.Method method
retrofit2.ParameterHandler$PartMap: int p
okio.Segment: int SHARE_MINIMUM
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
androidx.viewpager2.widget.ViewPager2$SavedState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository userPreferencesRepository
retrofit2.Utils: java.lang.reflect.Type[] EMPTY_TYPE_ARRAY
okio.internal.-FileSystem$collectRecursively$1: java.lang.Object L$0
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1: kotlin.jvm.functions.Function1 $onThemeChange
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt: com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt INSTANCE
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: java.lang.Exception $this_suspendAndThrow$inlined
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.data.remote.CurrencyApiService currencyApiService
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String error
retrofit2.Response: okhttp3.Response rawResponse
retrofit2.converter.gson.GsonConverterFactory: com.google.gson.Gson gson
retrofit2.converter.gson.GsonResponseBodyConverter: com.google.gson.Gson gson
kotlinx.coroutines.JobSupport: java.lang.Object _state
okio.Pipe: boolean sinkClosed
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase updateThemeUseCase
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String toAmount
retrofit2.RequestFactory$Builder: java.lang.annotation.Annotation[] methodAnnotations
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: com.waldy.androidcurrencyexchange.ui.util.Language $language
retrofit2.HttpServiceMethod$SuspendForBody: retrofit2.CallAdapter callAdapter
retrofit2.RequestFactory$Builder: boolean gotField
okio.InputStreamSource: okio.Timeout timeout
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: kotlin.jvm.functions.Function1 $onSelect
okio.PeekSource: int expectedPos
retrofit2.ParameterHandler$Part: retrofit2.Converter converter
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
okio.Pipe: okio.Sink foldedSink
okio.HashingSource: okio.HashingSource$Companion Companion
okio.AsyncTimeout: okio.AsyncTimeout next
okio.internal.-Path: okio.ByteString DOT_DOT
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okio.BufferedSource delegateSource
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Call delegate
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel this$0
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation$filter$offsetMapping$1: java.lang.String $newText
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.StateFlow language
okio.SegmentPool: java.util.concurrent.atomic.AtomicReference[] hashBuckets
okio.AsyncTimeout$sink$1: okio.Sink $sink
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency CHF
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency AUD
okio.Timeout: okio.Timeout NONE
okio.AsyncTimeout: boolean inQueue
okio.Utf8: int HIGH_SURROGATE_HEADER
okio.Pipe$sink$1: okio.Pipe this$0
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
okio.internal.ZipFilesKt: int HEADER_ID_ZIP64_EXTENDED_INFO
okio.OutputStreamSink: okio.Timeout timeout
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long OnLightTan
retrofit2.converter.gson.GsonRequestBodyConverter: com.google.gson.Gson gson
com.waldy.androidcurrencyexchange.R$xml: int backup_rules
retrofit2.OptionalConverterFactory: retrofit2.Converter$Factory INSTANCE
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
okio.ForwardingFileSystem$listRecursively$1: okio.ForwardingFileSystem this$0
okio.Throttler: long maxByteCount
okio.FileHandle$FileHandleSource: okio.FileHandle fileHandle
retrofit2.RequestFactory: java.lang.String relativeUrl
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: boolean isOffline
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2: java.math.BigDecimal $amount$inlined
okio.internal.-FileSystem$collectRecursively$1: int label
okio.RealBufferedSource: boolean closed
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: int label
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: kotlinx.coroutines.flow.MutableStateFlow _uiState
okio.Buffer$UnsafeCursor: okio.Buffer buffer
okio.ByteString: java.lang.String utf8
okio.Timeout: long deadlineNanoTime
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_GBP
retrofit2.converter.gson.GsonRequestBodyConverter: java.nio.charset.Charset UTF_8
okio.internal.-Path: okio.ByteString SLASH
retrofit2.ParameterHandler$Headers: int p
okio.internal.-FileSystem$collectRecursively$1: java.lang.Object L$4
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency[] $VALUES
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type[] typeArguments
retrofit2.ParameterHandler$Field: retrofit2.Converter valueConverter
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2$1: java.lang.Object L$0
retrofit2.Retrofit$Builder: retrofit2.Platform platform
com.google.android.material.badge.BadgeState$State: android.os.Parcelable$Creator CREATOR
retrofit2.OkHttpCall: retrofit2.Converter responseConverter
retrofit2.ParameterHandler$1: retrofit2.ParameterHandler this$0
retrofit2.ParameterHandler$QueryMap: retrofit2.Converter valueConverter
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1: java.util.List $tabTitles
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
retrofit2.ParameterHandler$PartMap: java.lang.String transferEncoding
okio.FileMetadata: boolean isDirectory
androidx.activity.ComponentActivity: boolean dispatchingOnPictureInPictureModeChanged
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
okio.internal.ZipEntry: long compressedSize
androidx.transition.ChangeBounds$6: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2: kotlinx.coroutines.flow.FlowCollector $this_unsafeFlow
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2$1: java.lang.Object L$0
retrofit2.Retrofit$Builder: okhttp3.Call$Factory callFactory
okio.internal.-Buffer: long OVERFLOW_ZONE
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String SWAP_CURRENCIES
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1: kotlin.jvm.internal.Ref$ObjectRef $lastModifiedAtMillis
retrofit2.Platform$Android$MainThreadExecutor: android.os.Handler handler
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1: kotlin.jvm.functions.Function1 $onCurrencySelected
com.waldy.androidcurrencyexchange.ui.util.Localization: int $stable
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
okio.GzipSink: okio.DeflaterSink deflaterSink
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$2: kotlin.jvm.functions.Function1 $key
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: int $stable
retrofit2.converter.gson.GsonRequestBodyConverter: okhttp3.MediaType MEDIA_TYPE
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String ENGLISH
retrofit2.HttpServiceMethod$SuspendForBody: boolean isNullable
okio.Timeout: boolean hasDeadline
retrofit2.OkHttpCall$NoContentResponseBody: long contentLength
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency VND
retrofit2.Retrofit$Builder: okhttp3.HttpUrl baseUrl
retrofit2.converter.gson.GsonResponseBodyConverter: com.google.gson.TypeAdapter adapter
okio.internal.-FileSystem$commonListRecursively$1: int label
okio.Buffer$outputStream$1: okio.Buffer this$0
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase getLanguageUseCase
okio.ZipFileSystem: okio.Path ROOT
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4: androidx.compose.runtime.MutableState $showDialog$delegate
com.waldy.androidcurrencyexchange.R$id: int currencyExchangeView
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
okio.ForwardingTimeout: okio.Timeout delegate
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1: androidx.compose.foundation.pager.PagerState $pagerState
com.waldy.androidcurrencyexchange.MainActivity: int $stable
okio.FileMetadata: java.util.Map extras
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String THEME
retrofit2.OkHttpCall: retrofit2.RequestFactory requestFactory
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.reflect.Type responseType
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsGroup$1$1: kotlin.jvm.functions.Function2 $content
com.waldy.androidcurrencyexchange.R$mipmap: int ic_launcher
retrofit2.RequestFactory$Builder: boolean gotPath
retrofit2.Response: okhttp3.ResponseBody errorBody
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: retrofit2.BuiltInConverters$BufferingResponseBodyConverter INSTANCE
com.waldy.androidcurrencyexchange.R$id: int dropdown_a
com.waldy.androidcurrencyexchange.ui.util.Language: com.waldy.androidcurrencyexchange.ui.util.Language[] $VALUES
retrofit2.ParameterHandler$QueryMap: boolean encoded
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: java.util.concurrent.CompletableFuture future
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList onUserLeaveHintListeners
okio.Okio__JvmOkioKt: java.util.logging.Logger logger
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor reportFullyDrawnExecutor
okio.GzipSource: java.util.zip.CRC32 crc
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1$1: androidx.compose.runtime.State $theme$delegate
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency EUR
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long CreamyBeige
retrofit2.Retrofit$Builder: boolean validateEagerly
okio.internal.ResourceFileSystem$Companion$toJarRoot$zip$1: okio.internal.ResourceFileSystem$Companion$toJarRoot$zip$1 INSTANCE
okio.internal.-FileSystem$commonListRecursively$1: java.lang.Object L$1
okio.SegmentedByteString: byte[][] segments
okio.Buffer$UnsafeCursor: okio.Segment segment
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel this$0
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: int label
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
kotlin.collections.AbstractList: int maxArraySize
retrofit2.HttpException: java.lang.String message
okio.AsyncTimeout: okio.AsyncTimeout head
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: retrofit2.Call call
okio.SegmentPool: okio.SegmentPool INSTANCE
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_KRW
okio.Utf8: int REPLACEMENT_CODE_POINT
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
okio.internal.ZipEntry: okio.Path canonicalPath
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
retrofit2.OkHttpCall: okhttp3.Call rawCall
okio.Path: java.lang.String DIRECTORY_SEPARATOR
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList onConfigurationChangedListeners
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: java.io.IOException thrownException
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CHOOSE_THEME
retrofit2.DefaultCallAdapterFactory$1: java.util.concurrent.Executor val$executor
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation$filter$offsetMapping$1: java.lang.String $formattedInteger
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$3: java.util.List $items
retrofit2.ParameterHandler$Query: retrofit2.Converter valueConverter
okio.GzipSource: byte section
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList onMultiWindowModeChangedListeners
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase: int $stable
androidx.activity.ComponentActivity: kotlin.Lazy onBackPressedDispatcher$delegate
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2$1: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2 this$0
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1$1$1$2: java.lang.String $it
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1: int label
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: java.lang.String $title
retrofit2.KotlinExtensions$await$2$2: kotlinx.coroutines.CancellableContinuation $continuation
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModelFactory: com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase getConversionRateUseCase
okio.internal.-FileSystem$commonListRecursively$1: java.lang.Object L$0
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: int label
okio.FileMetadata: java.lang.Long lastAccessedAtMillis
retrofit2.RequestFactory$Builder: java.lang.reflect.Type[] parameterTypes
okio.internal.-FileSystem$commonListRecursively$1: okio.FileSystem $this_commonListRecursively
okio.internal.-FileSystem$commonListRecursively$1: okio.Path $dir
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
okio.GzipSource: okio.InflaterSource inflaterSource
retrofit2.RequestFactory: boolean isKotlinSuspendFunction
retrofit2.KotlinExtensions$awaitResponse$2$2: kotlinx.coroutines.CancellableContinuation $continuation
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
kotlin.coroutines.SafeContinuation: java.lang.Object result
retrofit2.ParameterHandler$Headers: java.lang.reflect.Method method
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: java.lang.Object L$0
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel this$0
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: int label
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$3: kotlin.jvm.functions.Function1 $contentType
okio.OutputStreamSink: java.io.OutputStream out
com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository userPreferencesRepository
okio.internal.ZipFilesKt: int BIT_FLAG_UNSUPPORTED_MASK
okio.InflaterSource: okio.BufferedSource source
okio.DeflaterSink: okio.BufferedSink sink
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: boolean isOffline
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: int $stable
okio.PeekSource: okio.Buffer buffer
okio.Pipe: okio.Source source
com.waldy.androidcurrencyexchange.data.local.CurrencyCache: android.content.SharedPreferences prefs
retrofit2.RequestBuilder: char[] HEX_DIGITS
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4: kotlin.jvm.functions.Function1 $onCurrencySelected$inlined
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: com.google.gson.Gson gson
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_CHF
okio.Utf8: int LOG_SURROGATE_HEADER
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String OFFLINE_MODE
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType AVIF
retrofit2.ParameterHandler$RelativeUrl: int p
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency CNY
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: java.lang.String $theme
okio.Buffer$UnsafeCursor: boolean readWrite
androidx.lifecycle.ViewModel: androidx.lifecycle.viewmodel.internal.ViewModelImpl impl
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
okio.internal.ZipFilesKt: int END_OF_CENTRAL_DIRECTORY_SIGNATURE
okio.Path: okio.Path$Companion Companion
retrofit2.ParameterHandler$Query: boolean encoded
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
okio.Utf8: int MASK_3BYTES
retrofit2.RequestBuilder: okhttp3.FormBody$Builder formBuilder
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3: int label
com.waldy.androidcurrencyexchange.ui.util.Language: java.lang.String tag
retrofit2.OkHttpCall: boolean executed
okio.internal.FixedLengthSource: long bytesReceived
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1: kotlin.jvm.internal.Ref$ObjectRef $createdAtMillis
retrofit2.RequestBuilder: okhttp3.HttpUrl baseUrl
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase updateLanguageUseCase
okio.Pipe: boolean canceled
retrofit2.RequestFactory$Builder: boolean gotUrl
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type ownerType
okio.internal.ZipEntry: java.lang.Long lastModifiedAtMillis
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object result
okio.FileHandle$FileHandleSink: long position
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase updateLanguageUseCase
okio.ForwardingFileSystem: okio.FileSystem delegate
okio.InputStreamSource: java.io.InputStream input
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt$lambda-1$1: com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt$lambda-1$1 INSTANCE
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: com.waldy.androidcurrencyexchange.data.remote.CurrencyApiService apiService
com.waldy.androidcurrencyexchange.ui.theme.ThemeKt: androidx.compose.material3.ColorScheme DarkColorScheme
com.waldy.androidcurrencyexchange.R$id: int input_a
retrofit2.ParameterHandler$FieldMap: boolean encoded
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: kotlinx.coroutines.flow.Flow language
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okhttp3.ResponseBody delegate
okio.PeekSource: long pos
retrofit2.ParameterHandler$Header: retrofit2.Converter valueConverter
retrofit2.RequestBuilder: okhttp3.MediaType contentType
okio.Buffer$UnsafeCursor: int start
androidx.compose.runtime.ParcelableSnapshotMutableFloatState: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry activityResultRegistry
okio.Pipe: okio.Sink sink
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2$1: int label
retrofit2.RequestFactory$Builder: boolean gotQueryMap
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2$1: int label
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$Value: int bitField0_
okio.internal.ZipFilesKt$readEntry$1: okio.BufferedSource $this_readEntry
okio.FileMetadata: boolean isRegularFile
kotlin.SafePublicationLazyImpl: java.lang.Object _value
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: boolean isLoading
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency JPY
retrofit2.BuiltInConverters$ToStringConverter: retrofit2.BuiltInConverters$ToStringConverter INSTANCE
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency KRW
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.waldy.androidcurrencyexchange.ui.util.Language: kotlin.enums.EnumEntries $ENTRIES
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
okio.internal.ZipFilesKt: int COMPRESSION_METHOD_DEFLATED
okio.FileMetadata: java.lang.Long size
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2$1: com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2 this$0
okio.Utf8: int MASK_4BYTES
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController savedStateRegistryController
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
okio.Throttler: long bytesPerSecond
okio.internal.ResourceFileSystem: okio.internal.ResourceFileSystem$Companion Companion
retrofit2.RequestFactory$Builder: okhttp3.MediaType contentType
okio.Pipe$source$1: okio.Pipe this$0
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel this$0
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: kotlin.coroutines.Continuation $continuation
com.waldy.androidcurrencyexchange.ui.util.Localization: androidx.compose.runtime.ProvidableCompositionLocal currentLanguage
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: int label
retrofit2.RequestFactory: java.lang.reflect.Method method
retrofit2.HttpServiceMethod$CallAdapted: retrofit2.CallAdapter callAdapter
okio.GzipSource: java.util.zip.Inflater inflater
okio.internal.ZipEntry: long crc
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt: kotlin.jvm.functions.Function2 lambda-1
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1: kotlin.jvm.functions.Function1 $onCurrencySelected
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: retrofit2.Call $this_await$inlined
retrofit2.RequestBuilder: okhttp3.Headers$Builder headersBuilder
retrofit2.Platform: boolean hasJava8Types
retrofit2.OptionalConverterFactory$OptionalConverter: retrofit2.Converter delegate
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1: androidx.compose.runtime.MutableState $showDialog$delegate
okio.-GzipSourceExtensions: byte SECTION_TRAILER
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: kotlinx.coroutines.Job debounceJob
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: int label
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
retrofit2.Retrofit: java.util.Map serviceMethodCache
retrofit2.RequestFactory$Builder: okhttp3.Headers headers
kotlinx.coroutines.CancelledContinuation: int _resumed
kotlinx.coroutines.CompletedExceptionally: int _handled
androidx.activity.ComponentActivity: int contentLayoutId
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String APP_NAME
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase getThemeUseCase
retrofit2.OkHttpCall$1: retrofit2.OkHttpCall this$0
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2$1: int label
retrofit2.Retrofit: java.util.List converterFactories
okio.FileMetadata: java.lang.Long createdAtMillis
okio.Buffer$UnsafeCursor: byte[] data
okio.Segment: boolean shared
okio.internal.-FileSystem$collectRecursively$1: java.lang.Object result
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4: java.util.List $items
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList onNewIntentListeners
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: java.util.concurrent.Executor callbackExecutor
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int arity
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_JPY
retrofit2.Invocation: java.util.List arguments
okio.internal.-FileSystem$collectRecursively$1: java.lang.Object L$3
okio.DeflaterSink: boolean closed
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.domain.model.Currency fromCurrency
com.waldy.androidcurrencyexchange.ui.util.StringKeys: int $stable
okio.FileMetadata: java.lang.Long lastModifiedAtMillis
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: retrofit2.OkHttpCall$ExceptionCatchingResponseBody this$0
retrofit2.ParameterHandler$Header: java.lang.String name
okio.Throttler: long waitByteCount
com.waldy.androidcurrencyexchange.ui.util.StringKeys: com.waldy.androidcurrencyexchange.ui.util.StringKeys INSTANCE
com.waldy.androidcurrencyexchange.di.AppContainer: int $stable
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: java.lang.Object L$1
okio.AsyncTimeout: java.util.concurrent.locks.Condition condition
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: int $stable
okio.Segment: okio.Segment prev
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String ERROR_PREFIX
retrofit2.RequestFactory$Builder: java.lang.String relativeUrl
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: int label
okio.-GzipSourceExtensions: int FHCRC
retrofit2.RequestFactory$Builder: boolean hasBody
retrofit2.Utils$GenericArrayTypeImpl: java.lang.reflect.Type componentType
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: java.util.concurrent.CompletableFuture future
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.RequestBody delegate
retrofit2.Retrofit$1: java.lang.Object[] emptyArgs
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String AUTHOR_HAU
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: kotlinx.coroutines.flow.StateFlow uiState
retrofit2.Platform: java.lang.reflect.Constructor lookupConstructor
retrofit2.KotlinExtensions$suspendAndThrow$1: int label
okio.internal.-Buffer: long OVERFLOW_DIGIT_START
kotlinx.coroutines.channels.BufferedChannel: long receivers
kotlin.jvm.internal.FunctionReference: int flags
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt$lambda-1$1: com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt$lambda-1$1 INSTANCE
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase getThemeUseCase
okio.Segment: boolean owner
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
retrofit2.ParameterHandler$PartMap: java.lang.reflect.Method method
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
retrofit2.ParameterHandler$Tag: java.lang.Class cls
okio.AsyncTimeout: long timeoutAt
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_USD
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String LIGHT
okio.internal.ZipFilesKt$readEntry$1: kotlin.jvm.internal.Ref$LongRef $size
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository userPreferencesRepository
okio.Segment: okio.Segment$Companion Companion
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1: java.lang.String $title
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1: kotlinx.coroutines.flow.Flow $this_unsafeTransform$inlined
retrofit2.RequestFactory$Builder: java.lang.reflect.Method method
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
androidx.activity.ComponentActivity: kotlin.Lazy defaultViewModelProviderFactory$delegate
okio.-DeprecatedUtf8: okio.-DeprecatedUtf8 INSTANCE
okio.Options: okio.ByteString[] byteStrings
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase getConversionRateUseCase
androidx.activity.ComponentActivity: kotlin.Lazy fullyDrawnReporter$delegate
okio.Buffer: long size
okio.internal.-FileSystem$commonListRecursively$1: java.lang.Object L$2
okio.ForwardingSink: okio.Sink delegate
retrofit2.Retrofit: java.util.concurrent.Executor callbackExecutor
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
com.waldy.androidcurrencyexchange.R$id: int tabLayout
okio.internal.-Path: okio.ByteString ANY_SLASH
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
okio.Throttler$sink$1: okio.Throttler this$0
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
okio.AsyncTimeout: long IDLE_TIMEOUT_MILLIS
retrofit2.Response: java.lang.Object body
okio.internal.-FileSystem$collectRecursively$1: boolean Z$0
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger nextLocalRequestCode
com.waldy.androidcurrencyexchange.di.AppContainer: android.content.Context context
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: java.text.NumberFormat numberFormat
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1: java.util.List $options
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore _viewModelStore
okio.ByteString: byte[] data
okio.Buffer: okio.Segment head
okio.CipherSink: boolean closed
com.waldy.androidcurrencyexchange.data.local.CurrencyCache: int $stable
okio.internal.ResourceFileSystem: okio.Path ROOT
com.waldy.androidcurrencyexchange.R$drawable: int ic_launcher_background
retrofit2.BuiltInConverters$UnitResponseBodyConverter: retrofit2.BuiltInConverters$UnitResponseBodyConverter INSTANCE
okio.-GzipSourceExtensions: int FNAME
okio.AsyncTimeout: okio.AsyncTimeout$Companion Companion
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_CAD
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: java.util.Map rates
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1: java.lang.String $theme
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
okio.AsyncTimeout: java.util.concurrent.locks.ReentrantLock lock
okio.FileSystem: okio.FileSystem RESOURCES
androidx.datastore.preferences.PreferencesProto$Value: int BYTES_FIELD_NUMBER
okio.Segment: byte[] data
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys: androidx.datastore.preferences.core.Preferences$Key APP_LANGUAGE
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1: kotlin.jvm.functions.Function0 $onDismiss
retrofit2.RequestBuilder: okhttp3.RequestBody body
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation$filter$offsetMapping$1: java.lang.String $integerPart
okio.Pipe$source$1: okio.Timeout timeout
retrofit2.ParameterHandler$HeaderMap: retrofit2.Converter valueConverter
retrofit2.RequestFactory$Builder: java.util.regex.Pattern PARAM_URL_REGEX
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_AUD
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
okio.-GzipSourceExtensions: int FCOMMENT
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType ANIMATED_WEBP
okio.-Base64: byte[] BASE64_URL_SAFE
okio.internal.ZipFilesKt: int BIT_FLAG_ENCRYPTED
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.DispatchedCoroutine: int _decision
okio.AsyncTimeout$source$1: okio.Source $source
kotlin.jvm.internal.Lambda: int arity
retrofit2.ParameterHandler$QueryName: retrofit2.Converter nameConverter
okio.internal.ResourceFileSystem: kotlin.Lazy roots$delegate
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: int $stable
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String GENERAL
retrofit2.RequestFactory$Builder: boolean gotBody
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1: kotlin.jvm.functions.Function1 $onSelect
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
okio.Options: okio.Options$Companion Companion
com.waldy.androidcurrencyexchange.CurrencyApplication: com.waldy.androidcurrencyexchange.di.AppContainer container
okio.ForwardingSource: okio.Source delegate
retrofit2.ParameterHandler$HeaderMap: java.lang.reflect.Method method
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: int $stable
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
okio.-GzipSourceExtensions: byte SECTION_HEADER
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency USD
retrofit2.BuiltInConverters$VoidResponseBodyConverter: retrofit2.BuiltInConverters$VoidResponseBodyConverter INSTANCE
retrofit2.RequestFactory: okhttp3.HttpUrl baseUrl
retrofit2.ParameterHandler$Path: int p
okio.-DeprecatedUpgrade: okio.-DeprecatedOkio Okio
com.waldy.androidcurrencyexchange.R$xml: int data_extraction_rules
okio.HashingSink: java.security.MessageDigest messageDigest
okio.FileHandle$FileHandleSource: long position
okio.FileHandle$FileHandleSink: okio.FileHandle fileHandle
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: retrofit2.Call $this_await$inlined
retrofit2.ParameterHandler$Body: int p
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
okio.NioFileSystemWrappingFileSystem: java.nio.file.FileSystem nioFileSystem
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
com.waldy.androidcurrencyexchange.ui.theme.ThemeKt: androidx.compose.material3.ColorScheme LightColorScheme
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys INSTANCE
okio.SegmentPool: okio.Segment LOCK
okio.Throttler: long allocatedUntil
okio.CipherSource: boolean final
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String BACK
okio.CipherSource: boolean closed
okio.FileSystem: okio.FileSystem SYSTEM
retrofit2.RequestBuilder: java.util.regex.Pattern PATH_TRAVERSAL
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long LatteFoam
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4: kotlin.jvm.functions.Function1 $onCurrencySelected
okio.internal.ZipFilesKt: int COMPRESSION_METHOD_STORED
kotlin.jvm.internal.CallableReference: boolean isTopLevel
okio.Pipe: okio.Buffer buffer
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1: kotlin.jvm.functions.Function1 $onLanguageChange
retrofit2.Retrofit$1: retrofit2.Platform platform
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object L$0
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1: com.waldy.androidcurrencyexchange.di.AppContainer $container
retrofit2.ParameterHandler$Path: boolean encoded
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency GBP
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel this$0
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel this$0
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
retrofit2.ParameterHandler$Path: retrofit2.Converter valueConverter
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4: androidx.compose.runtime.MutableState $showDialog$delegate$inlined
okio.-GzipSourceExtensions: byte SECTION_BODY
com.waldy.androidcurrencyexchange.R$layout: int currency_exchange_view
okio.AsyncTimeout: long IDLE_TIMEOUT_NANOS
androidx.compose.foundation.lazy.layout.DefaultLazyKey: android.os.Parcelable$Creator CREATOR
retrofit2.ParameterHandler$FieldMap: retrofit2.Converter valueConverter
com.waldy.androidcurrencyexchange.R$layout: int ratio_view
okio.CipherSource: javax.crypto.Cipher cipher
com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository userPreferencesRepository
okio.ZipFileSystem: okio.Path zipPath
okio.internal.-ByteString: char[] HEX_DIGIT_CHARS
okio.HashingSink: okio.HashingSink$Companion Companion
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.StateFlow theme
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation: int $stable
retrofit2.Invocation: java.lang.reflect.Method method
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type upperBound
okio.Pipe: boolean sourceClosed
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String SETTINGS
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1: kotlin.jvm.internal.Ref$ObjectRef $lastAccessedAtMillis
retrofit2.converter.gson.GsonRequestBodyConverter: com.google.gson.TypeAdapter adapter
retrofit2.RequestBuilder: okhttp3.Request$Builder requestBuilder
okio.FileHandle$FileHandleSink: boolean closed
kotlin.collections.AbstractList: kotlin.collections.AbstractList$Companion Companion
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase: int $stable
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_CNY
okio.RealBufferedSink: okio.Sink sink
okio.internal.ZipEntry: boolean isDirectory
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
okio.ZipFileSystem: java.lang.String comment
okio.SegmentedByteString: int[] directory
kotlin.jvm.internal.CallableReference: java.lang.String signature
kotlinx.coroutines.InvokeOnCancelling: int _invoked
okio.FileMetadata: okio.Path symlinkTarget
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: retrofit2.Call $this_awaitResponse$inlined
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase updateThemeUseCase
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
retrofit2.ParameterHandler$PartMap: retrofit2.Converter valueConverter
com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase: com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository userPreferencesRepository
retrofit2.ParameterHandler$Part: okhttp3.Headers headers
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
retrofit2.RequestFactory$Builder: retrofit2.Retrofit retrofit
okio.ByteString: okio.ByteString$Companion Companion
okio.HashingSource: java.security.MessageDigest messageDigest
retrofit2.ParameterHandler$Field: boolean encoded
retrofit2.ParameterHandler$Body: retrofit2.Converter converter
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1: okio.BufferedSource $this_readOrSkipLocalHeader
com.waldy.androidcurrencyexchange.R$layout: int main_activity
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1: com.waldy.androidcurrencyexchange.domain.model.Currency $it
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
retrofit2.ParameterHandler$Part: java.lang.reflect.Method method
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CHOOSE_LANGUAGE
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
okio.ByteString: okio.ByteString EMPTY
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: androidx.compose.foundation.pager.PagerState $pagerState
com.waldy.androidcurrencyexchange.CurrencyApplication: int $stable
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: java.lang.Object L$0
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: char groupingSeparator
okio.JvmFileHandle: java.io.RandomAccessFile randomAccessFile
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepositoryKt: kotlin.reflect.KProperty[] $$delegatedProperties
retrofit2.RequestFactory$Builder: boolean gotQuery
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2$1: java.lang.Object L$0
retrofit2.Retrofit: java.util.List callAdapterFactories
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
okio.internal.ZipFilesKt$readEntry$1: kotlin.jvm.internal.Ref$LongRef $compressedSize
retrofit2.OkHttpCall$1: retrofit2.Callback val$callback
com.waldy.androidcurrencyexchange.R$string: int app_name
okio.PeekSource: okio.Segment expectedSegment
okio.internal.FixedLengthSource: boolean truncate
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String FROM_AMOUNT
okio.FileHandle: boolean closed
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type rawType
com.waldy.androidcurrencyexchange.ui.util.Language: com.waldy.androidcurrencyexchange.ui.util.Language VIETNAMESE
okhttp3.ResponseBody: java.io.Reader reader
okio.NioFileSystemFileHandle: java.nio.channels.FileChannel fileChannel
okio.internal.ZipEntry: java.lang.String comment
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: double rate
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: kotlinx.coroutines.flow.Flow theme
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: android.content.Context context
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.domain.repository.CurrencyRepository currencyRepository
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$2: java.util.List $items
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2: int label
com.waldy.androidcurrencyexchange.R$style: int Theme_AndroidCurrencyExchange
okio.internal.ZipFilesKt: int HEADER_ID_EXTENDED_TIMESTAMP
okio.RealBufferedSource: okio.Buffer bufferField
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3: java.lang.Object L$0
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
retrofit2.ParameterHandler$HeaderMap: int p
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
retrofit2.ParameterHandler$QueryMap: int p
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
okio.CipherSink: okio.BufferedSink sink
retrofit2.Retrofit: boolean validateEagerly
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String VIETNAMESE
okio.internal.ZipFilesKt$readEntry$1: long $requiredZip64ExtraSize
retrofit2.DefaultCallAdapterFactory$1: retrofit2.DefaultCallAdapterFactory this$0
retrofit2.RequestBuilder: boolean hasBody
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: int $stable
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
retrofit2.RequestFactory$Builder: java.lang.String PARAM
retrofit2.OkHttpCall: java.lang.Throwable creationFailure
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel this$0
okio.AsyncTimeout$source$1: okio.AsyncTimeout this$0
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
com.waldy.androidcurrencyexchange.R$drawable: int vietnam
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
retrofit2.RequestFactory$Builder: boolean isMultipart
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
okio.Throttler: java.util.concurrent.locks.ReentrantLock lock
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: java.lang.String $theme
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase getLanguageUseCase
retrofit2.ParameterHandler$QueryName: boolean encoded
okio.GzipSink: okio.RealBufferedSink sink
androidx.activity.ComponentActivity: boolean dispatchingOnMultiWindowModeChanged
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
retrofit2.ParameterHandler$RawPart: retrofit2.ParameterHandler$RawPart INSTANCE
okio.Options: int[] trie
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: int $index
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
okio.Buffer$UnsafeCursor: long offset
okio.-GzipSourceExtensions: byte SECTION_DONE
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: java.lang.String date
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt: com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt INSTANCE
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
okio.internal.ZipFilesKt: int ZIP64_EOCD_RECORD_SIGNATURE
okio.internal.EocdRecord: long centralDirectoryOffset
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt: com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt INSTANCE
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long DarkEspresso
okio.GzipSink: boolean closed
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.MutableStateFlow _language
retrofit2.BuiltInConverters$RequestBodyConverter: retrofit2.BuiltInConverters$RequestBodyConverter INSTANCE
retrofit2.RequestBuilder: java.lang.String method
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys: androidx.datastore.preferences.core.Preferences$Key APP_THEME
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType ANIMATED_AVIF
com.waldy.androidcurrencyexchange.R$mipmap: int ic_launcher_round
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
retrofit2.KotlinExtensions$await$4$2: kotlinx.coroutines.CancellableContinuation $continuation
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
retrofit2.HttpServiceMethod: retrofit2.RequestFactory requestFactory
okio.Timeout: long timeoutNanos
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: java.util.List $options
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long OffWhiteText
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1: kotlinx.coroutines.CoroutineScope $scope
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency CAD
retrofit2.RequestFactory: okhttp3.MediaType contentType
okio.-GzipSourceExtensions: int FEXTRA
okio.FileSystem: okio.Path SYSTEM_TEMPORARY_DIRECTORY
retrofit2.RequestFactory$Builder: boolean isKotlinSuspendFunction
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long CoffeeBrown
okio.ZipFileSystem: okio.ZipFileSystem$Companion Companion
okio.Utf8: int MASK_2BYTES
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: com.waldy.androidcurrencyexchange.domain.model.Currency $to
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.domain.model.Currency toCurrency
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: java.lang.Object L$0
com.waldy.androidcurrencyexchange.R$drawable: int app_logo
retrofit2.Retrofit$1: java.lang.Class val$service
okio.Utf8: char REPLACEMENT_CHARACTER
okio.Buffer$inputStream$1: okio.Buffer this$0
retrofit2.ParameterHandler$FieldMap: int p
okio.Buffer$UnsafeCursor: int end
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$1: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$1 INSTANCE
retrofit2.Retrofit$Builder: java.util.List callAdapterFactories
okio.internal.EocdRecord: long entryCount
okio.InflaterSource: boolean closed
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.reflect.Type responseType
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String AUTHOR_WALDY
okio.FileHandle: int openStreamCount
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String VERSION
okio.internal.ZipEntry: java.util.List children
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
retrofit2.RequestBuilder: java.lang.String PATH_SEGMENT_ALWAYS_ENCODE_SET
okio.GzipSink: java.util.zip.CRC32 crc
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.data.local.CurrencyCache currencyCache
okio.Segment: int SIZE
retrofit2.RequestFactory$Builder: java.lang.annotation.Annotation[][] parameterAnnotationsArray
retrofit2.RequestFactory: boolean hasBody
retrofit2.RequestFactory$Builder: java.lang.String httpMethod
okio.CipherSource: okio.BufferedSource source
retrofit2.RequestFactory: java.lang.String httpMethod
retrofit2.Retrofit$Builder: java.util.concurrent.Executor callbackExecutor
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
com.waldy.androidcurrencyexchange.ui.util.StringKeys: java.lang.String CURRENCY_CONVERTER
okio.internal.-Path: okio.ByteString DOT
okio.internal.ZipFilesKt$openZip$1: okio.internal.ZipFilesKt$openZip$1 INSTANCE
retrofit2.RequestBuilder: okhttp3.MultipartBody$Builder multipartBuilder
okio.CipherSink: javax.crypto.Cipher cipher
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String fromAmount
okio.internal.EocdRecord: int commentByteCount
okio.SegmentPool: int HASH_BUCKET_COUNT
retrofit2.RequestFactory$Builder: java.util.regex.Pattern PARAM_NAME_REGEX
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
okio.Path: okio.Path get(java.lang.String)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: GetConversionResult(double,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
okio.Path$Companion: Path$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
okio.ZipFileSystem: java.util.List listOrNull(okio.Path)
androidx.compose.ui.window.PopupLayout: void setPopupContentSize-fhxjrPA(androidx.compose.ui.unit.IntSize)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
okio.RealBufferedSource: long indexOfElement(okio.ByteString)
okio.internal.ZipFilesKt: okio.FileMetadata readLocalHeader(okio.BufferedSource,okio.FileMetadata)
okio.internal.-RealBufferedSource: void commonReadFully(okio.RealBufferedSource,byte[])
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
okio.Path: okio.Path resolve(okio.ByteString)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
androidx.core.view.WindowInsetsCompat$Impl: boolean isVisible(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
okio.Buffer: okio.Buffer writeUtf8CodePoint(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
okio.SegmentedByteString: java.lang.String string(java.nio.charset.Charset)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
retrofit2.Invocation: java.lang.reflect.Method method()
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: void CurrencySelector(com.waldy.androidcurrencyexchange.domain.model.Currency,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
okio.Buffer: okio.BufferedSink writeInt(int)
okio.Options: int lastIndexOf(okio.ByteString)
okio.internal.-Buffer: long commonReadHexadecimalUnsignedLong(okio.Buffer)
okio.HashingSink: okio.HashingSink hmacSha512(okio.Sink,okio.ByteString)
okio.RealBufferedSink: void write(okio.Buffer,long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long,long)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
okio.ByteString$Companion: okio.ByteString of$default(okio.ByteString$Companion,byte[],int,int,int,java.lang.Object)
okio.internal.-RealBufferedSource: java.lang.String commonReadUtf8Line(okio.RealBufferedSource)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.compose.ui.text.android.selection.Api34SegmentFinder: android.text.SegmentFinder toAndroidSegmentFinder$ui_text_release(androidx.compose.ui.text.android.selection.SegmentFinder)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.RootForTest getRootForTest()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: java.text.NumberFormat access$getNumberFormat$p(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel)
okio.Segment$Companion: Segment$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.Buffer: long readLongLe()
okio.internal.-Buffer: int commonSelect(okio.Buffer,okio.Options)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.compose.foundation.text.HandleState: androidx.compose.foundation.text.HandleState[] values()
okhttp3.ResponseBody: void close()
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream)
okio.Buffer: int select(okio.Options)
okio.BufferedSource: long readLongLe()
okio.SegmentedByteString: boolean equals(java.lang.Object)
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream,long)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt: com.waldy.androidcurrencyexchange.ui.util.Language SettingsRoute$lambda$1(androidx.compose.runtime.State)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit CurrencyExchangeRoute$lambda$5(int,androidx.compose.runtime.Composer,int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
okio.Buffer: okio.BufferedSink writeLong(long)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
okio.Throttler$source$1: long read(okio.Buffer,long)
retrofit2.Response: okhttp3.Response raw()
okio.internal.-Path: okio.Path commonToPath(java.lang.String,boolean)
com.google.android.material.tabs.TabLayout: void setTabTextColors(android.content.res.ColorStateList)
androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
okio.CipherSource: void close()
okio.FileHandle$FileHandleSource: long read(okio.Buffer,long)
okio.internal.ResourceFileSystem$roots$2: java.util.List invoke()
okio.NioFileSystemFileHandle: long protectedSize()
okio.internal.-ByteString: boolean commonEquals(okio.ByteString,java.lang.Object)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
okio.Path: okio.Path resolve(okio.Path,boolean)
androidx.recyclerview.widget.RecyclerView: int getScrollState()
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: boolean component2()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
okio.RealBufferedSink: okio.Buffer getBuffer()
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
okio.Path$Companion: okio.Path get(java.io.File)
okio.ByteString: okio.ByteString hmacSha256(okio.ByteString)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
okio.internal.ZipFilesKt: java.lang.Long dosDateTimeToEpochMillis(int,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.compose.ui.platform.AndroidComposeView: void setLayoutDirection(androidx.compose.ui.unit.LayoutDirection)
androidx.compose.ui.graphics.layer.ViewLayer: void setCanUseCompositingLayer$ui_graphics_release(boolean)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
okio.SegmentedByteString: byte[] toByteArray()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback(retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter,java.util.concurrent.CompletableFuture)
retrofit2.SkipCallbackExecutorImpl: java.lang.Class annotationType()
okio.SegmentedByteString: int getSize$okio()
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.AsyncTimeout: void timedOut()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
okio.GzipSink: void write(okio.Buffer,long)
retrofit2.ServiceMethod: java.lang.Object invoke(java.lang.Object[])
com.google.android.material.tabs.TabLayout: void setTabRippleColorResource(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
okio.-SegmentedByteString: long reverseBytes(long)
okio.JvmFileHandle: void protectedClose()
okio.Source: okio.Timeout timeout()
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: CurrencyRepositoryImpl(com.waldy.androidcurrencyexchange.data.remote.CurrencyApiService,com.waldy.androidcurrencyexchange.data.local.CurrencyCache)
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
okio.FileSystem: okio.Sink sink(okio.Path,boolean)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
okio.internal.-Buffer: boolean commonEquals(okio.Buffer,java.lang.Object)
com.google.android.material.divider.MaterialDivider: int getDividerInsetEnd()
androidx.core.widget.TextViewCompat$Api34Impl: void setLineHeight(android.widget.TextView,int,float)
okio.RealBufferedSink: okio.BufferedSink writeLongLe(long)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
androidx.compose.ui.platform.AndroidComposeViewVerificationHelperMethodsN: void setPointerIcon(android.view.View,androidx.compose.ui.input.pointer.PointerIcon)
okio.Buffer$UnsafeCursor: int next()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$2$1: java.lang.Object invoke(java.lang.Object)
retrofit2.Retrofit: retrofit2.Converter nextResponseBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
okio.internal.-ByteString: okio.ByteString commonToAsciiUppercase(okio.ByteString)
retrofit2.OkHttpCall: retrofit2.OkHttpCall clone()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: java.lang.Object invokeSuspend(java.lang.Object)
okio.Buffer: long read(okio.Buffer,long)
okio.ForwardingSink: java.lang.String toString()
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt: kotlin.jvm.functions.Function4 getLambda-1$app_release()
okio.ZipFileSystem: okio.FileHandle openReadOnly(okio.Path)
okio.internal.ZipFilesKt: okio.internal.EocdRecord readEocdRecord(okio.BufferedSource)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.android.material.chip.Chip: void setRippleColorResource(int)
okio.Buffer: okio.Buffer write(okio.ByteString)
okio.internal.ResourceFileSystem: void createSymlink(okio.Path,okio.Path)
okio.ByteString: boolean equals(java.lang.Object)
okio.JvmSystemFileSystem: okio.FileHandle openReadWrite(okio.Path,boolean,boolean)
com.waldy.androidcurrencyexchange.domain.model.Currency: java.lang.String getFullName()
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorHeight(int)
retrofit2.Response: int code()
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
okio.Buffer: long readDecimalLong()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void ThemeSelector(java.lang.String,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit CurrencySelector$lambda$21(com.waldy.androidcurrencyexchange.domain.model.Currency,kotlin.jvm.functions.Function1,int,androidx.compose.runtime.Composer,int)
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: BuiltInConverters$StreamingResponseBodyConverter()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
okio.GzipSink: java.util.zip.Deflater -deprecated_deflater()
androidx.core.os.BundleCompat$Api33Impl: java.util.ArrayList getParcelableArrayList(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
androidx.core.view.ViewCompat$Api24Impl: void dispatchFinishTemporaryDetach(android.view.View)
okio.Okio: okio.HashingSink hashingSink(okio.Sink,javax.crypto.Mac)
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okio.ForwardingSource: okio.Timeout timeout()
okio.Buffer: int read(java.nio.ByteBuffer)
okio.Pipe: okio.Source -deprecated_source()
okio.Buffer: okio.BufferedSink emit()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.Timeout: okio.Timeout deadlineNanoTime(long)
com.google.gson.reflect.TypeToken: TypeToken()
okio.BufferedSink: okio.BufferedSink write(byte[])
okio.internal.-SegmentedByteString: boolean commonRangeEquals(okio.SegmentedByteString,int,byte[],int,int)
okio.Okio__JvmOkioKt: okio.Sink sink$default(java.io.File,boolean,int,java.lang.Object)
okio.ByteString: void write$okio(okio.Buffer,int,int)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.util.concurrent.CompletableFuture adapt(retrofit2.Call)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
androidx.compose.ui.window.PopupLayout: void setParentLayoutDirection(androidx.compose.ui.unit.LayoutDirection)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
okio.Path: int hashCode()
okio.internal.-Buffer: void commonReadFully(okio.Buffer,byte[])
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
okio.FileSystem: kotlin.sequences.Sequence listRecursively(okio.Path,boolean)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.compose.ui.text.android.CanvasCompatQ: void drawDoubleRoundRect(android.graphics.Canvas,android.graphics.RectF,float[],android.graphics.RectF,float[],android.graphics.Paint)
okio.Sink: void flush()
okio.ZipFileSystem: java.util.List list(okio.Path)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit CurrencyExchangeScreen$lambda$10(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,int,androidx.compose.runtime.Composer,int)
androidx.compose.foundation.text.HandleState: androidx.compose.foundation.text.HandleState valueOf(java.lang.String)
okio.internal.-FileSystem$collectRecursively$1: -FileSystem$collectRecursively$1(kotlin.coroutines.Continuation)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
okio.Buffer: byte getByte(long)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType[] values()
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2: UserPreferencesRepository$special$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector)
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
androidx.core.view.DisplayCutoutCompat$Api30Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Insets,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Insets)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.Object adapt(retrofit2.Call)
okio.FileMetadata: java.lang.Object extra(kotlin.reflect.KClass)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
okio.internal.-Path: okio.Path commonResolve(okio.Path,java.lang.String,boolean)
okio.ZipFileSystem: okio.Source source(okio.Path)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
okio.FileMetadata: java.lang.String toString()
com.google.android.material.tabs.TabLayout: void setElevation(float)
okio.InputStreamSource: okio.Timeout timeout()
okio.internal.ResourceFileSystem: java.util.List list(okio.Path)
okio.BufferedSource: short readShort()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
androidx.compose.foundation.layout.IntrinsicSize: androidx.compose.foundation.layout.IntrinsicSize valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.compose.foundation.text.input.internal.undo.TextEditType: androidx.compose.foundation.text.input.internal.undo.TextEditType[] values()
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
okio.FileSystem: okio.Sink appendingSink(okio.Path)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.draganddrop.DragAndDropManager getDragAndDropManager()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
okio.internal.-Buffer: long commonReadLong(okio.Buffer)
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: CurrencyRepositoryImpl$getConversionRate$1(com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl,com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency,kotlin.coroutines.Continuation)
retrofit2.Retrofit: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
okio.NioFileSystemFileHandle: void protectedFlush()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.google.android.material.carousel.CarouselStrategy$StrategyType: com.google.android.material.carousel.CarouselStrategy$StrategyType[] values()
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getOffWhiteText()
okio.ForwardingTimeout: long deadlineNanoTime()
androidx.compose.ui.graphics.layer.ViewLayer: boolean getCanUseCompositingLayer$ui_graphics_release()
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: boolean equals(java.lang.Object)
androidx.compose.ui.window.PopupLayout: void setTestTag(java.lang.String)
okio.Okio: okio.FileSystem openZip(okio.FileSystem,okio.Path)
retrofit2.HttpException: retrofit2.Response response()
okio.RealBufferedSource: int readIntLe()
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.compose.ui.autofill.AutofillApi26Helper: void setAutofillType(android.view.ViewStructure,int)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: OkHttpCall$ExceptionCatchingResponseBody$1(retrofit2.OkHttpCall$ExceptionCatchingResponseBody,okio.Source)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
okio.Buffer: okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: SettingsViewModel$1(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel,kotlin.coroutines.Continuation)
okio.Okio: okio.Source source(java.io.InputStream)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
com.google.android.material.tabs.TabLayout: void setScrollAnimatorListener(android.animation.Animator$AnimatorListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
okio.Throttler: void bytesPerSecond(long,long,long)
androidx.core.view.DisplayCutoutCompat$Api30Impl: android.graphics.Insets getWaterfallInsets(android.view.DisplayCutout)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
okio.Throttler: Throttler()
okhttp3.Protocol: okhttp3.Protocol[] values()
okio.internal.-Buffer: int commonHashCode(okio.Buffer)
okio.internal.ResourceFileSystem: okio.Path access$getROOT$cp()
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
okio.internal.ZipEntry: boolean isDirectory()
androidx.compose.ui.contentcapture.AndroidContentCaptureManager$ViewTranslationHelperMethods: void onVirtualViewTranslationResponses(androidx.compose.ui.contentcapture.AndroidContentCaptureManager,android.util.LongSparseArray)
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
okio.Okio: okio.Sink sink(java.io.File)
okio.Buffer: java.lang.String readString(java.nio.charset.Charset)
okio.BufferedSource: java.io.InputStream inputStream()
com.google.android.material.tabs.TabLayout: void setTabMode(int)
okio.Buffer: okio.BufferedSink writeShortLe(int)
androidx.lifecycle.ViewModel: void addCloseable(java.lang.String,java.lang.AutoCloseable)
retrofit2.BuiltInConverters$ToStringConverter: java.lang.String convert(java.lang.Object)
okio.Buffer: okio.BufferedSink writeUtf8CodePoint(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
okio.HashingSink: okio.HashingSink sha256(okio.Sink)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
androidx.compose.ui.graphics.layer.ViewLayerVerificationHelper28: void resetPivot(android.view.View)
okio.Throttler: void bytesPerSecond$default(okio.Throttler,long,long,long,int,java.lang.Object)
okio.ByteString: boolean startsWith(byte[])
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okio.AsyncTimeout$Watchdog: AsyncTimeout$Watchdog()
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okio.internal.-Path: okio.ByteString access$getSLASH$p()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
androidx.compose.ui.text.font.TypefaceHelperMethodsApi28: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
okhttp3.internal.publicsuffix.PublicSuffixDatabase: PublicSuffixDatabase()
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon create(android.graphics.Bitmap,float,float)
androidx.compose.ui.window.PopupLayout: void setContent(kotlin.jvm.functions.Function2)
okio.ByteString: void readObject(java.io.ObjectInputStream)
androidx.compose.ui.platform.actionmodecallback.MenuItemOption: androidx.compose.ui.platform.actionmodecallback.MenuItemOption valueOf(java.lang.String)
okio.internal.ResourceFileSystem: okio.Sink sink(okio.Path,boolean)
okio.HashingSink: okio.HashingSink hmacSha1(okio.Sink,okio.ByteString)
androidx.compose.ui.window.PopupLayout: android.view.View getViewRoot()
retrofit2.Platform: java.util.List defaultConverterFactories()
okio.internal.-Path: java.lang.String commonName(okio.Path)
okio.internal.-ByteString: java.lang.String commonBase64(okio.ByteString)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.compose.ui.text.android.CanvasCompatQ: void enableZ(android.graphics.Canvas)
okio.Buffer: boolean isOpen()
androidx.compose.ui.platform.TextToolbarStatus: androidx.compose.ui.platform.TextToolbarStatus[] values()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteShortLe(okio.RealBufferedSink,int)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
okio.RealBufferedSink: okio.BufferedSink writeShort(int)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
okio.Buffer: okio.Buffer writeInt(int)
kotlin.Metadata: java.lang.String xs()
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.ViewConfiguration getViewConfiguration()
okio.ForwardingSink: okio.Sink -deprecated_delegate()
kotlin.Metadata: int[] mv()
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt: kotlin.jvm.functions.Function2 getLambda-1$app_release()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
androidx.compose.ui.window.PopupLayout: java.lang.String getTestTag()
okio.RealBufferedSink: void flush()
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.tabs.TabLayout: int getTabScrollRange()
okio.FileSystem: void createDirectories(okio.Path)
okio.RealBufferedSource$inputStream$1: RealBufferedSource$inputStream$1(okio.RealBufferedSource)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
okio.ZipFileSystem: void createDirectory(okio.Path,boolean)
okio.GzipSink: java.util.zip.Deflater deflater()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
retrofit2.BuiltInConverters$VoidResponseBodyConverter: BuiltInConverters$VoidResponseBodyConverter()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: java.lang.Object invoke(androidx.datastore.preferences.core.MutablePreferences,kotlin.coroutines.Continuation)
retrofit2.KotlinExtensions$await$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
okio.internal.-Buffer: int selectPrefix$default(okio.Buffer,okio.Options,boolean,int,java.lang.Object)
com.google.android.material.divider.MaterialDivider: void setDividerInsetStartResource(int)
okio.ByteString: int indexOf(okio.ByteString,int)
retrofit2.CompletableFutureCallAdapterFactory: CompletableFutureCallAdapterFactory()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.tabs.TabLayout: void setTabIconTintResource(int)
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe()
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: java.lang.Object invokeSuspend(java.lang.Object)
okio.Path: okio.ByteString nameBytes()
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: java.lang.Object convert(java.lang.Object)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
okio.Path: java.nio.file.Path toNioPath()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: java.lang.Object convert(java.lang.Object)
androidx.lifecycle.ViewModel: java.lang.AutoCloseable getCloseable(java.lang.String)
com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase: UpdateThemeUseCase(com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository)
androidx.compose.ui.node.LayoutNode$LayoutState: androidx.compose.ui.node.LayoutNode$LayoutState[] values()
kotlin.collections.AbstractList: java.util.Iterator iterator()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
com.waldy.androidcurrencyexchange.MainActivityScreenKt: long CustomTabRow$lambda$10$lambda$9$lambda$8$lambda$4(androidx.compose.runtime.State)
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api29Impl: void notifyViewsDisappeared(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,long[])
okio.Buffer: int read(byte[])
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
com.google.android.material.button.MaterialButtonGroup: void setButtonSizeChange(com.google.android.material.shape.StateListSizeChange)
androidx.compose.ui.text.android.StaticLayoutFactory26: void setJustificationMode(android.text.StaticLayout$Builder,int)
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
okio.AsyncTimeout$Companion: AsyncTimeout$Companion()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4: void invoke(androidx.compose.runtime.Composer,int)
androidx.compose.ui.platform.CalculateMatrixToWindowApi29: void calculateMatrixToWindow-EL8BTi8(android.view.View,float[])
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
okio.ByteString: okio.ByteString toAsciiLowercase()
okio.FileHandle: int access$getOpenStreamCount$p(okio.FileHandle)
com.waldy.androidcurrencyexchange.R$drawable: R$drawable()
okio.internal.-Path: int commonHashCode(okio.Path)
okio.internal.-Buffer: okio.Buffer commonWrite(okio.Buffer,byte[],int,int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.compose.ui.platform.AndroidComposeView: void setConfigurationChangeObserver(kotlin.jvm.functions.Function1)
okio.-Base64: byte[] getBASE64_URL_SAFE()
okio.JvmFileHandle: long protectedSize()
com.google.android.material.divider.MaterialDivider: MaterialDivider(android.content.Context,android.util.AttributeSet)
okio.internal.-Path: okio.ByteString access$toSlash(java.lang.String)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int fallbackOnLegacyTextField(android.view.inputmethod.HandwritingGesture,kotlin.jvm.functions.Function1)
com.google.android.material.button.MaterialButtonGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
kotlin.collections.AbstractList: int hashCode()
okio.HashingSource: long read(okio.Buffer,long)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
okio.Buffer$outputStream$1: void write(int)
okio.FileSystem: void atomicMove(okio.Path,okio.Path)
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type getOwnerType()
okio.Buffer: short readShort()
okio.RealBufferedSource: boolean request(long)
com.google.android.material.carousel.CarouselStrategy$StrategyType: com.google.android.material.carousel.CarouselStrategy$StrategyType valueOf(java.lang.String)
okio.internal.-Buffer: long commonExpandBuffer(okio.Buffer$UnsafeCursor,int)
okio.RealBufferedSource: okio.ByteString readByteString()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
androidx.compose.ui.text.android.CanvasCompatO: boolean clipOutPath(android.graphics.Canvas,android.graphics.Path)
okio.Throttler: long take$okio(long)
okio.internal.FixedLengthSource: void truncateToSize(okio.Buffer,long)
com.google.android.material.chip.Chip: void setCheckable(boolean)
com.google.android.material.tabs.TabLayout: void setTabGravity(int)
okio.HashingSource: HashingSource(okio.Source,javax.crypto.Mac)
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean isWebp()
retrofit2.ParameterHandler: void apply(retrofit2.RequestBuilder,java.lang.Object)
okio.BufferedSink: okio.BufferedSink writeLongLe(long)
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
androidx.compose.ui.platform.RenderNodeApi29VerificationHelper: void setRenderEffect(android.graphics.RenderNode,androidx.compose.ui.graphics.RenderEffect)
androidx.graphics.path.ConicConverter: int internalConicToQuadratics(float[],int,float[],float,float)
retrofit2.ParameterHandler$Tag: ParameterHandler$Tag(java.lang.Class)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
retrofit2.RequestFactory$Builder: retrofit2.RequestFactory build()
androidx.activity.ComponentActivity: void reportFullyDrawn()
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
okio.Buffer: long indexOf(byte)
retrofit2.ParameterHandler$Query: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: okhttp3.MediaType contentType()
retrofit2.RequestBuilder: void addPart(okhttp3.MultipartBody$Part)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWrite(okio.RealBufferedSink,okio.Source,long)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
kotlin.collections.AbstractList: java.util.List subList(int,int)
okio.Buffer: void require(long)
com.google.android.material.tabs.TabLayout: int getTabIndicatorAnimationMode()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
okio.CipherSource: void refill()
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation$filter$offsetMapping$1: int transformedToOriginal(int)
okio.internal.-Buffer: int commonNext(okio.Buffer$UnsafeCursor)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: kotlinx.coroutines.flow.StateFlow getUiState()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: DefaultCallAdapterFactory$ExecutorCallbackCall$1(retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall,retrofit2.Callback)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
androidx.compose.animation.core.MutatePriority: androidx.compose.animation.core.MutatePriority valueOf(java.lang.String)
okio.ForwardingFileSystem: void delete(okio.Path,boolean)
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString,int,int)
okio.ByteString: boolean rangeEquals(int,byte[],int,int)
androidx.graphics.path.PathIteratorPreApi34Impl: boolean internalPathIteratorHasNext(long)
okio.ForwardingSource: okio.Source -deprecated_delegate()
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
okio.JvmSystemFileSystem: okio.Source source(okio.Path)
okio.internal.-RealBufferedSink: void commonClose(okio.RealBufferedSink)
okio.Options: boolean contains(java.lang.Object)
okio.Pipe$sink$1: void close()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
okio.CipherSource: okio.Timeout timeout()
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: com.waldy.androidcurrencyexchange.data.local.CurrencyCache access$getCache$p(com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl)
com.google.android.material.button.MaterialButton: void setCheckedInternal(boolean)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.util.concurrent.CompletableFuture adapt(retrofit2.Call)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.material.tabs.TabLayout: void setInlineLabel(boolean)
androidx.compose.foundation.text.TextContextMenuItems: androidx.compose.foundation.text.TextContextMenuItems[] values()
okio.Buffer: long -deprecated_size()
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1: java.lang.String invoke$lambda$1(androidx.compose.runtime.State)
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okio.BufferedSource source()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$4$1: java.lang.Object invoke()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: boolean isLoading()
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
retrofit2.Response: okhttp3.ResponseBody errorBody()
okio.RealBufferedSink: okio.BufferedSink write(byte[])
okio.FileSystem: java.util.List list(okio.Path)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand: androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand valueOf(java.lang.String)
okio.AsyncTimeout: java.lang.Object withTimeout(kotlin.jvm.functions.Function0)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
okio.Pipe$sink$1: void flush()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.Class)
okio.internal.ResourceFileSystem$Companion: kotlin.Pair toJarRoot(java.net.URL)
okio.internal.-Buffer: okio.Buffer commonWriteUtf8CodePoint(okio.Buffer,int)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
okio.Throttler$source$1: Throttler$source$1(okio.Source,okio.Throttler)
retrofit2.Utils: java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.String,java.lang.Object[])
okio.RealBufferedSource: long indexOf(okio.ByteString,long)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt: ComposableSingletons$CurrencyExchangeScreenKt()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okio.internal.ZipEntry: long getCompressedSize()
retrofit2.Platform: Platform(boolean)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.converter.gson.GsonConverterFactory create()
okio.NioFileSystemFileHandle: void protectedResize(long)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.compose.ui.text.input.CursorAnchorInfoApi34Helper: android.view.inputmethod.CursorAnchorInfo$Builder addVisibleLineBounds(android.view.inputmethod.CursorAnchorInfo$Builder,androidx.compose.ui.text.TextLayoutResult,androidx.compose.ui.geometry.Rect)
okio.FileHandle$FileHandleSource: void setClosed(boolean)
okio.AsyncTimeout: boolean access$getInQueue$p(okio.AsyncTimeout)
retrofit2.ParameterHandler$Header: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.google.android.material.chip.Chip: void setMaxLines(int)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
okhttp3.ResponseBody: java.io.Reader charStream()
com.google.android.material.textfield.TextInputLayout: int getMinEms()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
okio.internal.-FileSystem: okio.Path symlinkTarget(okio.FileSystem,okio.Path)
retrofit2.ParameterHandler$Headers: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.platform.AbstractComposeView getSubCompositionView()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$2$1: void invoke(com.waldy.androidcurrencyexchange.domain.model.Currency)
okio.ByteString: int lastIndexOf$default(okio.ByteString,byte[],int,int,java.lang.Object)
com.google.android.material.chip.Chip: float getChipCornerRadius()
androidx.compose.ui.window.SecureFlagPolicy: androidx.compose.ui.window.SecureFlagPolicy valueOf(java.lang.String)
okio.SegmentedByteString: void write$okio(okio.Buffer,int,int)
okio.Okio: okio.HashingSource hashingSource(okio.Source,java.security.MessageDigest)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
okio.Okio: okio.CipherSource cipherSource(okio.Source,javax.crypto.Cipher)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.compose.ui.platform.AndroidComposeView: void getLastMatrixRecalculationAnimationTime$ui_release$annotations()
androidx.core.os.BundleCompat$Api33Impl: java.lang.Object getParcelable(android.os.Bundle,java.lang.String,java.lang.Class)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performSelectRangeGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.SelectRangeGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: CompletableFutureCallAdapterFactory$BodyCallAdapter(java.lang.reflect.Type)
retrofit2.Response: java.lang.String toString()
okio.internal.ZipFilesKt: void skipLocalHeader(okio.BufferedSource)
retrofit2.RequestFactory: retrofit2.RequestFactory parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method)
okio.ForwardingSource: okio.Source delegate()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit SettingsItem$lambda$6(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,int,androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: UserPreferencesRepository(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
okio.RealBufferedSource$inputStream$1: int read(byte[],int,int)
retrofit2.ParameterHandler$PartMap: ParameterHandler$PartMap(java.lang.reflect.Method,int,retrofit2.Converter,java.lang.String)
okio.NioFileSystemWrappingFileSystem: okio.Sink sink(okio.Path,boolean)
okio.Timeout$Companion$NONE$1: okio.Timeout deadlineNanoTime(long)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
okio.Buffer: okio.ByteString snapshot(int)
okio.FileSystem: void deleteRecursively(okio.Path)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String getToAmount()
okio.NioFileSystemWrappingFileSystem: okio.FileHandle openReadWrite(okio.Path,boolean,boolean)
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
okio.Segment: okio.Segment sharedCopy()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addCallAdapterFactory(retrofit2.CallAdapter$Factory)
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation: androidx.compose.ui.text.input.TransformedText filter(androidx.compose.ui.text.AnnotatedString)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
okio.RealBufferedSink: int write(java.nio.ByteBuffer)
okio.Path$Companion: okio.Path get(java.nio.file.Path,boolean)
retrofit2.DefaultCallAdapterFactory: DefaultCallAdapterFactory(java.util.concurrent.Executor)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: void onResponse(retrofit2.Call,retrofit2.Response)
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
retrofit2.OkHttpCall: boolean isCanceled()
androidx.constraintlayout.widget.ConstraintHelper: void setReferenceTags(java.lang.String)
androidx.compose.material3.tokens.TypographyKeyTokens: androidx.compose.material3.tokens.TypographyKeyTokens[] values()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit LanguageSelector$lambda$28(com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.jvm.functions.Function1,int,androidx.compose.runtime.Composer,int)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performDeleteRangeGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.DeleteRangeGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
okio.Sink: void write(okio.Buffer,long)
okio.ByteString: okio.ByteString substring$default(okio.ByteString,int,int,int,java.lang.Object)
okio.Buffer: boolean exhausted()
okio.Buffer: java.lang.String readUtf8LineStrict()
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt$lambda-1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.waldy.androidcurrencyexchange.domain.model.Currency: Currency(java.lang.String,int,java.lang.String)
okio.internal.EocdRecord: EocdRecord(long,long,int)
com.google.android.material.button.MaterialButtonGroup: com.google.android.material.shape.StateListSizeChange getButtonSizeChange()
okio.Path: java.lang.Character volumeLetter()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: boolean isCanceled()
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe(okio.Buffer$UnsafeCursor)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
retrofit2.http.Path: java.lang.String value()
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
kotlin.Metadata: java.lang.String[] d1()
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
okio.BufferedSource: java.lang.String readString(long,java.nio.charset.Charset)
okio.Timeout: okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.viewpager2.widget.ViewPager2: java.lang.CharSequence getAccessibilityClassName()
okio.FileHandle: FileHandle(boolean)
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
okio.internal.-RealBufferedSource: int commonReadIntLe(okio.RealBufferedSource)
retrofit2.KotlinExtensions$awaitResponse$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
okio.internal.-RealBufferedSink: okio.BufferedSink commonEmitCompleteSegments(okio.RealBufferedSink)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: void onResponse(retrofit2.Call,retrofit2.Response)
okio.FileSystem: okio.FileHandle openReadWrite$default(okio.FileSystem,okio.Path,boolean,boolean,int,java.lang.Object)
okio.Buffer: boolean rangeEquals(long,okio.ByteString,int,int)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api29Impl: void notifyViewAppeared(android.view.contentcapture.ContentCaptureSession,android.view.ViewStructure)
okio.FileHandle: void write(long,byte[],int,int)
androidx.compose.ui.platform.AbstractComposeView: void setViewCompositionStrategy(androidx.compose.ui.platform.ViewCompositionStrategy)
retrofit2.HttpException: java.lang.String getMessage(retrofit2.Response)
okio.FileHandle: boolean access$getClosed$p(okio.FileHandle)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
kotlin.jvm.internal.Lambda: java.lang.String toString()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder addConverterFactory(retrofit2.Converter$Factory)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
okio.FileHandle: long access$readNoCloseCheck(okio.FileHandle,long,okio.Buffer,long)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: void onToCurrencyChange(com.waldy.androidcurrencyexchange.domain.model.Currency)
okio.ForwardingTimeout: okio.Timeout delegate()
com.google.android.material.tabs.TabLayout: void setUnboundedRippleResource(int)
com.google.gson.reflect.TypeToken: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: SettingsViewModel$2(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: float getTextStartPadding()
retrofit2.ParameterHandler$2: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
okio.HashingSink: HashingSink(okio.Sink,java.security.MessageDigest)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency[] values()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: java.lang.String toString()
androidx.compose.material.ripple.RippleHostView: void setRippleState(boolean)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onResponse$0(retrofit2.Callback,retrofit2.Response)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
okio.Timeout$Companion: long minTimeout(long,long)
com.waldy.androidcurrencyexchange.CurrencyApplication: CurrencyApplication()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.compose.ui.platform.ViewLayerVerificationHelper28: void setOutlineSpotShadowColor(android.view.View,int)
retrofit2.ParameterHandler$Path: ParameterHandler$Path(java.lang.reflect.Method,int,java.lang.String,retrofit2.Converter,boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.modifier.ModifierLocalManager getModifierLocalManager()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: void CurrencyExchangeScreen(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int)
com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabTextColors()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
retrofit2.Utils: java.lang.RuntimeException methodError(java.lang.reflect.Method,java.lang.Throwable,java.lang.String,java.lang.Object[])
retrofit2.ParameterHandler$Tag: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
androidx.compose.ui.platform.actionmodecallback.MenuItemOption: androidx.compose.ui.platform.actionmodecallback.MenuItemOption[] values()
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okio.Pipe: okio.Source source()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
androidx.compose.ui.graphics.layer.RenderNodeVerificationHelper23: void destroyDisplayListData(android.view.RenderNode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.textfield.TextInputLayout: void setCursorErrorColor(android.content.res.ColorStateList)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
okio.RealBufferedSource: boolean isOpen()
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
okio.Pipe: boolean getSinkClosed$okio()
androidx.compose.foundation.text.input.internal.undo.TextFieldEditUndoBehavior: androidx.compose.foundation.text.input.internal.undo.TextFieldEditUndoBehavior valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
androidx.compose.ui.graphics.layer.ViewLayer: void setInvalidated(boolean)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1: CurrencyExchangeViewModel$convert$1(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel,kotlin.coroutines.Continuation)
okio.internal.-Path: java.lang.Character commonVolumeLetter(okio.Path)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: boolean component5()
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
okio.FileHandle: long protectedSize()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: java.lang.Object invokeSuspend(java.lang.Object)
okio.ForwardingFileSystem: kotlin.sequences.Sequence listRecursively(okio.Path,boolean)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performInsertGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.InsertGesture,androidx.compose.ui.platform.ViewConfiguration,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_NANOS$cp()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
okio.Buffer: okio.ByteString sha1()
retrofit2.Utils: boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)
okio.ByteString: byte getByte(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: UserPreferencesRepository$saveTheme$2(java.lang.String,kotlin.coroutines.Continuation)
okio.Buffer: okio.BufferedSink writeByte(int)
androidx.compose.ui.platform.AndroidComposeView: android.view.View findViewByAccessibilityIdTraversal(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: boolean isOffline()
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
okio.ByteString: void setUtf8$okio(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: void access$convert(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.Class)
okio.BufferedSource: boolean exhausted()
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabRippleColor()
okio.internal.-RealBufferedSource: byte[] commonReadByteArray(okio.RealBufferedSource)
okio.BufferedSource: long indexOfElement(okio.ByteString)
okio.JvmSystemFileSystem: java.lang.String toString()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.RealBufferedSource: java.lang.String readUtf8()
okio.Timeout: java.lang.Object intersectWith(okio.Timeout,kotlin.jvm.functions.Function0)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
okhttp3.TlsVersion: okhttp3.TlsVersion valueOf(java.lang.String)
androidx.compose.ui.text.android.StaticLayoutFactory33: boolean isFallbackLineSpacingEnabled(android.text.StaticLayout)
okio.internal.-Path: boolean lastSegmentIsDotDot(okio.Path)
okio.ByteString: int getSize$okio()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWrite(okio.RealBufferedSink,okio.ByteString)
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase getUpdateLanguageUseCase()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: void writeTo(okio.BufferedSink)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
okio.Segment: okio.Segment unsharedCopy()
okio.internal.-ByteString: int access$codePointIndexToCharIndex(byte[],int)
retrofit2.CallAdapter$Factory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
retrofit2.Utils$GenericArrayTypeImpl: java.lang.String toString()
okio.FileHandle: boolean getReadWrite()
okio.RealBufferedSource: java.lang.String readUtf8LineStrict(long)
retrofit2.BuiltInConverters$VoidResponseBodyConverter: java.lang.Object convert(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
okio.OutputStreamSink: void flush()
okio.-SegmentedByteString: void getDEFAULT__new_UnsafeCursor$annotations()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
okio.internal.-Buffer: long commonCompleteSegmentByteCount(okio.Buffer)
okio.Path: okio.Path resolve(java.lang.String)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: boolean isExecuted()
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
okio.Timeout$Companion$NONE$1: Timeout$Companion$NONE$1()
okio.-DeprecatedUpgrade: okio.-DeprecatedOkio getOkio()
okio.-DeprecatedOkio: okio.Sink sink(java.net.Socket)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
okio.internal.-ByteString: boolean commonEndsWith(okio.ByteString,okio.ByteString)
retrofit2.ParameterHandler$FieldMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
okio.Options$Companion: Options$Companion()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$4$1: void invoke()
okio.AsyncTimeout: void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout)
okio.ByteString: void write(java.io.OutputStream)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.compose.material3.ScaffoldLayoutContent: androidx.compose.material3.ScaffoldLayoutContent valueOf(java.lang.String)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWrite(okio.RealBufferedSink,okio.ByteString,int,int)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performSelectRangeGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.SelectRangeGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager,kotlin.jvm.functions.Function1)
okio.Throttler: java.util.concurrent.locks.Condition getCondition()
okio.Segment: void writeTo(okio.Segment,int)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type[] values()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.contentcapture.AndroidContentCaptureManager getContentCaptureManager$ui_release()
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.Path: okio.Path get(java.nio.file.Path)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
okio.Buffer: long readLong()
okio.RealBufferedSource: boolean rangeEquals(long,okio.ByteString,int,int)
okio.Source: void close()
com.google.android.material.textfield.TextInputLayout: void setCursorColor(android.content.res.ColorStateList)
androidx.compose.ui.platform.ViewLayer: androidx.compose.ui.platform.AndroidComposeView getOwnerView()
androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy: androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy[] values()
okio.-SegmentedByteString: long minOf(int,long)
androidx.compose.ui.platform.AndroidComposeView: void setFontFamilyResolver(androidx.compose.ui.text.font.FontFamily$Resolver)
androidx.compose.ui.text.android.BoringLayoutFactory33: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic)
okio.JvmSystemFileSystem: void atomicMove(okio.Path,okio.Path)
okio.FileHandle: long position(okio.Source)
okio.Buffer: long size()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: void onThemeChange(java.lang.String)
okio.Path$Companion: okio.Path get(java.lang.String,boolean)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$3: java.lang.Object invoke(java.lang.Object)
retrofit2.Utils: java.lang.RuntimeException parameterError(java.lang.reflect.Method,java.lang.Throwable,int,java.lang.String,java.lang.Object[])
okio.HashingSink: okio.ByteString -deprecated_hash()
okio.FileHandle: void write(long,okio.Buffer,long)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
okio.-GzipSourceExtensions: boolean getBit(int,int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit LanguageSelector$lambda$25$lambda$24(kotlin.jvm.functions.Function1,java.util.Map,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
okio.NioSystemFileSystem: okio.FileMetadata metadataOrNull(okio.Path)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt: void SettingsRoute(androidx.compose.runtime.Composer,int)
okio.ByteString$Companion: okio.ByteString of(byte[])
androidx.lifecycle.ViewModel: void addCloseable(java.lang.AutoCloseable)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.compose.ui.window.PopupLayout: boolean getCanCalculatePosition()
androidx.compose.ui.autofill.AutofillApi26Helper: void setAutofillHints(android.view.ViewStructure,java.lang.String[])
okio.HashingSource$Companion: HashingSource$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.internal.-RealBufferedSource: long commonReadHexadecimalUnsignedLong(okio.RealBufferedSource)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$3$1: java.lang.Object invoke(java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
okio.internal.ResourceFileSystem: okio.internal.ResourceFileSystem$Companion access$getCompanion$p()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
okio.Okio__JvmOkioKt: okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
androidx.compose.ui.graphics.BlendModeColorFilterHelper: androidx.compose.ui.graphics.BlendModeColorFilter createBlendModeColorFilter(android.graphics.BlendModeColorFilter)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
retrofit2.Retrofit: java.util.List callAdapterFactories()
okio.ForwardingSink: okio.Sink delegate()
retrofit2.RequestFactory$Builder: RequestFactory$Builder(retrofit2.Retrofit,java.lang.reflect.Method)
okio.ForwardingTimeout: void setDelegate(okio.Timeout)
androidx.compose.ui.platform.AndroidComposeView: void setLastMatrixRecalculationAnimationTime$ui_release(long)
okio.ByteString: boolean startsWith(okio.ByteString)
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type[] getUpperBounds()
retrofit2.Call: boolean isExecuted()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
okio.internal.ZipEntry: java.lang.Long getLastModifiedAtMillis()
retrofit2.CallAdapter: java.lang.reflect.Type responseType()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit ThemeSelector$lambda$14$lambda$13(kotlin.jvm.functions.Function1,java.util.Map,java.lang.String)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(okhttp3.HttpUrl)
com.waldy.androidcurrencyexchange.data.remote.CurrencyApiService: java.lang.Object getLatestRates(java.lang.String,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModelFactory: CurrencyExchangeViewModelFactory(com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt$lambda-1$1: void invoke(androidx.compose.foundation.pager.PagerScope,int,androidx.compose.runtime.Composer,int)
okio.RealBufferedSource: long readHexadecimalUnsignedLong()
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.viewpager2.widget.ViewPager2: ViewPager2(android.content.Context,android.util.AttributeSet)
okio.internal.ZipFilesKt$openZip$1: java.lang.Object invoke(java.lang.Object)
com.waldy.androidcurrencyexchange.MainActivityScreenKt: void MainActivityScreen(androidx.compose.runtime.Composer,int)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
retrofit2.KotlinExtensions: java.lang.Object suspendAndThrow(java.lang.Exception,kotlin.coroutines.Continuation)
okio.ZipFileSystem: okio.Sink appendingSink(okio.Path,boolean)
okio.Buffer: okio.ByteString hmacSha256(okio.ByteString)
okio.NioFileSystemFileHandle: int protectedRead(long,byte[],int,int)
okio.ByteString: boolean rangeEquals(int,okio.ByteString,int,int)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
okio.internal.ResourceFileSystem: void createDirectory(okio.Path,boolean)
androidx.compose.ui.platform.RenderNodeVerificationHelper28: void setSpotShadowColor(android.view.RenderNode,int)
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
okio.AsyncTimeout: void enter()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performDeleteGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.DeleteGesture,androidx.compose.ui.text.AnnotatedString,kotlin.jvm.functions.Function1)
retrofit2.BuiltInConverters$UnitResponseBodyConverter: kotlin.Unit convert(okhttp3.ResponseBody)
okio.Pipe$source$1: void close()
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt$lambda-1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type[] getActualTypeArguments()
okio.HashingSink$Companion: okio.HashingSink sha512(okio.Sink)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
okio.HashingSource$Companion: okio.HashingSource hmacSha512(okio.Source,okio.ByteString)
okio.internal.-Buffer: void commonClose(okio.Buffer$UnsafeCursor)
okio.SegmentedByteString: byte[] internalArray$okio()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
com.google.android.material.button.MaterialButton: int getTextHeight()
androidx.compose.ui.platform.AndroidComposeView: void setContentCaptureManager$ui_release(androidx.compose.ui.contentcapture.AndroidContentCaptureManager)
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getOnLightTan()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
okio.RealBufferedSink$outputStream$1: java.lang.String toString()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteIntLe(okio.RealBufferedSink,int)
okio.SocketAsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
okio.internal.ResourceFileSystem$Companion: okio.Path getROOT()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performRemoveSpaceGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.RemoveSpaceGesture,androidx.compose.ui.text.AnnotatedString,androidx.compose.ui.platform.ViewConfiguration,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
retrofit2.Utils$WildcardTypeImpl: java.lang.String toString()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
androidx.compose.ui.focus.CustomDestinationResult: androidx.compose.ui.focus.CustomDestinationResult valueOf(java.lang.String)
okio.RealBufferedSink: okio.BufferedSink write(byte[],int,int)
okio.Buffer: okio.Buffer emit()
com.google.android.material.tabs.TabLayout: int getSelectedTabPosition()
okhttp3.Protocol: okhttp3.Protocol valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.compose.ui.autofill.AutofillCallback: void unregister(androidx.compose.ui.autofill.AndroidAutofill)
okio.Timeout: void awaitSignal(java.util.concurrent.locks.Condition)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
okio.internal.-Path: java.util.List commonSegments(okio.Path)
okio.internal.-Path: okio.Path commonParent(okio.Path)
androidx.compose.foundation.Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
okio.ForwardingTimeout: okio.Timeout deadlineNanoTime(long)
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
okio.ForwardingTimeout: okio.Timeout clearTimeout()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$4$1: CurrencyExchangeScreenKt$CurrencyExchangeRoute$4$1(java.lang.Object)
okio.internal.-FileSystem: okio.FileMetadata commonMetadata(okio.FileSystem,okio.Path)
okio.FileSystem: FileSystem()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
okio.HashingSource$Companion: HashingSource$Companion()
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
okio.Path: okio.Path resolve(okio.ByteString,boolean)
androidx.compose.ui.platform.AndroidComposeView: void setCoroutineContext(kotlin.coroutines.CoroutineContext)
okio.Sink: void close()
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt: ComposableSingletons$MainActivityKt()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
retrofit2.CallAdapter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: boolean isOffline()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
retrofit2.BuiltInConverters: BuiltInConverters()
okio.ByteString: okio.ByteString decodeHex(java.lang.String)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1$1$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.waldy.androidcurrencyexchange.ui.util.LocalizationKt: java.lang.String t(java.lang.String,androidx.compose.runtime.Composer,int)
okio.Segment: okio.Segment split(int)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
okio.internal.-Buffer: long commonResizeBuffer(okio.Buffer$UnsafeCursor,long)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
okio.AsyncTimeout$Companion: AsyncTimeout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.Options: int lastIndexOf(java.lang.Object)
okio.CipherSink: void flush()
androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode valueOf(java.lang.String)
okio.internal.-ByteString: byte commonGetByte(okio.ByteString,int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
retrofit2.ParameterHandler$RawPart: void apply(retrofit2.RequestBuilder,okhttp3.MultipartBody$Part)
com.google.android.material.tabs.TabLayout: TabLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
okio.internal.-Buffer: okio.Buffer commonWriteInt(okio.Buffer,int)
okio.ByteString: int indexOf$default(okio.ByteString,okio.ByteString,int,int,java.lang.Object)
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
okio.-DeflaterSinkExtensions: okio.DeflaterSink deflate$default(okio.Sink,java.util.zip.Deflater,int,java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
okio.Utf8: void processUtf8Bytes(java.lang.String,int,int,kotlin.jvm.functions.Function1)
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
retrofit2.ParameterHandler$Body: ParameterHandler$Body(java.lang.reflect.Method,int,retrofit2.Converter)
retrofit2.Utils: java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3: java.lang.Object invokeSuspend(java.lang.Object)
retrofit2.converter.gson.GsonRequestBodyConverter: okhttp3.RequestBody convert(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.compose.foundation.layout.Direction: androidx.compose.foundation.layout.Direction valueOf(java.lang.String)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void LanguageSelector(com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.waldy.androidcurrencyexchange.MainActivityScreenKt: kotlin.Unit CustomTabRow$lambda$11(java.util.List,int,kotlin.jvm.functions.Function1,int,androidx.compose.runtime.Composer,int)
okio.RealBufferedSink: void close()
androidx.compose.foundation.text.selection.CrossStatus: androidx.compose.foundation.text.selection.CrossStatus[] values()
retrofit2.Retrofit: okhttp3.Call$Factory callFactory()
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
retrofit2.KotlinExtensions: java.lang.Object awaitNullable(retrofit2.Call,kotlin.coroutines.Continuation)
okio.FileHandle: java.util.concurrent.locks.ReentrantLock getLock()
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
retrofit2.HttpException: HttpException(retrofit2.Response)
okio.Buffer: okio.Buffer write(okio.Source,long)
okio.Buffer$inputStream$1: int read(byte[],int,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
okio.Okio: okio.Source source(java.io.File)
retrofit2.Utils: void throwIfFatal(java.lang.Throwable)
okio.Okio: okio.Sink sink(java.io.File,boolean)
okio.InflaterSource: InflaterSource(okio.Source,java.util.zip.Inflater)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
retrofit2.KotlinExtensions$suspendAndThrow$1: KotlinExtensions$suspendAndThrow$1(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
okio.internal.-Path: boolean commonEquals(okio.Path,java.lang.Object)
androidx.compose.ui.platform.ComposeView: java.lang.CharSequence getAccessibilityClassName()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteHexadecimalUnsignedLong(okio.RealBufferedSink,long)
kotlin.collections.AbstractCollection: void clear()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
okio.ByteString$Companion: okio.ByteString -deprecated_decodeHex(java.lang.String)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
retrofit2.ParameterHandler$1: void apply(retrofit2.RequestBuilder,java.lang.Iterable)
okio.Buffer$UnsafeCursor: okio.Segment getSegment$okio()
okio.HashingSource$Companion: okio.HashingSource hmacSha256(okio.Source,okio.ByteString)
retrofit2.HttpServiceMethod$CallAdapted: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand[] values()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void access$FeedbackButton(android.content.Context,androidx.compose.runtime.Composer,int)
okio.SegmentedByteString: java.nio.ByteBuffer asByteBuffer()
retrofit2.converter.gson.GsonConverterFactory: GsonConverterFactory(com.google.gson.Gson)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
okio.HashingSource: okio.HashingSource md5(okio.Source)
retrofit2.RequestFactory$Builder: void validateResolvableType(int,java.lang.reflect.Type)
com.google.android.material.button.MaterialButton: void setIconResource(int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
okio.ByteString: int lastIndexOf(okio.ByteString)
okio.Buffer: okio.BufferedSink write(byte[])
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
retrofit2.RequestFactory$Builder: void parseMethodAnnotation(java.lang.annotation.Annotation)
retrofit2.ServiceMethod: ServiceMethod()
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
com.google.android.material.button.MaterialButtonGroup: void setInnerCornerSizeStateList(com.google.android.material.shape.StateListCornerSize)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
androidx.compose.ui.text.platform.Api28Impl: android.text.style.TypefaceSpan createTypefaceSpan(android.graphics.Typeface)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performRemoveSpaceGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.RemoveSpaceGesture,androidx.compose.foundation.text.input.internal.TextLayoutState,androidx.compose.ui.platform.ViewConfiguration)
okio.-GzipSourceExtensions: okio.GzipSource gzip(okio.Source)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
kotlin.Metadata: int k()
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getType()
retrofit2.http.PUT: java.lang.String value()
retrofit2.HttpServiceMethod: java.lang.Object invoke(java.lang.Object[])
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: CurrencyExchangeUiState(com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
okio.Buffer: java.lang.Object clone()
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
okio.internal.-SegmentedByteString: int commonHashCode(okio.SegmentedByteString)
okio.BufferedSource: long indexOf(byte)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
okio.DeflaterSink: java.lang.String toString()
okio.InflaterSource: void releaseBytesAfterInflate()
androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState[] values()
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
okio.ByteString: byte[] internalArray$okio()
okio.GzipSink: void writeFooter()
okio.Utf8: int process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1)
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
com.google.android.material.chip.Chip: void setChipIconSize(float)
okio.-SegmentedByteString: int reverseBytes(int)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.input.pointer.PointerIconService getPointerIconService()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2: UserPreferencesRepository$special$$inlined$map$2$2(kotlinx.coroutines.flow.FlowCollector)
okio.Buffer: java.lang.String toString()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: CurrencyExchangeViewModel(com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase)
okio.internal.ResourceFileSystem$Companion$toJarRoot$zip$1: java.lang.Boolean invoke(okio.internal.ZipEntry)
androidx.compose.ui.graphics.Path$Direction: androidx.compose.ui.graphics.Path$Direction[] values()
okio.ByteString: int indexOf(byte[],int)
okio.Buffer: void readFully(byte[])
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
okio.FileSystem: void delete(okio.Path,boolean)
retrofit2.Converter$Factory: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
okio.FileHandle: void protectedWrite(long,byte[],int,int)
retrofit2.Platform: int defaultConverterFactoriesSize()
okio.ByteString: int indexOf(okio.ByteString)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
androidx.compose.ui.platform.RenderNodeVerificationHelper28: int getAmbientShadowColor(android.view.RenderNode)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
okio.RealBufferedSource: short readShort()
okio.AsyncTimeout: boolean exit()
okio.internal.-Path: okio.ByteString toSlash(java.lang.String)
com.google.gson.reflect.TypeToken: int hashCode()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
retrofit2.Invocation: java.lang.String toString()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
okio.SegmentedByteString: java.lang.String toString()
okio.Buffer: okio.Buffer writeByte(int)
okio.internal.-RealBufferedSource: java.lang.String commonReadUtf8(okio.RealBufferedSource,long)
okio.ByteString: int getHashCode$okio()
okio.CipherSink: CipherSink(okio.BufferedSink,javax.crypto.Cipher)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
okio.FileHandle$FileHandleSource: long getPosition()
okio.SegmentedByteString: java.lang.String base64Url()
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
okio.internal.EocdRecord: long getEntryCount()
okio.Buffer: java.io.InputStream inputStream()
com.waldy.androidcurrencyexchange.ui.util.Language: java.lang.String getTag()
com.waldy.androidcurrencyexchange.di.AppContainer: AppContainer(android.content.Context)
okio.Buffer: okio.ByteString sha512()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit CurrencySelector$lambda$17$lambda$16(androidx.compose.runtime.MutableState)
okio.BufferedSink: long writeAll(okio.Source)
retrofit2.ParameterHandler$QueryName: ParameterHandler$QueryName(retrofit2.Converter,boolean)
retrofit2.Platform: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
okio.ByteString: java.lang.String hex()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
okio.-InflaterSourceExtensions: okio.InflaterSource inflate$default(okio.Source,java.util.zip.Inflater,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1: ZipFilesKt$readOrSkipLocalHeader$1(okio.BufferedSource,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef,kotlin.jvm.internal.Ref$ObjectRef)
com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$OnTabSelectedListener)
com.google.android.material.button.MaterialButtonGroup: void setOrientation(int)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.unit.LayoutDirection getLayoutDirection()
okio.-Base64: byte[] getBASE64()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
okio.Path: okio.Path relativeTo(okio.Path)
okio.internal.ResourceFileSystem: void delete(okio.Path,boolean)
okio.internal.-RealBufferedSource: java.lang.String commonToString(okio.RealBufferedSource)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
okio.ForwardingFileSystem: okio.FileHandle openReadWrite(okio.Path,boolean,boolean)
okio.NioFileSystemWrappingFileSystem: okio.Sink appendingSink(okio.Path,boolean)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
okio.ZipFileSystem: okio.FileHandle openReadWrite(okio.Path,boolean,boolean)
androidx.compose.foundation.text.Handle: androidx.compose.foundation.text.Handle valueOf(java.lang.String)
com.google.android.material.behavior.HideViewOnScrollBehavior: HideViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
kotlin.Metadata: int[] bv()
retrofit2.Call: okio.Timeout timeout()
okio.internal.-Path: okio.Path commonRoot(okio.Path)
okio.Timeout$Companion: Timeout$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.ForwardingFileSystem: okio.Source source(okio.Path)
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.AsyncTimeout: okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout)
com.google.android.material.button.MaterialButton: int getIconPadding()
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1$1: MainActivity$onCreate$1$1(androidx.compose.runtime.State)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
okio.internal.-RealBufferedSource: long commonRead(okio.RealBufferedSource,okio.Buffer,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
okio.AsyncTimeout$Companion: boolean access$cancelScheduledTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout)
okio.SegmentedByteString: java.lang.String hex()
okio.BufferedSink: okio.BufferedSink writeShort(int)
okio.BlackholeSink: void flush()
okio.BufferedSource: boolean rangeEquals(long,okio.ByteString)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
okio.ByteString: okio.ByteString of(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okio.Timeout$Companion: Timeout$Companion()
okio._JvmPlatformKt: java.util.concurrent.locks.ReentrantLock newLock()
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
okio.Buffer: java.lang.String readString(long,java.nio.charset.Charset)
okio.NioFileSystemWrappingFileSystem: java.lang.String toString()
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.font.FontFamily$Resolver getFontFamilyResolver()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.compose.foundation.text.input.internal.undo.TextFieldEditUndoBehavior: androidx.compose.foundation.text.input.internal.undo.TextFieldEditUndoBehavior[] values()
androidx.compose.ui.platform.coreshims.ViewStructureCompat$Api23Impl: void setDimens(android.view.ViewStructure,int,int,int,int,int,int)
okio.JvmSystemFileSystem: JvmSystemFileSystem()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
retrofit2.BuiltInConverters$UnitResponseBodyConverter: BuiltInConverters$UnitResponseBodyConverter()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit CurrencyRow$lambda$12(java.lang.String,kotlin.jvm.functions.Function1,com.waldy.androidcurrencyexchange.domain.model.Currency,kotlin.jvm.functions.Function1,boolean,int,androidx.compose.runtime.Composer,int)
retrofit2.Retrofit$1: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
kotlin.collections.AbstractCollection: boolean removeAll(java.util.Collection)
okio.Buffer: okio.Buffer write(byte[])
com.google.android.material.button.MaterialButtonGroup: void setStateListShapeAppearance(com.google.android.material.shape.StateListShapeAppearanceModel)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys: UserPreferencesRepository$PreferencesKeys()
okio.FileSystem: void createDirectory$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object)
okio.BufferedSource: long readDecimalLong()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWrite(okio.RealBufferedSink,byte[])
androidx.compose.runtime.Recomposer$State: androidx.compose.runtime.Recomposer$State[] values()
okio.internal.-SegmentedByteString: boolean commonRangeEquals(okio.SegmentedByteString,int,okio.ByteString,int,int)
androidx.graphics.path.PathIteratorPreApi34Impl: long createInternalPathIterator(android.graphics.Path,int,float)
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
okio.internal.-FileSystem: kotlin.sequences.Sequence commonListRecursively(okio.FileSystem,okio.Path,boolean)
retrofit2.RequestBuilder: void addQueryParam(java.lang.String,java.lang.String,boolean)
okio.JvmSystemFileSystem: okio.Path canonicalize(okio.Path)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
okio.RealBufferedSource: long indexOfElement(okio.ByteString,long)
androidx.compose.ui.state.ToggleableState: androidx.compose.ui.state.ToggleableState valueOf(java.lang.String)
androidx.compose.ui.text.android.CanvasCompatM: void drawTextRun(android.graphics.Canvas,java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)
okio.HashingSink: okio.HashingSink hmacSha256(okio.Sink,okio.ByteString)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int toTextGranularity-NUwxegE(int)
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
okio.internal.-Buffer: byte commonReadByte(okio.Buffer)
okio.FileHandle: void flush()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
okio.AsyncTimeout$sink$1: void write(okio.Buffer,long)
androidx.activity.EdgeToEdgeApi29: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
okio.ByteString: byte internalGet$okio(int)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
okio.ByteString$Companion: okio.ByteString -deprecated_encodeUtf8(java.lang.String)
okio.HashingSource: HashingSource(okio.Source,okio.ByteString,java.lang.String)
okio.Buffer: okio.ByteString md5()
androidx.compose.foundation.text.TextContextMenuItems: androidx.compose.foundation.text.TextContextMenuItems valueOf(java.lang.String)
retrofit2.OkHttpCall: retrofit2.Response parseResponse(okhttp3.Response)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okio.internal.ResourceFileSystem: okio.FileHandle openReadOnly(okio.Path)
kotlin.collections.AbstractList: java.util.ListIterator listIterator(int)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okio.Okio: okio.HashingSource hashingSource(okio.Source,javax.crypto.Mac)
okio.Okio__JvmOkioKt: okio.Sink sink(java.io.OutputStream)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1: void invoke(androidx.compose.runtime.Composer,int)
okio.RealBufferedSource: java.lang.String readUtf8Line()
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
retrofit2.Utils: java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type)
retrofit2.Retrofit: void validateServiceInterface(java.lang.Class)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
com.waldy.androidcurrencyexchange.MainActivity: void onCreate(android.os.Bundle)
com.google.android.material.drawable.DrawableUtils$OutlineCompatR: void setPath(android.graphics.Outline,android.graphics.Path)
okio.Pipe: okio.Sink -deprecated_sink()
okio.JvmSystemFileSystem: void createSymlink(okio.Path,okio.Path)
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: java.math.BigDecimal component1()
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
okio.internal.-Buffer: okio.Buffer commonWrite$default(okio.Buffer,okio.ByteString,int,int,int,java.lang.Object)
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.activity.ComponentActivity: void removeOnUserLeaveHintListener(java.lang.Runnable)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
okio.ForwardingFileSystem: okio.Path onPathResult(okio.Path,java.lang.String)
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.transition.ViewUtilsApi21$Api29Impl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase getGetThemeUseCase()
com.google.android.material.internal.BaselineLayout: void setMeasurePaddingFromBaseline(boolean)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: void CurrencyExchangeRoute(androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$3: CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$3(kotlin.jvm.functions.Function1,java.util.List)
androidx.compose.ui.text.android.BoringLayoutFactoryDefault: android.text.BoringLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int)
okio.RealBufferedSource: void skip(long)
okio.internal.-Buffer: long commonReadDecimalLong(okio.Buffer)
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.compose.ui.text.android.CanvasCompatO: boolean clipOutRect(android.graphics.Canvas,int,int,int,int)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.google.android.material.button.MaterialButtonGroup: void setEnabled(boolean)
com.google.gson.reflect.TypeToken: java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class)
com.google.android.material.tabs.TabLayout: android.content.res.ColorStateList getTabIconTint()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2$1: UserPreferencesRepository$special$$inlined$map$1$2$1(com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2,kotlin.coroutines.Continuation)
okio.-SegmentedByteString: boolean arrayRangeEquals(byte[],int,byte[],int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.google.android.material.divider.MaterialDivider: int getDividerInsetStart()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit OfflineBadge$lambda$23(int,androidx.compose.runtime.Composer,int)
okio.RealBufferedSource: okio.Timeout timeout()
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.StateFlow getTheme()
okio.Pipe: void fold(okio.Sink)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void SettingsGroup(java.lang.String,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteShort(okio.RealBufferedSink,int)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: int hashCode()
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okio.HashingSink: okio.HashingSink sha512(okio.Sink)
okio.JvmFileHandle: void protectedFlush()
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
okio.internal.ZipEntry: int getCompressionMethod()
androidx.compose.ui.platform.AndroidComposeView: void set_viewTreeOwners(androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners)
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.internal.-RealBufferedSink: java.lang.String commonToString(okio.RealBufferedSink)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: boolean equals(java.lang.Object)
okio.internal.-Buffer: long commonIndexOfElement(okio.Buffer,okio.ByteString,long)
okio.FileHandle: long read(long,okio.Buffer,long)
com.google.android.material.chip.Chip: void setIconEndPadding(float)
okio.internal.-RealBufferedSource: long commonReadLongLe(okio.RealBufferedSource)
retrofit2.KotlinExtensions$await$4$2: void onResponse(retrofit2.Call,retrofit2.Response)
okio.Buffer: okio.BufferedSink writeHexadecimalUnsignedLong(long)
com.waldy.androidcurrencyexchange.ui.util.Language: com.waldy.androidcurrencyexchange.ui.util.Language[] values()
okio.HashingSink: void write(okio.Buffer,long)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
retrofit2.Response: java.lang.String message()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter$ResponseCallback: void onFailure(retrofit2.Call,java.lang.Throwable)
okio.internal.-ByteString: okio.ByteString commonToAsciiLowercase(okio.ByteString)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: java.lang.Object saveLanguage(com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.coroutines.Continuation)
okio.Buffer: int write(java.nio.ByteBuffer)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
retrofit2.converter.gson.GsonResponseBodyConverter: GsonResponseBodyConverter(com.google.gson.Gson,com.google.gson.TypeAdapter)
okio.internal.-RealBufferedSource: byte commonReadByte(okio.RealBufferedSource)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.compose.ui.text.android.BoringLayoutFactory33: android.text.BoringLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean,android.text.TextUtils$TruncateAt,int)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
okio.BufferedSource: int select(okio.Options)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
okio.BufferedSink: okio.BufferedSink write(okio.ByteString,int,int)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
okio.RealBufferedSource: boolean rangeEquals(long,okio.ByteString)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
okio.-DeprecatedUtf8: long size(java.lang.String,int,int)
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
okio._JvmPlatformKt: java.lang.Object withLock(java.util.concurrent.locks.ReentrantLock,kotlin.jvm.functions.Function0)
androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection[] values()
okio.Path: okio.ByteString getBytes$okio()
androidx.lifecycle.ViewModel: void clear$lifecycle_viewmodel_release()
com.google.android.material.chip.Chip: float getIconStartPadding()
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
okio.HashingSink: HashingSink(okio.Sink,java.lang.String)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: java.lang.Object invoke(androidx.datastore.preferences.core.MutablePreferences,kotlin.coroutines.Continuation)
retrofit2.OkHttpCall$1: void onFailure(okhttp3.Call,java.io.IOException)
okio.BufferedSink: okio.BufferedSink writeIntLe(int)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
retrofit2.RequestFactory$Builder: okhttp3.Headers parseHeaders(java.lang.String[])
okio.ForwardingSink: void flush()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
okio.Buffer: java.lang.String readUtf8Line()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.FileHandle: void reposition(okio.Sink,long)
okio.ByteString: int indexOf$default(okio.ByteString,byte[],int,int,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit FeedbackButton$lambda$31$lambda$30(android.content.Context)
okio.JvmSystemFileSystem: okio.FileHandle openReadOnly(okio.Path)
okio.FileHandle: void close()
androidx.compose.ui.text.android.CanvasCompatS: void drawGlyphs(android.graphics.Canvas,int[],int,float[],int,int,android.graphics.fonts.Font,android.graphics.Paint)
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt$lambda-1$1: ComposableSingletons$MainActivityScreenKt$lambda-1$1()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
okio.Buffer: okio.Buffer writeUtf8(java.lang.String)
okio.ByteString$Companion: ByteString$Companion()
okio.FileHandle$FileHandleSink: void setPosition(long)
androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Api29Impl: void addPageActions(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.compose.ui.semantics.SemanticsNode)
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1$1: void invoke(androidx.compose.runtime.Composer,int)
androidx.compose.ui.autofill.AutofillApi23Helper: void setDimens(android.view.ViewStructure,int,int,int,int,int,int)
androidx.activity.EdgeToEdgeApi28: void adjustLayoutInDisplayCutoutMode(android.view.Window)
androidx.compose.ui.platform.coreshims.ViewCompatShims$Api30Impl: void setImportantForContentCapture(android.view.View,int)
kotlin.collections.AbstractList: boolean equals(java.lang.Object)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: java.lang.Object invoke(java.lang.String,kotlin.coroutines.Continuation)
okio.PeekSource: okio.Timeout timeout()
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
okio.GzipSource: void consumeTrailer()
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
retrofit2.OptionalConverterFactory$OptionalConverter: java.lang.Object convert(java.lang.Object)
androidx.viewpager2.widget.ViewPager2: void setLayoutDirection(int)
okio.RealBufferedSink: long writeAll(okio.Source)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit LanguageSelector$lambda$27$lambda$26(androidx.compose.runtime.MutableState)
com.google.android.material.button.MaterialButtonGroup: int getSpacing()
okio.BlackholeSink: BlackholeSink()
retrofit2.RequestBuilder: void addHeader(java.lang.String,java.lang.String)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
com.google.android.material.button.MaterialButton: int getAllowedWidthDecrease()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performDeleteGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.DeleteGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
okio.Pipe: void forward(okio.Sink,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type[] values()
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
retrofit2.BuiltInConverters$RequestBodyConverter: BuiltInConverters$RequestBodyConverter()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt$lambda-1$1: void invoke(androidx.compose.runtime.Composer,int)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback(retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter,java.util.concurrent.CompletableFuture)
okio.ForwardingSink: okio.Timeout timeout()
okio.internal.ResourceFileSystem$Companion: okio.Path removeBase(okio.Path,okio.Path)
androidx.compose.ui.platform.ViewLayerVerificationHelper28: void setOutlineAmbientShadowColor(android.view.View,int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameter(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],boolean)
okio.RealBufferedSink: okio.BufferedSink writeInt(int)
okio.internal.-RealBufferedSource: byte[] commonReadByteArray(okio.RealBufferedSource,long)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: boolean component6()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt: kotlin.jvm.functions.Function2 getLambda-1$app_release()
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.waldy.androidcurrencyexchange.domain.repository.CurrencyRepository: kotlinx.coroutines.flow.Flow getConversionRate(com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency)
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.reflect.Type responseType()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
okio.Path: okio.Path get(java.io.File,boolean)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
okio.HashingSource: okio.HashingSource hmacSha256(okio.Source,okio.ByteString)
androidx.compose.ui.platform.AbstractComposeView: void setTransitionGroup(boolean)
androidx.compose.ui.platform.DrawChildContainer: int getChildCount()
androidx.compose.foundation.text.input.internal.LocaleListHelper: void setHintLocales(android.view.inputmethod.EditorInfo,androidx.compose.ui.text.intl.LocaleList)
retrofit2.Response: retrofit2.Response error(okhttp3.ResponseBody,okhttp3.Response)
okio.BufferedSource: java.lang.String readUtf8Line()
okio.internal.-Path: int rootLength(okio.Path)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.IntSize getPopupContentSize-bOM6tXw()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2: UserPreferencesRepository$special$$inlined$map$2(kotlinx.coroutines.flow.Flow)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: java.lang.String toString()
retrofit2.BuiltInConverters$RequestBodyConverter: java.lang.Object convert(java.lang.Object)
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: java.lang.Object invokeSuspend(java.lang.Object)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: MainActivityScreenKt$MainActivityScreen$1$1$1$1$1(androidx.compose.foundation.pager.PagerState,int,kotlin.coroutines.Continuation)
okio.internal.-Path: okio.ByteString commonNameBytes(okio.Path)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isVisible(int)
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.button.MaterialButton: void setSizeChange(com.google.android.material.shape.StateListSizeChange)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
okio.FileSystem: java.lang.Object -write(okio.Path,boolean,kotlin.jvm.functions.Function1)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
retrofit2.KotlinExtensions$awaitResponse$2$2: void onFailure(retrofit2.Call,java.lang.Throwable)
okio.RealBufferedSink: okio.BufferedSink writeDecimalLong(long)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
okio.Buffer$UnsafeCursor: long resizeBuffer(long)
androidx.compose.ui.platform.AbstractComposeView: boolean getShowLayoutBounds()
okio.BufferedSource: int read(byte[],int,int)
okio.BufferedSource: int read(byte[])
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
okio.-Base64: java.lang.String encodeBase64(byte[],byte[])
okio.internal.ZipFilesKt: okio.internal.ZipEntry readEntry(okio.BufferedSource)
okio.internal.ResourceFileSystem: okio.Source source(okio.Path)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api23Impl: android.os.Bundle getExtras(android.view.ViewStructure)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
okio.Okio__JvmOkioKt: okio.FileSystem openZip(okio.FileSystem,okio.Path)
okio.ByteString: okio.ByteString toAsciiUppercase()
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
okio.BufferedSink: okio.Buffer getBuffer()
retrofit2.Platform$Android$MainThreadExecutor: void execute(java.lang.Runnable)
okio.FileHandle$FileHandleSource: boolean getClosed()
okio.SegmentedByteString: int indexOf(byte[],int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt: kotlin.Unit SettingsRoute$lambda$4(int,androidx.compose.runtime.Composer,int)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.google.android.material.tabs.TabLayout: int getTabCount()
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
okio.internal.-SegmentedByteString: int commonGetSize(okio.SegmentedByteString)
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.google.android.material.chip.Chip: void setChecked(boolean)
retrofit2.Retrofit: retrofit2.Converter nextRequestBodyConverter(retrofit2.Converter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteLong(okio.RealBufferedSink,long)
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse copy$default(com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse,java.lang.String,java.util.Map,int,java.lang.Object)
okio.InputStreamSource: java.lang.String toString()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
retrofit2.OptionalConverterFactory: OptionalConverterFactory()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
okio.Buffer: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: boolean isOffline()
androidx.compose.ui.text.android.CanvasCompatO: boolean clipOutRect(android.graphics.Canvas,float,float,float,float)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
retrofit2.http.HTTP: java.lang.String method()
retrofit2.RequestFactory$Builder: retrofit2.ParameterHandler parseParameterAnnotation(int,java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation)
okio.Buffer: okio.Buffer copyTo(java.io.OutputStream,long,long)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit FeedbackButton$lambda$32(android.content.Context,int,androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,java.lang.Throwable,kotlin.coroutines.Continuation)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
okio.JvmSystemFileSystem: java.util.List list(okio.Path)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
okio.internal.-RealBufferedSource: void commonSkip(okio.RealBufferedSource,long)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: SettingsViewModelFactory(com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase,com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase,com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase,com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase)
okio.HashingSource$Companion: okio.HashingSource hmacSha1(okio.Source,okio.ByteString)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1: java.lang.Object invoke()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsGroup$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.compose.ui.platform.RenderNodeVerificationHelper23: void destroyDisplayListData(android.view.RenderNode)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
androidx.compose.ui.platform.ComposeView: void getShouldCreateCompositionOnAttachedToWindow$annotations()
okio.Throttler: void bytesPerSecond(long)
okio.Options$Companion: long getIntCount(okio.Buffer)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performSelectGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.SelectGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
retrofit2.OkHttpCall$NoContentResponseBody: okio.BufferedSource source()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
okio.JvmSystemFileSystem: void requireExist(okio.Path)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.focus.FocusOwner getFocusOwner()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewSelectRangeGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.SelectRangeGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager)
okio.FileHandle$FileHandleSource: void setPosition(long)
retrofit2.http.Header: java.lang.String value()
com.google.android.material.tabs.TabLayout: int getDefaultHeight()
kotlin.jvm.internal.CallableReference: boolean isFinal()
okio.-DeprecatedOkio: okio.BufferedSink buffer(okio.Sink)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
okio.-SegmentedByteString: int leftRotate(int,int)
com.google.android.material.tabs.TabLayout: int getTabMinWidth()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
okio._JvmPlatformKt: byte[] asUtf8ToByteArray(java.lang.String)
androidx.compose.ui.platform.RenderNodeVerificationHelper24: void discardDisplayList(android.view.RenderNode)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
androidx.compose.ui.text.style.ResolvedTextDirection: androidx.compose.ui.text.style.ResolvedTextDirection[] values()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
okio.internal.ResourceFileSystem: java.util.List listOrNull(okio.Path)
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: double getRate()
androidx.compose.material3.tokens.ShapeKeyTokens: androidx.compose.material3.tokens.ShapeKeyTokens valueOf(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
okio.ByteString: java.lang.String toString()
com.google.android.material.button.MaterialButtonGroup: int getLastVisibleChildIndex()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
okio.-DeprecatedUpgrade: okio.-DeprecatedUtf8 getUtf8()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
okio.internal.-RealBufferedSource: short commonReadShort(okio.RealBufferedSource)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void FeedbackButton(android.content.Context,androidx.compose.runtime.Composer,int)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteUtf8CodePoint(okio.RealBufferedSink,int)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.constraintlayout.widget.Barrier: int getType()
okio.AsyncTimeout: okio.Source source(okio.Source)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
okio.RealBufferedSource: long indexOf(byte,long)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
okio.-DeprecatedOkio: -DeprecatedOkio()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
retrofit2.ParameterHandler$PartMap: void apply(retrofit2.RequestBuilder,java.util.Map)
okio.internal.-Buffer: okio.ByteString commonSnapshot(okio.Buffer,int)
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
retrofit2.http.GET: java.lang.String value()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okio.SegmentedByteString: void write(java.io.OutputStream)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
okio.FileSystem: void deleteRecursively$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object)
androidx.compose.ui.platform.ViewLayer$UniqueDrawingIdApi29: long getUniqueDrawingId(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
okio.AsyncTimeout: java.util.concurrent.locks.Condition access$getCondition$cp()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1: com.waldy.androidcurrencyexchange.ui.util.Language invoke$lambda$0(androidx.compose.runtime.State)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
retrofit2.Utils: java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable)
com.google.android.material.button.MaterialButton: int getIconGravity()
kotlin.jvm.internal.CallableReference: boolean isAbstract()
okio.-SegmentedByteString: okio.Buffer$UnsafeCursor getDEFAULT__new_UnsafeCursor()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performJoinOrSplitGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.JoinOrSplitGesture,androidx.compose.ui.text.AnnotatedString,androidx.compose.ui.platform.ViewConfiguration,kotlin.jvm.functions.Function1)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit CurrencyExchangeScreen$lambda$9$lambda$7$lambda$6(java.lang.String)
okio.Buffer: void write(okio.Buffer,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.compose.ui.platform.AbstractComposeView: void getDisposeViewCompositionStrategy$annotations()
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.waldy.androidcurrencyexchange.ui.theme.ThemeKt: void AndroidCurrencyExchangeTheme(boolean,boolean,kotlin.jvm.functions.Function2,androidx.compose.runtime.Composer,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
retrofit2.Utils: java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: boolean cancel(boolean)
retrofit2.http.FieldMap: boolean encoded()
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: boolean previewHandwritingGesture$foundation_release(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.PreviewableHandwritingGesture,androidx.compose.foundation.text.input.internal.TextLayoutState,android.os.CancellationSignal)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: java.math.BigDecimal getConvertedAmount()
androidx.viewpager2.widget.ViewPager2: void setOffscreenPageLimit(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: void CurrencyRow(java.lang.String,kotlin.jvm.functions.Function1,com.waldy.androidcurrencyexchange.domain.model.Currency,kotlin.jvm.functions.Function1,boolean,androidx.compose.runtime.Composer,int)
okio.internal.-Path: okio.ByteString access$getSlash(okio.Path)
com.waldy.androidcurrencyexchange.ui.util.Language: Language(java.lang.String,int,java.lang.String)
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
okio.RealBufferedSink$outputStream$1: RealBufferedSink$outputStream$1(okio.RealBufferedSink)
okio.internal.-Path: okio.ByteString access$getDOT$p()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.compose.ui.contentcapture.AndroidContentCaptureManager$ViewTranslationHelperMethods: void onCreateVirtualViewTranslationRequests(androidx.compose.ui.contentcapture.AndroidContentCaptureManager,long[],int[],java.util.function.Consumer)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt$lambda-1$1: ComposableSingletons$CurrencyExchangeScreenKt$lambda-1$1()
androidx.compose.ui.platform.TextToolbarHelperMethods: void invalidateContentRect(android.view.ActionMode)
okio.BufferedSource: byte[] readByteArray()
kotlin.collections.AbstractCollection: int size()
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1: void invoke(androidx.compose.foundation.layout.PaddingValues,androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidClipboardManager getClipboardManager()
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
okio.internal.-Buffer: long commonIndexOf(okio.Buffer,byte,long,long)
androidx.viewpager2.widget.ViewPager2: int getOffscreenPageLimit()
okio.Buffer: okio.BufferedSink write(okio.ByteString,int,int)
androidx.compose.ui.platform.AndroidComposeViewAssistHelperMethodsO: void setClassName(android.view.ViewStructure,android.view.View)
okio.FileSystem: okio.Sink sink(okio.Path)
androidx.compose.ui.platform.AbstractComposeView: void setPreviousAttachedWindowToken(android.os.IBinder)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: int hashCode()
com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase: java.lang.Object invoke(com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.coroutines.Continuation)
okio.internal.-FileSystem$commonListRecursively$1: -FileSystem$commonListRecursively$1(okio.Path,okio.FileSystem,boolean,kotlin.coroutines.Continuation)
okio.HashingSink: okio.ByteString hash()
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.compose.ui.layout.IntrinsicMinMax: androidx.compose.ui.layout.IntrinsicMinMax[] values()
androidx.activity.EdgeToEdgeApi21: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
okio.internal.-Buffer: void commonClear(okio.Buffer)
okio.internal.ResourceFileSystem: ResourceFileSystem(java.lang.ClassLoader,boolean)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
com.google.android.material.button.MaterialButton: void setOpticalCenterEnabled(boolean)
retrofit2.http.POST: java.lang.String value()
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour[] values()
androidx.compose.ui.platform.AndroidComposeView: void setDensity(androidx.compose.ui.unit.Density)
com.waldy.androidcurrencyexchange.MainActivityScreenKt: long CustomTabRow$lambda$10$lambda$9$lambda$8$lambda$3(androidx.compose.runtime.State)
okio.NioFileSystemWrappingFileSystem: java.util.List list(okio.Path,boolean)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
retrofit2.Response: boolean isSuccessful()
com.google.android.material.button.MaterialButtonGroup: com.google.android.material.shape.StateListShapeAppearanceModel getStateListShapeAppearance()
okio.Buffer: okio.Buffer readFrom(java.io.InputStream)
com.google.android.material.chip.Chip: void setChipIconResource(int)
okio.-SegmentedByteString: short reverseBytes(short)
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
okio.RealBufferedSink$outputStream$1: void write(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
kotlin.Metadata: java.lang.String pn()
retrofit2.RequestFactory: okhttp3.Request create(java.lang.Object[])
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
retrofit2.Utils$WildcardTypeImpl: boolean equals(java.lang.Object)
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getDarkEspresso()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
retrofit2.CallAdapter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
okio.internal.-Path: void getANY_SLASH$annotations()
okio.Timeout$Companion$NONE$1: void throwIfReached()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.compose.ui.text.android.CanvasCompatQ: void drawColor(android.graphics.Canvas,int,android.graphics.BlendMode)
okio.FileHandle: int read(long,byte[],int,int)
okio.NioFileSystemWrappingFileSystem: NioFileSystemWrappingFileSystem(java.nio.file.FileSystem)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult copy(double,boolean)
retrofit2.http.PATCH: java.lang.String value()
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
okio.Okio: okio.Sink sink(java.net.Socket)
okio.AsyncTimeout$Companion: void access$scheduleTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout,long,boolean)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
okio.internal.-Path: okio.Path commonRelativeTo(okio.Path,okio.Path)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
okio.DeflaterSink: void write(okio.Buffer,long)
androidx.compose.foundation.text.input.internal.CursorAnchorInfoApi34Helper: android.view.inputmethod.CursorAnchorInfo$Builder addVisibleLineBounds(android.view.inputmethod.CursorAnchorInfo$Builder,androidx.compose.ui.text.TextLayoutResult,androidx.compose.ui.geometry.Rect)
okio.internal.-Buffer: okio.Buffer commonWriteByte(okio.Buffer,int)
retrofit2.OkHttpCall$1: OkHttpCall$1(retrofit2.OkHttpCall,retrofit2.Callback)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
okio.Options$Companion: okio.Options of(okio.ByteString[])
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
okio.RealBufferedSource: void readFully(byte[])
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
retrofit2.HttpServiceMethod$SuspendForResponse: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
okio.Utf8: boolean isUtf8Continuation(byte)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
okio.Pipe: void cancel()
okio.Path$Companion: okio.Path get$default(okio.Path$Companion,java.io.File,boolean,int,java.lang.Object)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: BuiltInConverters$BufferingResponseBodyConverter()
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api29Impl: android.view.autofill.AutofillId newAutofillId(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,long)
okio.Throttler: void bytesPerSecond(long,long)
retrofit2.Call: retrofit2.Call clone()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
androidx.compose.ui.platform.AndroidViewConfigurationApi34: float getScaledHandwritingGestureLineMargin(android.view.ViewConfiguration)
okio.AsyncTimeout: java.io.IOException newTimeoutException(java.io.IOException)
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Response execute()
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorColor(int)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okio.-GzipSinkExtensions: okio.GzipSink gzip(okio.Sink)
okio.Options: okio.Options of(okio.ByteString[])
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
retrofit2.KotlinExtensions$awaitResponse$2$2: KotlinExtensions$awaitResponse$2$2(kotlinx.coroutines.CancellableContinuation)
retrofit2.SkipCallbackExecutorImpl: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
okio.CipherSink: java.lang.Throwable doFinal()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
okio.internal.-SegmentedByteString: void forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
okio.internal.-Buffer: void commonReadFully(okio.Buffer,okio.Buffer,long)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteByte(okio.RealBufferedSink,int)
okio.internal.-Path: void getDOT_DOT$annotations()
retrofit2.converter.gson.GsonRequestBodyConverter: GsonRequestBodyConverter(com.google.gson.Gson,com.google.gson.TypeAdapter)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
okio.Buffer$outputStream$1: Buffer$outputStream$1(okio.Buffer)
androidx.compose.foundation.text.input.internal.Api34LegacyPerformHandwritingGestureImpl: void performHandwritingGesture(androidx.compose.foundation.text.LegacyTextFieldState,androidx.compose.foundation.text.selection.TextFieldSelectionManager,android.view.inputmethod.HandwritingGesture,androidx.compose.ui.platform.ViewConfiguration,java.util.concurrent.Executor,java.util.function.IntConsumer,kotlin.jvm.functions.Function1)
androidx.graphics.path.PathIteratorPreApi34Impl: void destroyInternalPathIterator(long)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: void invoke(java.lang.Throwable)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
okio.Options: java.lang.Object get(int)
okio.internal.-SegmentedByteString: int binarySearch(int[],int,int,int)
okio.ByteString$Companion: okio.ByteString -deprecated_encodeString(java.lang.String,java.nio.charset.Charset)
com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase: GetLanguageUseCase(com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository)
okio.Okio__OkioKt: okio.Sink blackhole()
retrofit2.OkHttpCall: okhttp3.Call createRawCall()
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation$filter$offsetMapping$1: int originalToTransformed(int)
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
androidx.transition.ObjectAnimatorUtils$Api21Impl: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.graphics.Path)
okio.RealBufferedSink: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.graphics.GraphicsContext getGraphicsContext()
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
retrofit2.http.Path: boolean encoded()
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
okio.FileMetadata: java.util.Map getExtras()
retrofit2.CallAdapter: java.lang.Object adapt(retrofit2.Call)
com.google.android.material.chip.Chip: float getIconEndPadding()
okio.Okio: okio.BufferedSource buffer(okio.Source)
com.google.android.material.tabs.TabLayout: void setTabsFromPagerAdapter(androidx.viewpager.widget.PagerAdapter)
okio.internal.-Path: okio.ByteString access$getDOT_DOT$p()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: void access$CurrencySelector$lambda$15(androidx.compose.runtime.MutableState,boolean)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
okio.Pipe$source$1: long read(okio.Buffer,long)
retrofit2.Platform$Android$MainThreadExecutor: Platform$Android$MainThreadExecutor()
retrofit2.OptionalConverterFactory$OptionalConverter: OptionalConverterFactory$OptionalConverter(retrofit2.Converter)
okio.FileSystem: void createDirectory(okio.Path,boolean)
okio.Buffer: okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
okio.internal._Utf8Kt: java.lang.String commonToUtf8String(byte[],int,int)
kotlin.collections.AbstractList: boolean addAll(int,java.util.Collection)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
okio.BufferedSink: okio.BufferedSink write(byte[],int,int)
okio.internal.-ByteString: int codePointIndexToCharIndex(byte[],int)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.compose.ui.text.android.StaticLayoutFactory23: android.text.StaticLayout create(androidx.compose.ui.text.android.StaticLayoutParams)
okio.internal.-RealBufferedSource: long commonIndexOfElement(okio.RealBufferedSource,okio.ByteString,long)
okio.NioSystemFileSystem: java.lang.String toString()
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
okio.Path: okio.Path parent()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
retrofit2.ParameterHandler$1: ParameterHandler$1(retrofit2.ParameterHandler)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
okio.CipherSink: void write(okio.Buffer,long)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$4: CurrencyExchangeViewModel$convert$1$4(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveLanguage$2: UserPreferencesRepository$saveLanguage$2(com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit SelectionDialog$lambda$35(java.lang.String,java.util.List,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,int,androidx.compose.runtime.Composer,int)
com.google.android.material.chip.Chip: void setCheckableResource(int)
okio.Buffer: short readShortLe()
okio.Path: okio.Path get(java.nio.file.Path,boolean)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isToggle(android.view.autofill.AutofillValue)
okio.FileSystem$Companion: FileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: kotlinx.coroutines.flow.Flow getLanguage()
androidx.compose.ui.node.TraversableNode$Companion$TraverseDescendantsAction: androidx.compose.ui.node.TraversableNode$Companion$TraverseDescendantsAction[] values()
okio.ZipFileSystem: okio.FileMetadata metadataOrNull(okio.Path)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
androidx.compose.ui.platform.AndroidComposeView: boolean getHasPendingMeasureOrLayout()
androidx.compose.ui.platform.AndroidComposeView: void setOnViewTreeOwnersAvailable(kotlin.jvm.functions.Function1)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit ThemeSelector$lambda$16$lambda$15(androidx.compose.runtime.MutableState)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void onFailure(retrofit2.Call,java.lang.Throwable)
okio.Buffer$inputStream$1: Buffer$inputStream$1(okio.Buffer)
okio.Buffer: okio.ByteString hmacSha1(okio.ByteString)
okio.RealBufferedSink: okio.BufferedSink writeLong(long)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
okio.InputStreamSource: void close()
okio.internal.-RealBufferedSource: boolean commonExhausted(okio.RealBufferedSource)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
retrofit2.Platform: retrofit2.Platform findPlatform()
retrofit2.Retrofit$Builder: java.util.List callAdapterFactories()
androidx.compose.ui.text.AnnotationType: androidx.compose.ui.text.AnnotationType[] values()
okio.internal.-RealBufferedSource: short commonReadShortLe(okio.RealBufferedSource)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
okio.HashingSink: HashingSink(okio.Sink,okio.ByteString,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
okio.ForwardingFileSystem: okio.Sink appendingSink(okio.Path,boolean)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
okio.internal.-FileSystem: void commonCreateDirectories(okio.FileSystem,okio.Path,boolean)
okio.Buffer: void skip(long)
okio.BufferedSink: okio.BufferedSink writeLong(long)
okio.CipherSource: void update()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewSelectRangeGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.SelectRangeGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2(retrofit2.Call)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
okio.Segment: void compact()
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
okio.Buffer: okio.Buffer copyTo$default(okio.Buffer,okio.Buffer,long,int,java.lang.Object)
okio.internal.ZipFilesKt$readEntry$1: ZipFilesKt$readEntry$1(kotlin.jvm.internal.Ref$BooleanRef,long,kotlin.jvm.internal.Ref$LongRef,okio.BufferedSource,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$LongRef)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
okio.FileSystem: okio.Sink appendingSink(okio.Path,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModelFactory: androidx.lifecycle.ViewModel create(kotlin.reflect.KClass,androidx.lifecycle.viewmodel.CreationExtras)
androidx.lifecycle.ViewModel: void onCleared()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
retrofit2.Platform: java.util.concurrent.Executor defaultCallbackExecutor()
okio.Path$Companion: okio.Path get(java.io.File,boolean)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.FileSystem: void createSymlink(okio.Path,okio.Path)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1$1$1$2: void invoke(androidx.compose.foundation.layout.RowScope,androidx.compose.runtime.Composer,int)
retrofit2.RequestBuilder: okhttp3.Request$Builder get()
okio.internal.-ByteString: int commonCompareTo(okio.ByteString,okio.ByteString)
okio.BufferedSink: okio.BufferedSink writeShortLe(int)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
okio.-DeprecatedOkio: okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getOnCoffeeBrown()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$3$1: CurrencyExchangeScreenKt$CurrencyExchangeRoute$3$1(java.lang.Object)
retrofit2.HttpServiceMethod$CallAdapted: HttpServiceMethod$CallAdapted(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter)
okio.RealBufferedSource: int readInt()
retrofit2.KotlinExtensions: java.lang.Object create(retrofit2.Retrofit)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
okio.internal.-RealBufferedSource: void commonClose(okio.RealBufferedSource)
androidx.viewpager2.widget.ViewPager2: int getItemDecorationCount()
androidx.compose.ui.platform.AbstractComposeView: boolean getShouldCreateCompositionOnAttachedToWindow()
okio.RealBufferedSource: int select(okio.Options)
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
retrofit2.Utils$WildcardTypeImpl: int hashCode()
okio.Buffer: okio.BufferedSink writeLongLe(long)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
okio.HashingSource: okio.HashingSource sha1(okio.Source)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: OkHttpCall$ExceptionCatchingResponseBody(okhttp3.ResponseBody)
okio.FileSystem: okio.Source source(okio.Path)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isList(android.view.autofill.AutofillValue)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
okio.ByteString$Companion: okio.ByteString encodeUtf8(java.lang.String)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
okio.internal.ZipEntry: long getSize()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
okio.NioSystemFileSystem: java.lang.Long zeroToNull(java.nio.file.attribute.FileTime)
okio.ForwardingTimeout: ForwardingTimeout(okio.Timeout)
okio.FileMetadata: okio.FileMetadata copy(boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
okio.Buffer$UnsafeCursor: Buffer$UnsafeCursor()
okio.Buffer: okio.BufferedSink write(byte[],int,int)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewDeleteGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.DeleteGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
okio.internal.ResourceFileSystem$Companion$toJarRoot$zip$1: java.lang.Object invoke(java.lang.Object)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
com.google.android.material.chip.Chip: void setMaxWidth(int)
okio.-Base64: void getBASE64_URL_SAFE$annotations()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: boolean previewHandwritingGesture$foundation_release(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.PreviewableHandwritingGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager,android.os.CancellationSignal)
androidx.compose.animation.core.AnimationEndReason: androidx.compose.animation.core.AnimationEndReason[] values()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewSelectGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.SelectGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
okio.Buffer$UnsafeCursor: long expandBuffer(int)
okio.internal.-RealBufferedSource: long commonReadAll(okio.RealBufferedSource,okio.Sink)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.google.android.material.chip.Chip: float getCloseIconSize()
okio.ForwardingFileSystem: java.lang.String toString()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.google.android.material.chip.Chip: void setGravity(int)
okio.RealBufferedSource: java.lang.String readUtf8(long)
okio.FileSystem: void createDirectory(okio.Path)
okio.SocketAsyncTimeout: SocketAsyncTimeout(java.net.Socket)
okio.internal.ResourceFileSystem$Companion: ResourceFileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$1$1: void invoke(java.lang.String)
okio.JvmFileHandle: void protectedWrite(long,byte[],int,int)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteDecimalLong(okio.RealBufferedSink,long)
okio.HashingSink$Companion: HashingSink$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.compose.ui.graphics.layer.view.DrawChildContainer: int getChildCount()
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit SettingsScreen$lambda$1(java.lang.String,com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,androidx.compose.runtime.Composer,int)
androidx.compose.ui.platform.coreshims.ViewCompatShims$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
okio.Buffer: boolean equals(java.lang.Object)
androidx.lifecycle.ViewModel: void addCloseable(java.io.Closeable)
okio.SegmentedByteString: int[] getDirectory$okio()
okio.Path: okio.Path getRoot()
androidx.graphics.path.PathIteratorPreApi34Impl: int internalPathIteratorRawSize(long)
retrofit2.Retrofit$Builder: Retrofit$Builder()
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getMilkyWhite()
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
okio.internal.-Buffer: java.lang.String commonReadUtf8LineStrict(okio.Buffer,long)
com.waldy.androidcurrencyexchange.MainActivityScreenKt: kotlin.Unit MainActivityScreen$lambda$2(int,androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: java.lang.String sanitizeAmount(java.lang.String)
okio.RealBufferedSink: okio.BufferedSink writeUtf8CodePoint(int)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
androidx.compose.ui.input.pointer.PointerEventPass: androidx.compose.ui.input.pointer.PointerEventPass valueOf(java.lang.String)
androidx.compose.ui.graphics.layer.ViewLayerVerificationHelper28: void setOutlineSpotShadowColor(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
androidx.core.view.ViewCompat$Api24Impl: void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
okio.Buffer$inputStream$1: int available()
okio.internal.-ByteString: boolean commonEndsWith(okio.ByteString,byte[])
okio.Pipe: boolean getSourceClosed$okio()
retrofit2.ParameterHandler$Headers: ParameterHandler$Headers(java.lang.reflect.Method,int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder validateEagerly(boolean)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: SettingsViewModel(com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase,com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase,com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase,com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase)
okio.internal.-ByteString: int decodeHexDigit(char)
androidx.compose.foundation.text.KeyCommand: androidx.compose.foundation.text.KeyCommand[] values()
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
okio.RealBufferedSource: long read(okio.Buffer,long)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
androidx.compose.ui.window.PopupLayout: void setLayoutDirection(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
retrofit2.http.HEAD: java.lang.String value()
retrofit2.DefaultCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
okio.Buffer: void close()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
okio.internal.-Path: int access$rootLength(okio.Path)
okio.FileMetadata: boolean isRegularFile()
retrofit2.KotlinExtensions$await$4$2: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
retrofit2.ParameterHandler$RelativeUrl: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
okio.FileMetadata: java.lang.Long getLastAccessedAtMillis()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
okio.internal.-ByteString: char[] getHEX_DIGIT_CHARS()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okio.ByteString: okio.ByteString digest$okio(java.lang.String)
okio.Buffer: int hashCode()
okio.Buffer$outputStream$1: void close()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
com.google.android.material.button.MaterialButtonGroup: com.google.android.material.shape.StateListCornerSize getInnerCornerSizeStateList()
com.waldy.androidcurrencyexchange.ui.util.Language: com.waldy.androidcurrencyexchange.ui.util.Language valueOf(java.lang.String)
okio.RealBufferedSource: long readLongLe()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
okio.Path: java.util.List getSegmentsBytes()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
okio.internal.-Buffer: okio.Buffer commonWriteDecimalLong(okio.Buffer,long)
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
okio.Okio: okio.Sink blackhole()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
okio.internal.-FileSystem$commonListRecursively$1: java.lang.Object invokeSuspend(java.lang.Object)
okio.internal.-Buffer: okio.ByteString commonSnapshot(okio.Buffer)
okio.internal.ResourceFileSystem$Companion: java.util.List toClasspathRoots(java.lang.ClassLoader)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
okio.Timeout: boolean hasDeadline()
okio.ByteString: java.lang.String string(java.nio.charset.Charset)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
okio.OutputStreamSink: OutputStreamSink(java.io.OutputStream,okio.Timeout)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
okio.internal.-ByteString: okio.ByteString commonToByteString(byte[],int,int)
androidx.compose.ui.text.android.CanvasCompatO: boolean clipOutRect(android.graphics.Canvas,android.graphics.RectF)
okio.RealBufferedSink: RealBufferedSink(okio.Sink)
okio.AsyncTimeout$Companion: java.util.concurrent.locks.Condition getCondition()
androidx.compose.runtime.InvalidationResult: androidx.compose.runtime.InvalidationResult valueOf(java.lang.String)
androidx.compose.ui.text.android.CanvasCompatQ: void drawTextRun(android.graphics.Canvas,android.graphics.text.MeasuredText,int,int,int,int,float,float,boolean,android.graphics.Paint)
androidx.compose.ui.window.PopupLayout: kotlin.jvm.functions.Function2 getContent()
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
okio.ByteString: void writeObject(java.io.ObjectOutputStream)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
okio.NioSystemFileSystem: void atomicMove(okio.Path,okio.Path)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.MutableStateFlow access$get_language$p(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel)
okio.internal.-ByteString: java.lang.String commonBase64Url(okio.ByteString)
okio.RealBufferedSink: java.lang.String toString()
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void access$LanguageSelector(com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
okio.InputStreamSource: long read(okio.Buffer,long)
retrofit2.Invocation: retrofit2.Invocation of(java.lang.reflect.Method,java.util.List)
okio.Options: boolean contains(okio.ByteString)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase: java.lang.Object invoke(java.lang.String,kotlin.coroutines.Continuation)
retrofit2.Utils$ParameterizedTypeImpl: int hashCode()
retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(okhttp3.ResponseBody)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
okio.FileHandle$FileHandleSink: void flush()
androidx.compose.ui.platform.ViewLayer: void setCameraDistancePx(float)
com.google.gson.reflect.TypeToken: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
okio.ByteString: okio.ByteString hmacSha1(okio.ByteString)
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
androidx.compose.ui.text.android.CanvasCompatS: void drawPatch(android.graphics.Canvas,android.graphics.NinePatch,android.graphics.RectF,android.graphics.Paint)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
okio.FileSystem: java.util.List listOrNull(okio.Path)
retrofit2.OkHttpCall$NoContentResponseBody: okhttp3.MediaType contentType()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: boolean equals(java.lang.Object)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
okio.NioFileSystemWrappingFileSystem: okio.Source source(okio.Path)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
okio.GzipSink: void close()
okio.internal.-Buffer: int selectPrefix(okio.Buffer,okio.Options,boolean)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase access$getGetConversionRateUseCase$p(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel)
okio.ByteString: boolean endsWith(byte[])
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.compose.ui.platform.AndroidComposeView: void getFontLoader$annotations()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.compose.ui.platform.AndroidViewConfigurationApi34: float getScaledHandwritingSlop(android.view.ViewConfiguration)
okio.internal.-Path: int commonCompareTo(okio.Path,okio.Path)
okio.ForwardingFileSystem: void atomicMove(okio.Path,okio.Path)
androidx.compose.ui.autofill.AutofillApi23Helper: int addChildCount(android.view.ViewStructure,int)
retrofit2.Utils: Utils()
okio.ByteString: int lastIndexOf(byte[])
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: okhttp3.Request request()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$2$1: CurrencyExchangeScreenKt$CurrencyExchangeRoute$2$1(java.lang.Object)
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: java.lang.String toString()
com.waldy.androidcurrencyexchange.CurrencyApplication: void onCreate()
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
retrofit2.CompletableFutureCallAdapterFactory$CallCancelCompletableFuture: CompletableFutureCallAdapterFactory$CallCancelCompletableFuture(retrofit2.Call)
okio.BufferedSource: long readAll(okio.Sink)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
okio.FileSystem: okio.FileMetadata metadata(okio.Path)
retrofit2.Retrofit: java.util.List converterFactories()
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
okio.NioFileSystemWrappingFileSystem: java.util.List listOrNull(okio.Path)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4: CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4(java.util.List,kotlin.jvm.functions.Function1,androidx.compose.runtime.MutableState)
androidx.constraintlayout.core.SolverVariable$Type: androidx.constraintlayout.core.SolverVariable$Type[] values()
okio.ForwardingFileSystem: okio.Path canonicalize(okio.Path)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.layout.Placeable$PlacementScope getPlacementScope()
retrofit2.OkHttpCall: okio.Timeout timeout()
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
okio.Utf8: long size$default(java.lang.String,int,int,int,java.lang.Object)
okio.ByteString$Companion: ByteString$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.-SegmentedByteString: java.lang.String toHexString(long)
com.waldy.androidcurrencyexchange.data.local.CurrencyCache: CurrencyCache(android.content.Context)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
okio.Buffer: okio.Buffer writeShort(int)
okio.AsyncTimeout: java.io.IOException access$newTimeoutException(java.io.IOException)
retrofit2.OkHttpCall$1: void callFailure(java.lang.Throwable)
retrofit2.Platform: boolean isDefaultMethod(java.lang.reflect.Method)
okio.Path: okio.Path normalized()
okio.internal.ResourceFileSystem: okio.FileHandle openReadWrite(okio.Path,boolean,boolean)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
okio.Buffer: okio.Buffer writeUtf8(java.lang.String,int,int)
okio.Buffer$inputStream$1: java.lang.String toString()
okio.Buffer: void clear()
okio.FileSystem: void deleteRecursively(okio.Path,boolean)
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
okio.Buffer: long indexOf(okio.ByteString,long)
androidx.compose.foundation.text.selection.SelectionHandleAnchor: androidx.compose.foundation.text.selection.SelectionHandleAnchor[] values()
retrofit2.Response: retrofit2.Response error(int,okhttp3.ResponseBody)
retrofit2.Response: retrofit2.Response success(java.lang.Object)
retrofit2.Utils$WildcardTypeImpl: java.lang.reflect.Type[] getLowerBounds()
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
okio.internal.ResourceFileSystem: okio.FileMetadata metadataOrNull(okio.Path)
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe()
okio.-DeprecatedOkio: okio.Sink blackhole()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: void throwIfCaught()
okio.RealBufferedSink: okio.BufferedSink write(okio.ByteString)
okio.internal.-Path: int access$getIndexOfLastSlash(okio.Path)
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getLightTan()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2$1: UserPreferencesRepository$special$$inlined$map$2$2$1(com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
retrofit2.Retrofit: retrofit2.ServiceMethod loadServiceMethod(java.lang.reflect.Method)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: SettingsViewModel$onLanguageChange$1(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel,com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.coroutines.Continuation)
okio.Buffer: long readHexadecimalUnsignedLong()
okio.internal.-FileSystem: boolean commonExists(okio.FileSystem,okio.Path)
androidx.compose.foundation.text.selection.SelectionHandleAnchor: androidx.compose.foundation.text.selection.SelectionHandleAnchor valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okio.BufferedSink: void flush()
okio.RealBufferedSource: byte[] readByteArray(long)
androidx.constraintlayout.widget.Barrier: void setType(int)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
kotlin.collections.AbstractCollection: boolean remove(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
kotlin.DeprecationLevel: kotlin.DeprecationLevel[] values()
okio.Path$Companion: okio.Path get(java.lang.String)
okio.FileHandle: void access$setOpenStreamCount$p(okio.FileHandle,int)
okio.ForwardingSource: java.lang.String toString()
androidx.compose.ui.node.LayoutNode$UsageByParent: androidx.compose.ui.node.LayoutNode$UsageByParent[] values()
retrofit2.BuiltInConverters$BufferingResponseBodyConverter: okhttp3.ResponseBody convert(okhttp3.ResponseBody)
okio.HashingSource: okio.HashingSource sha512(okio.Source)
okio.HashingSink$Companion: okio.HashingSink hmacSha512(okio.Sink,okio.ByteString)
okio.FileSystem: java.lang.Object -write$default(okio.FileSystem,okio.Path,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
androidx.compose.ui.node.LayoutNode$UsageByParent: androidx.compose.ui.node.LayoutNode$UsageByParent valueOf(java.lang.String)
androidx.compose.ui.text.android.CanvasCompatQ: void drawColor(android.graphics.Canvas,long,android.graphics.BlendMode)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okio.Timeout: Timeout()
okio.ZipFileSystem$Companion: okio.Path getROOT()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
androidx.transition.ViewGroupUtils$Api29Impl: void suppressLayout(android.view.ViewGroup,boolean)
okio.ByteString$Companion: okio.ByteString of(byte[],int,int)
okio.RealBufferedSource$inputStream$1: int read()
okio.Buffer: long completeSegmentByteCount()
okio.ByteString: okio.ByteString hmacSha512(okio.ByteString)
kotlin.coroutines.jvm.internal.RestrictedSuspendLambda: int getArity()
com.google.android.material.divider.MaterialDivider: void setDividerInsetStart(int)
okio.Timeout: void throwIfReached()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax valueOf(java.lang.String)
okio.Options$Companion: void buildTrieRecursive$default(okio.Options$Companion,long,okio.Buffer,int,java.util.List,int,int,java.util.List,int,java.lang.Object)
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicMinMax[] values()
okio.internal.-ByteString: boolean commonStartsWith(okio.ByteString,okio.ByteString)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.compose.ui.input.pointer.MotionEventHelper: long toRawOffset-dBAh8RU(android.view.MotionEvent,int)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
retrofit2.Response: Response(okhttp3.Response,java.lang.Object,okhttp3.ResponseBody)
okio.RealBufferedSource: short readShortLe()
okio.internal.-Path: okio.Path commonNormalized(okio.Path)
kotlin.jvm.internal.CallableReference: boolean isOpen()
okio.RealBufferedSource: long readAll(okio.Sink)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipStartPadding(float)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.SoftwareKeyboardController getSoftwareKeyboardController()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsGroup$1$1: SettingsScreenKt$SettingsGroup$1$1(kotlin.jvm.functions.Function2)
okio.SegmentPool: okio.Segment take()
okio.internal.-Path: void getSLASH$annotations()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.domain.model.Currency component1()
okio.internal.FixedLengthSource: long read(okio.Buffer,long)
okio.BlackholeSink: void close()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
okio.internal.-RealBufferedSource: long commonIndexOf(okio.RealBufferedSource,okio.ByteString,long)
kotlin.collections.AbstractCollection: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void performSelectionOnLegacyTextField-8ffj60Q(long,androidx.compose.foundation.text.selection.TextFieldSelectionManager,kotlin.jvm.functions.Function1)
okio.internal.-Buffer: okio.ByteString commonReadByteString(okio.Buffer)
androidx.compose.ui.graphics.AndroidGraphicsContext$UniqueDrawingIdApi29: long getUniqueDrawingId(android.view.View)
okio.FileSystem: okio.Sink appendingSink$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.WindowInfo getWindowInfo()
kotlin.jvm.internal.FunctionReference: int getArity()
com.google.android.material.tabs.TabLayout: void setTabRippleColor(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
retrofit2.RequestFactory$Builder: void validatePathName(int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
retrofit2.HttpServiceMethod$SuspendForBody: HttpServiceMethod$SuspendForBody(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter,boolean)
retrofit2.SkipCallbackExecutorImpl: SkipCallbackExecutorImpl()
retrofit2.Utils: java.lang.Class getRawType(java.lang.reflect.Type)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
okio.-SegmentedByteString: int resolveDefaultParameter(okio.ByteString,int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
retrofit2.ParameterHandler$QueryMap: ParameterHandler$QueryMap(java.lang.reflect.Method,int,retrofit2.Converter,boolean)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.input.TextInputService getTextInputService()
androidx.compose.ui.autofill.AutofillApi23Helper: android.view.ViewStructure newChild(android.view.ViewStructure,int)
okio.Buffer: byte[] readByteArray(long)
okio.internal.-Buffer: okio.Segment commonWritableSegment(okio.Buffer,int)
okio.Buffer: okio.BufferedSource peek()
okio.Path: java.util.List getSegments()
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy: androidx.compose.ui.input.pointer.util.VelocityTracker1D$Strategy valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
okio.Pipe$source$1: okio.Timeout timeout()
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
androidx.compose.material3.tokens.ColorSchemeKeyTokens: androidx.compose.material3.tokens.ColorSchemeKeyTokens valueOf(java.lang.String)
retrofit2.Utils$WildcardTypeImpl: Utils$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])
okio.internal.ZipFilesKt: void readExtra(okio.BufferedSource,int,kotlin.jvm.functions.Function2)
okio.ByteString$Companion: okio.ByteString of(java.nio.ByteBuffer)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
okio.internal.ZipEntry: java.util.List getChildren()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
okio.DeflaterSink: void close()
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
kotlin.collections.AbstractCollection: boolean isEmpty()
retrofit2.Utils: java.lang.reflect.Type getParameterLowerBound(int,java.lang.reflect.ParameterizedType)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1: UserPreferencesRepository$special$$inlined$map$1(kotlinx.coroutines.flow.Flow)
retrofit2.RequestBuilder: void addPart(okhttp3.Headers,okhttp3.RequestBody)
androidx.activity.ComponentActivity: void onNewIntent(android.content.Intent)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: void enqueue(retrofit2.Callback)
okio.internal.ResourceFileSystem: okio.Path canonicalize(okio.Path)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okio.NioFileSystemFileHandle: void protectedClose()
okio.ByteString$Companion: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)
retrofit2.OkHttpCall: boolean isExecuted()
retrofit2.Utils$ParameterizedTypeImpl: java.lang.reflect.Type getRawType()
com.google.android.material.tabs.TabLayout: void setOnTabSelectedListener(com.google.android.material.tabs.TabLayout$BaseOnTabSelectedListener)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
okio.FileMetadata: okio.Path getSymlinkTarget()
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
androidx.core.view.ViewCompat$Api24Impl: void cancelDragAndDrop(android.view.View)
okio.FileHandle: int protectedRead(long,byte[],int,int)
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: java.lang.String toString()
androidx.compose.foundation.layout.IntrinsicSize: androidx.compose.foundation.layout.IntrinsicSize[] values()
okio.HashingSource: HashingSource(okio.Source,java.security.MessageDigest)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.activity.ComponentActivity: void setContentView(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$4: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.compose.ui.focus.CustomDestinationResult: androidx.compose.ui.focus.CustomDestinationResult[] values()
androidx.compose.ui.platform.ViewLayer: long getOwnerViewId()
retrofit2.ParameterHandler$Part: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt$lambda-1$1: ComposableSingletons$MainActivityKt$lambda-1$1()
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
okio.-DeprecatedOkio: okio.Source source(java.io.File)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.google.android.material.button.MaterialButtonGroup: int getFirstVisibleChildIndex()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit LanguageSelector$lambda$22$lambda$21(androidx.compose.runtime.MutableState)
com.google.android.material.chip.Chip: void setTextAppearance(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void LanguageSelector$lambda$20(androidx.compose.runtime.MutableState,boolean)
androidx.viewpager2.widget.ViewPager2: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
okio.Okio: okio.HashingSink hashingSink(okio.Sink,java.security.MessageDigest)
okio.InflaterSource: InflaterSource(okio.BufferedSource,java.util.zip.Inflater)
okio.Pipe$sink$1: void write(okio.Buffer,long)
okio.OutputStreamSink: void write(okio.Buffer,long)
okio.internal.-ByteString: int commonIndexOf(okio.ByteString,byte[],int)
androidx.viewpager2.widget.ViewPager2: void setOrientation(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState copy$default(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState,com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency,java.lang.String,java.lang.String,boolean,boolean,java.lang.String,int,java.lang.Object)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: kotlin.Unit CurrencySelector$lambda$20$lambda$19(androidx.compose.runtime.MutableState)
retrofit2.Call: void enqueue(retrofit2.Callback)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
okio.Pipe$source$1: Pipe$source$1(okio.Pipe)
com.google.gson.reflect.TypeToken: boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
okio.Okio: okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
okio.Okio__JvmOkioKt: okio.Sink sink(java.io.File,boolean)
retrofit2.ParameterHandler$Query: ParameterHandler$Query(java.lang.String,retrofit2.Converter,boolean)
okio.internal.ZipFilesKt$readEntry$1: void invoke(int,long)
retrofit2.http.Query: boolean encoded()
okio.Path: okio.Path resolve(java.lang.String,boolean)
androidx.core.view.ViewCompat$Api24Impl: void dispatchStartTemporaryDetach(android.view.View)
com.google.gson.reflect.TypeToken: boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
retrofit2.Response: okhttp3.Headers headers()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.activity.ComponentActivity: void access$addObserverForBackInvoker(androidx.activity.ComponentActivity,androidx.activity.OnBackPressedDispatcher)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
okio.RealBufferedSink: okio.BufferedSink writeShortLe(int)
com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase: kotlinx.coroutines.flow.Flow invoke()
com.google.android.material.internal.ClippableRoundedCornerLayout: float[] getCornerRadii()
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
retrofit2.ParameterHandler$QueryMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
okio.FileHandle$FileHandleSource: okio.FileHandle getFileHandle()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteInt(okio.RealBufferedSink,int)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: DefaultCallAdapterFactory$ExecutorCallbackCall(java.util.concurrent.Executor,retrofit2.Call)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
okio.internal.-FileSystem: void commonCopy(okio.FileSystem,okio.Path,okio.Path)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
okio.BufferedSink: okio.BufferedSink writeByte(int)
retrofit2.Call: boolean isCanceled()
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
okio.Buffer: okio.Buffer copy()
okio.internal.-RealBufferedSource: java.lang.String commonReadUtf8(okio.RealBufferedSource)
okio.-Base64: byte[] decodeBase64ToArray(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
okio.Buffer: okio.Timeout timeout()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$4: void invoke(androidx.compose.foundation.lazy.LazyItemScope,int,androidx.compose.runtime.Composer,int)
okio.JvmSystemFileSystem: okio.Sink sink(okio.Path,boolean)
retrofit2.KotlinExtensions: java.lang.Object await(retrofit2.Call,kotlin.coroutines.Continuation)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: double parseRateFromResponse(com.google.gson.JsonObject,com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency)
androidx.compose.ui.graphics.layer.ViewLayerVerificationHelper28: void setOutlineAmbientShadowColor(android.view.View,int)
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
androidx.core.view.ViewCompat$Api24Impl: void setPointerIcon(android.view.View,android.view.PointerIcon)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
okio.InflaterSource: boolean refill()
okio.RealBufferedSource: RealBufferedSource(okio.Source)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
okio.Buffer: java.lang.String readUtf8()
okio.BufferedSource: void readFully(okio.Buffer,long)
okio.ByteString$Companion: okio.ByteString -deprecated_of(java.nio.ByteBuffer)
androidx.compose.ui.autofill.AutofillType: androidx.compose.ui.autofill.AutofillType[] values()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$2$1: SettingsRouteKt$SettingsRoute$2$1(java.lang.Object)
okio.NioSystemFileSystem: void createSymlink(okio.Path,okio.Path)
okio.Buffer$UnsafeCursor: void setSegment$okio(okio.Segment)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: okio.Timeout timeout()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
androidx.compose.ui.platform.MotionEventVerifierApi29: boolean isValidMotionEvent(android.view.MotionEvent,int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorErrorColor()
okio.Buffer: boolean rangeEquals(long,okio.ByteString)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
okio.RealBufferedSource: okio.ByteString readByteString(long)
androidx.viewpager2.widget.ViewPager2: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
okio.Okio: okio.Sink sink(java.io.OutputStream)
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.unit.LayoutDirection getParentLayoutDirection()
okio.Buffer: okio.ByteString snapshot()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.android.material.button.MaterialButton: int getOpticalCenterShift()
retrofit2.RequestBuilder: void addPathParam(java.lang.String,java.lang.String,boolean)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
okio.FileHandle$FileHandleSink: okio.FileHandle getFileHandle()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.StateFlow getLanguage()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: okhttp3.MediaType contentType()
retrofit2.ParameterHandler$Part: ParameterHandler$Part(java.lang.reflect.Method,int,okhttp3.Headers,retrofit2.Converter)
retrofit2.Response: java.lang.Object body()
okio.BufferedSource: okio.Buffer buffer()
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
retrofit2.http.HTTP: java.lang.String path()
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.compose.ui.text.android.CanvasCompatO: boolean clipOutRect(android.graphics.Canvas,android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
okio.RealBufferedSink$outputStream$1: void close()
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
retrofit2.RequestBuilder: RequestBuilder(java.lang.String,okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.MediaType,boolean,boolean,boolean)
com.google.android.material.chip.Chip: void setMinLines(int)
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setHintMaxLines(int)
retrofit2.ParameterHandler$Field: ParameterHandler$Field(java.lang.String,retrofit2.Converter,boolean)
retrofit2.Invocation: Invocation(java.lang.reflect.Method,java.util.List)
kotlin.collections.AbstractList: void add(int,java.lang.Object)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
com.google.android.material.divider.MaterialDivider: void setDividerThicknessResource(int)
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase: GetConversionRateUseCase(com.waldy.androidcurrencyexchange.domain.repository.CurrencyRepository)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
retrofit2.Call: retrofit2.Response execute()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isText(android.view.autofill.AutofillValue)
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
okio.internal.-ByteString: void getHEX_DIGIT_CHARS$annotations()
okio.FileMetadata: okio.FileMetadata copy$default(okio.FileMetadata,boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map,int,java.lang.Object)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
okio.ZipFileSystem: ZipFileSystem(okio.Path,okio.FileSystem,java.util.Map,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
retrofit2.RequestBuilder: void canonicalizeForPath(okio.Buffer,java.lang.String,int,int,boolean)
com.google.android.material.tabs.TabLayout: void setupWithViewPager(androidx.viewpager.widget.ViewPager)
androidx.core.os.BundleCompat$Api33Impl: java.lang.Object[] getParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
okio.internal.-Buffer: long commonRead(okio.Buffer,okio.Buffer,long)
okio.FileSystem: okio.FileMetadata metadataOrNull(okio.Path)
okio.internal.ResourceFileSystem: java.util.List getRoots()
com.waldy.androidcurrencyexchange.MainActivityScreenKt: void CustomTabRow(java.util.List,int,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1: MainActivityScreenKt$MainActivityScreen$1(java.util.List,androidx.compose.foundation.pager.PagerState,kotlinx.coroutines.CoroutineScope)
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
okio.Timeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1: void invoke(androidx.compose.foundation.layout.ColumnScope,androidx.compose.runtime.Composer,int)
okio.internal.FixedLengthSource: FixedLengthSource(okio.Source,long,boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$1$1: CurrencyExchangeScreenKt$CurrencyExchangeRoute$1$1(java.lang.Object)
okio.internal.ResourceFileSystem$Companion$toJarRoot$zip$1: ResourceFileSystem$Companion$toJarRoot$zip$1()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1(kotlin.coroutines.Continuation,java.lang.Exception)
com.waldy.androidcurrencyexchange.R: R()
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.waldy.androidcurrencyexchange.CurrencyApplication: com.waldy.androidcurrencyexchange.di.AppContainer getContainer()
okio.FileMetadata: java.lang.Long getLastModifiedAtMillis()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
okio.NioFileSystemWrappingFileSystem: void atomicMove(okio.Path,okio.Path)
okio.CipherSource: long read(okio.Buffer,long)
okio.Throttler$sink$1: Throttler$sink$1(okio.Sink,okio.Throttler)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$1$1: java.lang.Object invoke(java.lang.Object)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
okio.Buffer: byte readByte()
okio.GzipSink: okio.Timeout timeout()
okio.SegmentedByteString: int hashCode()
okio.GzipSource: void close()
okio.GzipSource: okio.Timeout timeout()
okio.ByteString: byte[] toByteArray()
okio.Buffer: okio.BufferedSink emitCompleteSegments()
okio.Timeout$Companion$NONE$1: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$2: CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$2(kotlin.jvm.functions.Function1,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
okio.internal.-Buffer: okio.Buffer$UnsafeCursor commonReadAndWriteUnsafe(okio.Buffer,okio.Buffer$UnsafeCursor)
okio.internal.-FileSystem: void commonDeleteRecursively(okio.FileSystem,okio.Path,boolean)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
okio.internal.ResourceFileSystem$Companion: ResourceFileSystem$Companion()
okio.ForwardingSink: void close()
androidx.activity.ComponentActivity: void onTrimMemory(int)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
okio.SegmentedByteString: okio.ByteString toByteString()
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1: java.lang.Object invokeSuspend(java.lang.Object)
retrofit2.Retrofit: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsGroup$1$1: void invoke(androidx.compose.foundation.layout.ColumnScope,androidx.compose.runtime.Composer,int)
kotlinx.coroutines.flow.SharingCommand: kotlinx.coroutines.flow.SharingCommand valueOf(java.lang.String)
okio.internal.-RealBufferedSource: okio.BufferedSource commonPeek(okio.RealBufferedSource)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
okio.RealBufferedSource: int readUtf8CodePoint()
retrofit2.Retrofit: Retrofit(okhttp3.Call$Factory,okhttp3.HttpUrl,java.util.List,java.util.List,java.util.concurrent.Executor,boolean)
com.google.android.material.button.MaterialButton: void setStateListShapeAppearanceModel(com.google.android.material.shape.StateListShapeAppearanceModel)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: double component1()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
okio.internal.-Buffer: int commonReadInt(okio.Buffer)
okio.NioFileSystemWrappingFileSystem: java.nio.file.Path resolve(okio.Path)
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
okio.Okio__JvmOkioKt: java.util.logging.Logger access$getLogger$p()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.waldy.androidcurrencyexchange.ui.util.Language: com.waldy.androidcurrencyexchange.ui.util.Language[] $values()
okio.Okio__JvmOkioKt: okio.Sink sink(java.io.File)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1: kotlin.Unit invoke$lambda$2$lambda$1$lambda$0(kotlinx.coroutines.CoroutineScope,androidx.compose.foundation.pager.PagerState,int)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken get(java.lang.reflect.Type)
okio.SegmentedByteString: java.lang.Object writeReplace()
okio.internal.-RealBufferedSource: okio.ByteString commonReadByteString(okio.RealBufferedSource,long)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
okio.Buffer: java.lang.String readUtf8LineStrict(long)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
androidx.compose.ui.text.android.CanvasCompatQ: void disableZ(android.graphics.Canvas)
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[])
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
okio.internal.ResourceFileSystem$Companion: kotlin.Pair toFileRoot(java.net.URL)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder callbackExecutor(java.util.concurrent.Executor)
okio.FileSystem$Companion: FileSystem$Companion()
okio.internal.-ByteString: int commonLastIndexOf(okio.ByteString,okio.ByteString,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
okio.FileSystem: okio.FileHandle openReadWrite(okio.Path)
kotlin.DeprecationLevel: kotlin.DeprecationLevel valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
com.google.android.material.divider.MaterialDivider: int getDividerColor()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
retrofit2.HttpServiceMethod: retrofit2.Converter createResponseConverter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.activity.ComponentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
okio.HashingSink$Companion: okio.HashingSink sha1(okio.Sink)
okio.Okio: okio.Sink sink$default(java.io.File,boolean,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.compose.ui.text.android.CanvasCompatR: boolean quickReject(android.graphics.Canvas,android.graphics.Path)
okio.ForwardingFileSystem: void createDirectory(okio.Path,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
okio.Buffer$outputStream$1: void flush()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
retrofit2.RequestBuilder: void addFormField(java.lang.String,java.lang.String,boolean)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
okhttp3.RequestBody: boolean isOneShot()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
okio.Path: boolean isRelative()
okio.Buffer$inputStream$1: int read()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
okio.internal.-Path: okio.ByteString getSlash(okio.Path)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
okio.GzipSource: void checkEqual(java.lang.String,int,int)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: int hashCode()
retrofit2.ParameterHandler$HeaderMap: void apply(retrofit2.RequestBuilder,java.util.Map)
okio.Throttler: long byteCountOrWaitNanos$okio(long,long)
okio.FileSystem: void copy(okio.Path,okio.Path)
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2$1: GetConversionRateUseCase$invoke$$inlined$map$1$2$1(com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
okio.AsyncTimeout: long access$remainingNanos(okio.AsyncTimeout,long)
okio.HashingSource: okio.HashingSource sha256(okio.Source)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
okio.FileHandle: void protectedResize(long)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
okio.internal.EocdRecord: long getCentralDirectoryOffset()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
okio.SegmentedByteString: java.lang.String base64()
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder client(okhttp3.OkHttpClient)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
okio.FileHandle$FileHandleSource: FileHandle$FileHandleSource(okio.FileHandle,long)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax[] values()
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: CurrencyResponse(java.lang.String,java.util.Map)
retrofit2.OptionalConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.compose.ui.platform.coreshims.ViewStructureCompat$Api23Impl: void setClassName(android.view.ViewStructure,java.lang.String)
okio.ByteString: int lastIndexOf(okio.ByteString,int)
okio.internal.-Buffer: long commonIndexOf(okio.Buffer,okio.ByteString,long)
retrofit2.Utils$GenericArrayTypeImpl: Utils$GenericArrayTypeImpl(java.lang.reflect.Type)
androidx.compose.ui.platform.AndroidComposeViewVerificationHelperMethodsO: void focusable(android.view.View,int,boolean)
okio.internal.-Buffer: long commonWriteAll(okio.Buffer,okio.Source)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
okio.BufferedSource: long readHexadecimalUnsignedLong()
androidx.compose.ui.text.android.CanvasCompatQ: void drawRenderNode(android.graphics.Canvas,android.graphics.RenderNode)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode[] values()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
okio.SegmentedByteString: okio.ByteString toAsciiLowercase()
okio.JvmFileHandle: int protectedRead(long,byte[],int,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1: kotlin.Unit invoke$lambda$3$lambda$2(kotlin.jvm.functions.Function1,androidx.compose.runtime.MutableState,androidx.compose.foundation.lazy.LazyListScope)
okio.-DeprecatedOkio: okio.Source source(java.net.Socket)
okio.Okio: okio.CipherSink cipherSink(okio.Sink,javax.crypto.Cipher)
okio.Okio: java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1)
okio.FileHandle$FileHandleSource: okio.Timeout timeout()
okio.Timeout: long deadlineNanoTime()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter$BodyCallback: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight[] values()
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor access$getReportFullyDrawnExecutor$p(androidx.activity.ComponentActivity)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
retrofit2.Retrofit: java.util.concurrent.Executor callbackExecutor()
com.google.android.material.chip.Chip: void setLines(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
kotlin.collections.AbstractList: java.lang.Object set(int,java.lang.Object)
okio.Buffer: okio.Buffer emitCompleteSegments()
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
okio.SegmentedByteString: okio.ByteString hmac$okio(java.lang.String,okio.ByteString)
okio.FileHandle$FileHandleSource: void close()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
androidx.compose.ui.graphics.Api26Bitmap: android.graphics.Bitmap createBitmap-x__-hDU$ui_graphics_release(int,int,int,boolean,androidx.compose.ui.graphics.colorspace.ColorSpace)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
okio.internal.ResourceFileSystem$roots$2: java.lang.Object invoke()
androidx.compose.ui.platform.ViewLayer: androidx.compose.ui.platform.DrawChildContainer getContainer()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
okio.RealBufferedSink: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
retrofit2.BuiltInConverters$ToStringConverter: BuiltInConverters$ToStringConverter()
com.google.android.material.tabs.TabLayout$TabView: int getContentWidth()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: RequestBuilder$ContentTypeOverridingRequestBody(okhttp3.RequestBody,okhttp3.MediaType)
okio.ForwardingSource: long read(okio.Buffer,long)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.google.android.material.button.MaterialButton: float getDisplayedWidthIncrease()
androidx.activity.EdgeToEdgeApi26: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
androidx.compose.ui.platform.AndroidComposeViewForceDarkModeQ: void disallowForceDark(android.view.View)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
androidx.compose.ui.contentcapture.AndroidContentCaptureManager$TranslateStatus: androidx.compose.ui.contentcapture.AndroidContentCaptureManager$TranslateStatus valueOf(java.lang.String)
androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.core.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
retrofit2.Platform$Android: java.util.concurrent.Executor defaultCallbackExecutor()
okio.DeflaterSink: DeflaterSink(okio.BufferedSink,java.util.zip.Deflater)
retrofit2.Response: retrofit2.Response success(int,java.lang.Object)
androidx.core.os.BundleCompat$Api33Impl: android.util.SparseArray getSparseParcelableArray(android.os.Bundle,java.lang.String,java.lang.Class)
okio.Buffer: okio.Buffer writeHexadecimalUnsignedLong(long)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
okio.AsyncTimeout: okio.Sink sink(okio.Sink)
retrofit2.KotlinExtensions: java.lang.Object awaitResponse(retrofit2.Call,kotlin.coroutines.Continuation)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
okio.SegmentedByteString: okio.ByteString toAsciiUppercase()
kotlin.coroutines.jvm.internal.RestrictedContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
retrofit2.http.Field: java.lang.String value()
androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl[] values()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
okio.Path: okio.Path get(java.io.File)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
okio.CipherSource: void doFinal()
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.compose.ui.platform.ViewLayer: long getLayerId()
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.google.android.material.tabs.TabLayout: int getTabMaxWidth()
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
retrofit2.BuiltInConverters$ToStringConverter: java.lang.Object convert(java.lang.Object)
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe(okio.Buffer$UnsafeCursor)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.chip.Chip: float getChipIconSize()
com.google.android.material.divider.MaterialDivider: void setDividerInsetEndResource(int)
retrofit2.Call: void cancel()
okio.BufferedSource: long indexOfElement(okio.ByteString,long)
okio.Buffer: okio.Buffer$UnsafeCursor readUnsafe$default(okio.Buffer,okio.Buffer$UnsafeCursor,int,java.lang.Object)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1: SettingsScreenKt$SelectionDialog$1(java.lang.String,java.util.List,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$2: java.lang.Object invoke(int)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.viewpager2.widget.ViewPager2: void setCurrentItem(int)
com.google.android.material.tabs.TabLayout: int getTabIndicatorGravity()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
okio.Pipe: long getMaxBufferSize$okio()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
okio.BufferedSink: okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
okio.BufferedSource: okio.ByteString readByteString()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
okio.Buffer: okio.Buffer writeDecimalLong(long)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
okio.internal.-Path: boolean access$lastSegmentIsDotDot(okio.Path)
okio.Segment: Segment(byte[],int,int,boolean,boolean)
androidx.compose.ui.graphics.CanvasZHelper: void enableZ(android.graphics.Canvas,boolean)
retrofit2.Platform: retrofit2.Platform get()
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.window.PopupPositionProvider getPositionProvider()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
okio.BufferedSource: okio.Buffer getBuffer()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
okio.Buffer: okio.Buffer write(okio.ByteString,int,int)
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicatorGravity(int)
okio.Buffer: void flush()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
okio.FileMetadata: boolean isDirectory()
retrofit2.Utils$ParameterizedTypeImpl: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
okio.Buffer: okio.ByteString hmacSha512(okio.ByteString)
com.google.android.material.divider.MaterialDivider: void setDividerInsetEnd(int)
okio.SegmentedByteString: boolean rangeEquals(int,okio.ByteString,int,int)
okio.-SegmentedByteString: void checkOffsetAndCount(long,long,long)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
okio.ForwardingTimeout: void throwIfReached()
retrofit2.Retrofit$Builder: Retrofit$Builder(retrofit2.Retrofit)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
okio.internal.-ByteString: okio.ByteString commonDecodeHex(java.lang.String)
okio.ForwardingSink: void write(okio.Buffer,long)
okio.internal.-Path: okio.Path commonResolve(okio.Path,okio.ByteString,boolean)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.semantics.SemanticsOwner getSemanticsOwner()
androidx.compose.foundation.text.input.internal.undo.TextEditType: androidx.compose.foundation.text.input.internal.undo.TextEditType valueOf(java.lang.String)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void ThemeSelector$lambda$9(androidx.compose.runtime.MutableState,boolean)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
kotlin.collections.AbstractCollection: boolean containsAll(java.util.Collection)
okio.BufferedSource: java.lang.String readUtf8LineStrict()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
okio.AsyncTimeout: void access$setHead$cp(okio.AsyncTimeout)
com.waldy.androidcurrencyexchange.ui.util.Localization: java.lang.String getString(com.waldy.androidcurrencyexchange.ui.util.Language,java.lang.String)
androidx.compose.ui.platform.ComposeView: void setContent(kotlin.jvm.functions.Function2)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
androidx.compose.ui.platform.coreshims.ViewStructureCompat$Api23Impl: void setContentDescription(android.view.ViewStructure,java.lang.CharSequence)
okio.internal.-Buffer: int commonSeek(okio.Buffer$UnsafeCursor,long)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1: void lambda$onFailure$1(retrofit2.Callback,java.lang.Throwable)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.ClipboardManager getClipboardManager()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
okio.FileHandle$FileHandleSink: void setClosed(boolean)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
okio.PeekSource: PeekSource(okio.BufferedSource)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
okio.SegmentPool: SegmentPool()
retrofit2.DefaultCallAdapterFactory$1: java.lang.reflect.Type responseType()
com.google.android.material.tabs.TabLayout: void setTabIndicatorAnimationMode(int)
okio.SegmentedByteString: int lastIndexOf(byte[],int)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
okio.internal.-Buffer: long commonReadAll(okio.Buffer,okio.Sink)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
okio.ByteString: int size()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
okio.DeflaterSink: void finishDeflate$okio()
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
okio.internal.-ByteString: void commonWrite(okio.ByteString,okio.Buffer,int,int)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
okio.Utf8: long size(java.lang.String)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
okio.FileHandle: void writeNoCloseCheck(long,okio.Buffer,long)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
okio.ZipFileSystem: void delete(okio.Path,boolean)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: CurrencyExchangeUiState()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: void onFromAmountChange(java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: float getChipEndPadding()
com.google.android.material.button.MaterialButton: int getIconSize()
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
okio.ZipFileSystem: void createSymlink(okio.Path,okio.Path)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
okio.HashingSink$Companion: HashingSink$Companion()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
okio.Buffer: okio.Buffer readFrom(java.io.InputStream,long)
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
okio.internal.-Path: boolean commonIsAbsolute(okio.Path)
okio.Path$Companion: okio.Path get$default(okio.Path$Companion,java.lang.String,boolean,int,java.lang.Object)
okio.RealBufferedSink: okio.BufferedSink writeIntLe(int)
androidx.compose.foundation.Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
okio.SegmentedByteString: void copyInto(int,byte[],int,int)
androidx.compose.foundation.text.input.internal.Api34LegacyPerformHandwritingGestureImpl: boolean previewHandwritingGesture(androidx.compose.foundation.text.LegacyTextFieldState,androidx.compose.foundation.text.selection.TextFieldSelectionManager,android.view.inputmethod.PreviewableHandwritingGesture,android.os.CancellationSignal)
androidx.compose.ui.window.PopupLayout: boolean getShouldCreateCompositionOnAttachedToWindow()
okio.internal.-RealBufferedSource: int commonReadInt(okio.RealBufferedSource)
retrofit2.converter.gson.GsonResponseBodyConverter: java.lang.Object convert(java.lang.Object)
androidx.fragment.app.DialogFragment: DialogFragment()
okio.Path: java.lang.String toString()
okio.Buffer: long indexOf(okio.ByteString)
okio.AsyncTimeout: long remainingNanos(long)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
okio.HashingSource: okio.HashingSource hmacSha512(okio.Source,okio.ByteString)
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.RealBufferedSink: okio.BufferedSink write(okio.ByteString,int,int)
okio.ForwardingFileSystem: okio.FileMetadata metadataOrNull(okio.Path)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performHandwritingGesture$foundation_release(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.HandwritingGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager,androidx.compose.ui.platform.ViewConfiguration,kotlin.jvm.functions.Function1)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void SettingsItem(java.lang.String,java.lang.String,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int)
androidx.compose.ui.autofill.AutofillCallback: void register(androidx.compose.ui.autofill.AndroidAutofill)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode valueOf(java.lang.String)
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
okio.AsyncTimeout$sink$1: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
retrofit2.Utils$GenericArrayTypeImpl: int hashCode()
okio.ByteString: void copyInto(int,byte[],int,int)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: -FileSystem$commonDeleteRecursively$sequence$1(okio.FileSystem,okio.Path,kotlin.coroutines.Continuation)
okio.Buffer$UnsafeCursor: void close()
okio.internal.-Buffer: void commonSkip(okio.Buffer,long)
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: int hashCode()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
okio.-DeprecatedOkio: okio.Sink sink(java.io.File)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okio.ForwardingFileSystem: okio.FileHandle openReadOnly(okio.Path)
retrofit2.OkHttpCall$NoContentResponseBody: long contentLength()
retrofit2.OkHttpCall$NoContentResponseBody: OkHttpCall$NoContentResponseBody(okhttp3.MediaType,long)
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
okio.internal.-RealBufferedSource: long commonReadLong(okio.RealBufferedSource)
okio.Buffer: java.lang.String readUtf8(long)
okio.Buffer: long indexOfElement(okio.ByteString)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: java.lang.Object invoke(java.lang.Object)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1: void invoke(androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.MainActivity: MainActivity()
okio.Okio__OkioKt: java.lang.Object use(java.io.Closeable,kotlin.jvm.functions.Function1)
retrofit2.Call: okhttp3.Request request()
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
retrofit2.Utils: java.lang.reflect.Type getSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation$filter$offsetMapping$1: ThousandSeparatorVisualTransformation$filter$offsetMapping$1(java.lang.String,java.lang.String,java.lang.String)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy[] values()
androidx.compose.ui.text.AnnotationType: androidx.compose.ui.text.AnnotationType valueOf(java.lang.String)
okio.AsyncTimeout$Companion: java.util.concurrent.locks.ReentrantLock getLock()
androidx.compose.ui.platform.AbstractComposeView: void setShowLayoutBounds(boolean)
okio.Buffer: okio.Buffer getBuffer()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
okio.internal.-Path: okio.Path commonResolve(okio.Path,okio.Buffer,boolean)
com.waldy.androidcurrencyexchange.ui.util.Localization: Localization()
okio.-DeflaterSinkExtensions: okio.DeflaterSink deflate(okio.Sink,java.util.zip.Deflater)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
okio.PeekSource: long read(okio.Buffer,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
retrofit2.ParameterHandler$Headers: void apply(retrofit2.RequestBuilder,okhttp3.Headers)
retrofit2.DefaultCallAdapterFactory$1: DefaultCallAdapterFactory$1(retrofit2.DefaultCallAdapterFactory,java.lang.reflect.Type,java.util.concurrent.Executor)
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase: kotlinx.coroutines.flow.Flow invoke(com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency,java.math.BigDecimal)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.compose.ui.text.android.CanvasCompatQ: void drawColor(android.graphics.Canvas,long)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performDeleteRangeGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.DeleteRangeGesture,androidx.compose.ui.text.AnnotatedString,kotlin.jvm.functions.Function1)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2$2$1: java.lang.Object invokeSuspend(java.lang.Object)
okio.NioFileSystemWrappingFileSystem: void createSymlink(okio.Path,okio.Path)
okio.-SegmentedByteString: long and(int,long)
okio.Buffer: okio.Buffer writeLong(long)
androidx.compose.foundation.MutatePriority: androidx.compose.foundation.MutatePriority valueOf(java.lang.String)
androidx.transition.Transition$Impl26: void setCurrentPlayTime(android.animation.Animator,long)
androidx.compose.ui.graphics.layer.ViewLayer: android.view.View getOwnerView()
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
okio.BufferedSource: long indexOf(okio.ByteString,long)
androidx.appcompat.widget.ViewUtils$Api29Impl: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
okio.Segment: okio.Segment pop()
androidx.compose.ui.window.PopupLayout: android.view.WindowManager$LayoutParams getParams$ui_release()
okio.ZipFileSystem$Companion: ZipFileSystem$Companion()
okio.GzipSink: GzipSink(okio.Sink)
okio.ForwardingFileSystem: void createSymlink(okio.Path,okio.Path)
okio.-Base64: void getBASE64$annotations()
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getParameterized(java.lang.reflect.Type,java.lang.reflect.Type[])
okio.FileHandle: long position(okio.Sink)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
retrofit2.OptionalConverterFactory$OptionalConverter: java.util.Optional convert(okhttp3.ResponseBody)
okio.DeflaterSink: DeflaterSink(okio.Sink,java.util.zip.Deflater)
kotlin.jvm.internal.FunctionReference: int hashCode()
okio.RealBufferedSource: void getBuffer$annotations()
kotlin.collections.AbstractList: java.util.ListIterator listIterator()
com.google.android.material.button.MaterialButton: void setCornerSpringForce(androidx.dynamicanimation.animation.SpringForce)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable getOrCreateBadge()
retrofit2.Utils: java.lang.RuntimeException parameterError(java.lang.reflect.Method,int,java.lang.String,java.lang.Object[])
okio.Path: int compareTo(java.lang.Object)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okio.internal.ZipFilesKt$buildIndex$$inlined$sortedBy$1: int compare(java.lang.Object,java.lang.Object)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,okio.ByteString)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
okio.internal.-Path: java.util.List commonSegmentsBytes(okio.Path)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.compose.ui.platform.WrapperRenderNodeLayerHelperMethods: void onDescendantInvalidated(androidx.compose.ui.platform.AndroidComposeView)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners get_viewTreeOwners()
retrofit2.Utils: int indexOf(java.lang.Object[],java.lang.Object)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.core.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
okio.RealBufferedSource: long indexOf(byte,long,long)
okio.ByteString: int hashCode()
okio.internal.-Buffer: byte[] getHEX_DIGIT_BYTES()
okio.Pipe: okio.Sink sink()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
okio.-SegmentedByteString: long and(byte,long)
okio.BufferedSink: java.io.OutputStream outputStream()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
okio.internal.ResourceFileSystem: okio.Path canonicalizeInternal(okio.Path)
retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Headers)
androidx.compose.ui.platform.ViewLayer: androidx.compose.ui.graphics.Path getManualClipPath()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
okio.BufferedSource: void readFully(byte[])
retrofit2.Converter$Factory: Converter$Factory()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
okio.BufferedSource: void skip(long)
okio.ByteString$Companion: okio.ByteString -deprecated_read(java.io.InputStream,int)
okio.RealBufferedSource: okio.Buffer buffer()
androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation valueOf(java.lang.String)
okio.BufferedSource: java.lang.String readUtf8(long)
androidx.compose.ui.platform.AbstractComposeView: void getShowLayoutBounds$annotations()
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase getUpdateThemeUseCase()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
okio.internal.-RealBufferedSource: java.lang.String commonReadUtf8LineStrict(okio.RealBufferedSource,long)
okio.Okio__JvmOkioKt: okio.CipherSink cipherSink(okio.Sink,javax.crypto.Cipher)
okio.InflaterSource: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
retrofit2.ParameterHandler$RawPart: void apply(retrofit2.RequestBuilder,java.lang.Object)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder callFactory(okhttp3.Call$Factory)
com.google.android.material.chip.Chip: void setChipTextResource(int)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.material.tabs.TabLayout: int getTabMode()
retrofit2.Retrofit: retrofit2.CallAdapter callAdapter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
okio.NioFileSystemWrappingFileSystem: okio.FileMetadata metadataOrNull(okio.Path)
okio.FileMetadata: java.lang.Long getSize()
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.waldy.androidcurrencyexchange.R$color: R$color()
androidx.transition.Transition$Impl26: long getTotalDuration(android.animation.Animator)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String getError()
okio.internal.-ByteString: boolean commonRangeEquals(okio.ByteString,int,byte[],int,int)
okio.internal._Utf8Kt: java.lang.String commonToUtf8String$default(byte[],int,int,int,java.lang.Object)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepositoryKt: androidx.datastore.core.DataStore getDataStore(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
retrofit2.BuiltInConverters$RequestBodyConverter: okhttp3.RequestBody convert(okhttp3.RequestBody)
androidx.compose.ui.platform.AndroidComposeView: void setShowLayoutBounds(boolean)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
okio.Pipe: okio.Buffer getBuffer$okio()
okio.internal.-Path: java.lang.String commonToString(okio.Path)
okio.Buffer: void readFrom(java.io.InputStream,long,boolean)
okio.ForwardingTimeout: okio.ForwardingTimeout setDelegate(okio.Timeout)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
com.waldy.androidcurrencyexchange.presentation.converter.ThousandSeparatorVisualTransformation: ThousandSeparatorVisualTransformation()
androidx.compose.material3.MinimumInteractiveModifier: MinimumInteractiveModifier()
com.google.android.material.tabs.TabLayout$TabView: int getContentHeight()
okio.AsyncTimeout$sink$1: void close()
okio.Okio: okio.Sink appendingSink(java.io.File)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
okio.PeekSource: void close()
androidx.activity.ComponentActivity: void invalidateMenu()
retrofit2.Callback: void onFailure(retrofit2.Call,java.lang.Throwable)
androidx.compose.ui.graphics.layer.RenderNodeVerificationHelper28: int getSpotShadowColor(android.view.RenderNode)
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
retrofit2.HttpServiceMethod: retrofit2.CallAdapter createCallAdapter(retrofit2.Retrofit,java.lang.reflect.Method,java.lang.reflect.Type,java.lang.annotation.Annotation[])
retrofit2.HttpServiceMethod: HttpServiceMethod(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter)
okio.internal.-ByteString: int commonHashCode(okio.ByteString)
com.google.android.material.button.MaterialButton: void setPressed(boolean)
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicWidthHeight[] values()
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit SettingsGroup$lambda$3(java.lang.String,kotlin.jvm.functions.Function2,int,androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$2: java.lang.Object invoke(java.lang.Object)
androidx.compose.foundation.text.input.internal.Api34StartStylusHandwriting: void startStylusHandwriting(android.view.inputmethod.InputMethodManager,android.view.View)
androidx.activity.ComponentActivity: void initializeViewTreeOwners()
com.google.android.material.button.MaterialButton: int getInsetBottom()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performInsertGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.InsertGesture,androidx.compose.foundation.text.input.internal.TextLayoutState,androidx.compose.ui.platform.ViewConfiguration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.activity.ComponentActivity: void access$ensureViewModelStore(androidx.activity.ComponentActivity)
androidx.viewpager2.widget.ViewPager2: int getOrientation()
retrofit2.Converter$Factory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
okio.ByteString$Companion: okio.ByteString encodeString$default(okio.ByteString$Companion,java.lang.String,java.nio.charset.Charset,int,java.lang.Object)
com.google.android.material.button.MaterialButton: void setIconGravity(int)
okio.Throttler: long nanosToBytes(long)
okio.FileSystem: okio.FileHandle openReadWrite(okio.Path,boolean,boolean)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
okio.-SegmentedByteString: int and(byte,int)
okio.internal.-RealBufferedSource: void commonReadFully(okio.RealBufferedSource,okio.Buffer,long)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl$getConversionRate$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.constraintlayout.widget.Barrier: int getMargin()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
okio.internal.-RealBufferedSink: okio.Timeout commonTimeout(okio.RealBufferedSink)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void performDeletionOnLegacyTextField-vJH6DeI(long,androidx.compose.ui.text.AnnotatedString,boolean,kotlin.jvm.functions.Function1)
com.google.android.material.tabs.TabLayout: int getTabGravity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.core.view.WindowInsetsCompat$Impl30: boolean isVisible(int)
okio.Options: Options(okio.ByteString[],int[],kotlin.jvm.internal.DefaultConstructorMarker)
androidx.compose.material3.tokens.ShapeKeyTokens: androidx.compose.material3.tokens.ShapeKeyTokens[] values()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
okio.ZipFileSystem$Companion: ZipFileSystem$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.activity.EdgeToEdgeApi30: void adjustLayoutInDisplayCutoutMode(android.view.Window)
okio.GzipSink: void updateCrc(okio.Buffer,long)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
com.google.android.material.button.MaterialButtonGroup: com.google.android.material.shape.CornerSize getInnerCornerSize()
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
androidx.compose.ui.graphics.layer.RenderNodeVerificationHelper28: void setAmbientShadowColor(android.view.RenderNode,int)
okio.internal.-RealBufferedSource: void commonRequire(okio.RealBufferedSource,long)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWrite(okio.RealBufferedSink,byte[],int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
androidx.compose.ui.window.SecureFlagPolicy: androidx.compose.ui.window.SecureFlagPolicy[] values()
okio.ByteString: ByteString(byte[])
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: void CurrencySelector$lambda$15(androidx.compose.runtime.MutableState,boolean)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: com.google.gson.Gson access$getGson$p(com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl)
okio.internal.-Buffer: okio.ByteString commonReadByteString(okio.Buffer,long)
retrofit2.Converter$Factory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
okio.internal.-Buffer: java.lang.String commonReadUtf8(okio.Buffer,long)
androidx.compose.ui.text.android.StaticLayoutFactoryDefault: android.text.StaticLayout create(androidx.compose.ui.text.android.StaticLayoutParams)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
okio.ByteString$Companion: okio.ByteString decodeBase64(java.lang.String)
okio.FileHandle$FileHandleSink: void write(okio.Buffer,long)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$1$1: java.lang.Object invoke(java.lang.Object)
com.waldy.androidcurrencyexchange.ui.theme.TypeKt: androidx.compose.material3.Typography getTypography()
okio.internal.-RealBufferedSource: int commonReadUtf8CodePoint(okio.RealBufferedSource)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon getSystemIcon(android.content.Context,int)
okio.internal.-ByteString: void commonCopyInto(okio.ByteString,int,byte[],int,int)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
okio.Buffer: long indexOf(byte,long,long)
com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.badge.BadgeDrawable getBadge()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency valueOf(java.lang.String)
com.google.android.material.chip.Chip: float getChipStartPadding()
okio.Path$Companion: okio.Path get(java.nio.file.Path)
okio.Buffer: void readFully(okio.Buffer,long)
androidx.compose.ui.autofill.AutofillApi26Helper: android.view.autofill.AutofillId getAutofillId(android.view.ViewStructure)
okio.Buffer: byte -deprecated_getByte(long)
okio.RealBufferedSource$inputStream$1: java.lang.String toString()
okio.internal.-RealBufferedSource: int commonRead(okio.RealBufferedSource,byte[],int,int)
okio.Buffer: long indexOf(byte,long)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
androidx.compose.runtime.InvalidationResult: androidx.compose.runtime.InvalidationResult[] values()
retrofit2.OkHttpCall: retrofit2.Response execute()
okio.AsyncTimeout: long access$getIDLE_TIMEOUT_MILLIS$cp()
okio.internal.-FileSystem$commonListRecursively$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.internal.-ByteString: int commonGetSize(okio.ByteString)
okio.Buffer$inputStream$1: void close()
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
okio.internal.-Buffer: java.lang.String readUtf8Line(okio.Buffer,long)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
okio.internal.-Path: boolean commonIsRelative(okio.Path)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
retrofit2.http.Field: boolean encoded()
okio.Okio__JvmOkioKt: okio.Sink appendingSink(java.io.File)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
okio.Okio__JvmOkioKt: okio.Source source(java.net.Socket)
androidx.compose.ui.text.android.CanvasCompatR: boolean quickReject(android.graphics.Canvas,android.graphics.RectF)
okio.internal.ZipFilesKt$readEntry$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
androidx.compose.ui.graphics.Path$Direction: androidx.compose.ui.graphics.Path$Direction valueOf(java.lang.String)
androidx.compose.ui.text.font.FontWeightAdjustmentHelperApi31: int fontWeightAdjustment(android.content.Context)
okio.RealBufferedSource: byte readByte()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
com.waldy.androidcurrencyexchange.domain.model.Currency: kotlin.enums.EnumEntries getEntries()
okio.Pipe: java.util.concurrent.locks.Condition getCondition()
androidx.compose.ui.input.pointer.PointerEventPass: androidx.compose.ui.input.pointer.PointerEventPass[] values()
retrofit2.http.Headers: java.lang.String[] value()
retrofit2.converter.gson.GsonRequestBodyConverter: java.lang.Object convert(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
okio.Okio__JvmOkioKt: okio.HashingSink hashingSink(okio.Sink,javax.crypto.Mac)
okio.Buffer: okio.ByteString readByteString()
okio.RealBufferedSource: java.lang.String readString(long,java.nio.charset.Charset)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.unit.Density getDensity()
com.waldy.androidcurrencyexchange.ui.util.Localization: androidx.compose.runtime.ProvidableCompositionLocal getCurrentLanguage()
okio.Pipe: void setSinkClosed$okio(boolean)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
okio.internal.-RealBufferedSink: void commonFlush(okio.RealBufferedSink)
okio.internal.-FileSystem$commonListRecursively$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
okio.HashingSink$Companion: okio.HashingSink hmacSha256(okio.Sink,okio.ByteString)
okio.Throttler: okio.Sink sink(okio.Sink)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
okio.-SegmentedByteString: int resolveDefaultParameter(byte[],int)
okio.FileSystem: java.lang.Object -read(okio.Path,kotlin.jvm.functions.Function1)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
com.google.android.material.chip.Chip: float getChipMinHeight()
com.google.android.material.tabs.TabLayout: void setSelectedTabView(int)
androidx.compose.ui.scrollcapture.ScrollCapture: void onScrollCaptureSearch(android.view.View,androidx.compose.ui.semantics.SemanticsOwner,kotlin.coroutines.CoroutineContext,java.util.function.Consumer)
com.google.android.material.button.MaterialButton: void setDisplayedWidthDecrease(int)
okio.SegmentedByteString: byte internalGet$okio(int)
okio.internal.-Buffer: okio.Buffer commonCopyTo(okio.Buffer,okio.Buffer,long,long)
okio.Buffer: okio.BufferedSink writeShort(int)
okio.Pipe: java.util.concurrent.locks.ReentrantLock getLock()
androidx.compose.ui.autofill.AutofillApi26Helper: void setAutofillId(android.view.ViewStructure,android.view.autofill.AutofillId,int)
okio.AsyncTimeout$source$1: AsyncTimeout$source$1(okio.AsyncTimeout,okio.Source)
kotlin.collections.AbstractCollection: java.lang.Object[] toArray()
okio.JvmSystemFileSystem: okio.Sink appendingSink(okio.Path,boolean)
okio.Buffer: okio.ByteString sha256()
androidx.compose.ui.window.PopupLayout: int getDisplayHeight()
okio.FileMetadata: java.lang.Long getCreatedAtMillis()
retrofit2.Platform: int defaultCallAdapterFactoriesSize()
retrofit2.Retrofit$Builder: Retrofit$Builder(retrofit2.Platform)
okio.internal.-Buffer: okio.Buffer commonCopy(okio.Buffer)
okio.Buffer: okio.BufferedSink write(okio.Source,long)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
okio.RealBufferedSource: okio.BufferedSource peek()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: androidx.lifecycle.ViewModel create(kotlin.reflect.KClass,androidx.lifecycle.viewmodel.CreationExtras)
okio.internal.-RealBufferedSink: void commonWrite(okio.RealBufferedSink,okio.Buffer,long)
okio.RealBufferedSink: okio.Buffer buffer()
com.google.android.material.chip.Chip: void setElevation(float)
okio.Source: long read(okio.Buffer,long)
androidx.activity.ComponentActivity: void addOnUserLeaveHintListener(java.lang.Runnable)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void performInsertionOnLegacyTextField(int,java.lang.String,kotlin.jvm.functions.Function1)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$1$2$1: java.lang.Object invokeSuspend(java.lang.Object)
okio.RealBufferedSource: java.lang.String readUtf8LineStrict()
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput copy(java.math.BigDecimal,boolean)
okio.RealBufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
retrofit2.ParameterHandler$Field: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
retrofit2.OkHttpCall: void cancel()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: kotlinx.coroutines.flow.MutableStateFlow access$get_theme$p(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
okio.RealBufferedSource: void close()
androidx.viewpager2.widget.ViewPager2: void setUserInputEnabled(boolean)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
androidx.compose.ui.platform.TextToolbarHelperMethods: android.view.ActionMode startActionMode(android.view.View,android.view.ActionMode$Callback,int)
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
okio.Path: boolean equals(java.lang.Object)
okio.Utf8: void processUtf16Chars(byte[],int,int,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
okio.Buffer: okio.Segment writableSegment$okio(int)
okio.FileHandle: okio.Source source(long)
okio.ForwardingFileSystem$listRecursively$1: okio.Path invoke(okio.Path)
okio.RealBufferedSource: long indexOf(byte)
okio.internal.-Path: void getDOT$annotations()
okio.CipherSink: void close()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String getFromAmount()
okio.Buffer: okio.Buffer$UnsafeCursor readAndWriteUnsafe$default(okio.Buffer,okio.Buffer$UnsafeCursor,int,java.lang.Object)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
kotlin.Metadata: int xi()
retrofit2.HttpServiceMethod$SuspendForBody: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
okio.FileHandle$FileHandleSink: void close()
okio.AsyncTimeout$Companion: okio.AsyncTimeout awaitTimeout$okio()
com.google.android.material.chip.Chip: float getTextEndPadding()
com.google.android.material.chip.Chip: void setChipIconVisible(int)
com.google.android.material.shape.StateListSizeChange$SizeChangeType: com.google.android.material.shape.StateListSizeChange$SizeChangeType valueOf(java.lang.String)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
okio.HashingSource: HashingSource(okio.Source,java.lang.String)
okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String,int,int)
okio.BufferedSource: byte readByte()
retrofit2.RequestBuilder: void setRelativeUrl(java.lang.Object)
okio.Buffer: long writeAll(okio.Source)
okio.HashingSink: HashingSink(okio.Sink,javax.crypto.Mac)
androidx.compose.ui.platform.AbstractComposeView: boolean getHasComposition()
com.waldy.androidcurrencyexchange.presentation.converter.ComposableSingletons$CurrencyExchangeScreenKt$lambda-1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.compose.ui.platform.coreshims.ViewStructureCompat$Api23Impl: void setTextStyle(android.view.ViewStructure,float,int,int,int)
okio.-SegmentedByteString: byte xor(byte,byte)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
okio.internal.ZipEntry: okio.Path getCanonicalPath()
okio.ByteString: okio.ByteString encodeUtf8(java.lang.String)
okio.BufferedSource: int readIntLe()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
androidx.compose.ui.platform.AndroidComposeViewStartDragAndDropN: boolean startDragAndDrop(android.view.View,androidx.compose.ui.draganddrop.DragAndDropTransferData,androidx.compose.ui.draganddrop.ComposeDragShadowBuilder)
okio.AsyncTimeout: java.util.concurrent.locks.ReentrantLock access$getLock$cp()
androidx.constraintlayout.widget.ConstraintLayout: androidx.constraintlayout.widget.SharedValues getSharedValues()
retrofit2.ParameterHandler$QueryMap: void apply(retrofit2.RequestBuilder,java.util.Map)
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getCreamyBeige()
okio.BufferedSource: java.lang.String readString(java.nio.charset.Charset)
okio.RealBufferedSource: long readDecimalLong()
retrofit2.Utils$ParameterizedTypeImpl: Utils$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])
okio.internal.-FileSystem$commonListRecursively$1: java.lang.Object invoke(kotlin.sequences.SequenceScope,kotlin.coroutines.Continuation)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: void onLanguageChange(com.waldy.androidcurrencyexchange.ui.util.Language)
okio.Buffer: int readUtf8CodePoint()
retrofit2.Retrofit$1: Retrofit$1(retrofit2.Retrofit,java.lang.Class)
okio.internal.-Buffer: boolean rangeEquals(okio.Segment,int,byte[],int,int)
okio.RealBufferedSink: okio.BufferedSink write(okio.Source,long)
okio.ZipFileSystem: java.util.List list(okio.Path,boolean)
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
okio.AsyncTimeout$source$1: long read(okio.Buffer,long)
retrofit2.HttpServiceMethod: java.lang.Object adapt(retrofit2.Call,java.lang.Object[])
okio.FileSystem: okio.Sink sink$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object)
com.google.android.material.divider.MaterialDivider: int getDividerThickness()
retrofit2.Utils$GenericArrayTypeImpl: java.lang.reflect.Type getGenericComponentType()
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.FileMetadata: FileMetadata()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidAccessibilityManager getAccessibilityManager()
okio.Okio: okio.Source source(java.net.Socket)
androidx.compose.ui.text.android.BoringLayoutFactory33: boolean isFallbackLineSpacingEnabled(android.text.BoringLayout)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
retrofit2.Invocation: java.util.List arguments()
okio.Okio__JvmOkioKt: okio.HashingSink hashingSink(okio.Sink,java.security.MessageDigest)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
okio.BlackholeSink: okio.Timeout timeout()
okio.internal.ResourceFileSystem$Companion: boolean access$keepPath(okio.internal.ResourceFileSystem$Companion,okio.Path)
okio.ZipFileSystem: okio.Path access$getROOT$cp()
okio.internal.-FileSystem$commonDeleteRecursively$sequence$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okio.Pipe$sink$1: okio.Timeout timeout()
okio.-DeprecatedOkio: okio.Sink appendingSink(java.io.File)
okio.BufferedSink: okio.BufferedSink writeUtf8(java.lang.String,int,int)
okio.BufferedSink: okio.BufferedSink writeUtf8CodePoint(int)
okio.GzipSource: GzipSource(okio.Source)
okio.BufferedSource: java.lang.String readUtf8()
okio.internal.-RealBufferedSource: int commonSelect(okio.RealBufferedSource,okio.Options)
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
okio.Path: java.lang.String name()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: java.lang.String component1()
okio.Options: int[] getTrie$okio()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidViewsHandler getAndroidViewsHandler$ui_release()
okio.Okio: okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
okio.GzipSource: void updateCrc(okio.Buffer,long,long)
okio.AsyncTimeout$source$1: okio.Timeout timeout()
okio.ByteString: int lastIndexOf(byte[],int)
okio.ForwardingFileSystem: okio.Sink sink(okio.Path,boolean)
okio.FileHandle: long readNoCloseCheck(long,okio.Buffer,long)
retrofit2.http.PartMap: java.lang.String encoding()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.compose.ui.graphics.ColorSpaceVerificationHelper: androidx.compose.ui.graphics.colorspace.ColorSpace composeColorSpace(android.graphics.ColorSpace)
okio.FileSystem: kotlin.sequences.Sequence listRecursively(okio.Path)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.compose.ui.text.android.Paint29: void getTextBounds(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Rect)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: void onSwapCurrencies()
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$2: java.lang.Object invoke(com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.coroutines.Continuation)
retrofit2.ParameterHandler$RawPart: ParameterHandler$RawPart()
okio.Buffer: int readIntLe()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
okio.ByteString: boolean endsWith(okio.ByteString)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getLatteFoam()
com.google.android.material.button.MaterialButtonGroup: void setSpacing(int)
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
okio.Buffer: okio.ByteString hmac(java.lang.String,okio.ByteString)
okio.BufferedSource: long readLong()
okio.ByteString: okio.ByteString md5()
androidx.compose.ui.window.PopupLayout: void getParams$ui_release$annotations()
okio.HashingSink$Companion: okio.HashingSink sha256(okio.Sink)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
okio.ByteString: okio.ByteString sha1()
okio.internal.-Buffer: int commonReadUtf8CodePoint(okio.Buffer)
androidx.compose.ui.window.Api33Impl: void maybeRegisterBackCallback(android.view.View,java.lang.Object)
androidx.core.view.ViewCompat$Api24Impl: boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int)
okio.internal.-ByteString: okio.ByteString commonEncodeUtf8(java.lang.String)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys: androidx.datastore.preferences.core.Preferences$Key getAPP_LANGUAGE()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
okio.Buffer: okio.BufferedSink write(okio.ByteString)
okio.Buffer$UnsafeCursor: int seek(long)
androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy: androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy valueOf(java.lang.String)
okio.Okio__JvmOkioKt: okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
okio.Path: Path(okio.ByteString)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
okio.HashingSource$Companion: okio.HashingSource sha1(okio.Source)
retrofit2.ParameterHandler$Header: ParameterHandler$Header(java.lang.String,retrofit2.Converter)
okio.FileHandle$FileHandleSink: boolean getClosed()
okio.ZipFileSystem: okio.Path canonicalizeInternal(okio.Path)
okio.RealBufferedSink: okio.BufferedSink writeByte(int)
okio.Throttler: Throttler(long)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
okio.internal.-ByteString: java.lang.String commonUtf8(okio.ByteString)
okio._JvmPlatformKt: java.lang.String toUtf8String(byte[])
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.viewpager2.widget.ViewPager2: int getScrollState()
okio.internal.-ByteString: okio.ByteString commonOf(byte[])
androidx.compose.ui.platform.TextToolbarStatus: androidx.compose.ui.platform.TextToolbarStatus valueOf(java.lang.String)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
okio.-SegmentedByteString: long minOf(long,int)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
okio.JvmSystemFileSystem: void delete(okio.Path,boolean)
androidx.compose.ui.platform.AndroidComposeView: void setAccessibilityEventBatchIntervalMillis(long)
okio.internal.ResourceFileSystem: void atomicMove(okio.Path,okio.Path)
okio.Path: okio.Path resolve$default(okio.Path,okio.ByteString,boolean,int,java.lang.Object)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$PreferencesKeys: androidx.datastore.preferences.core.Preferences$Key getAPP_THEME()
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
okio.internal.-ByteString: int commonLastIndexOf(okio.ByteString,byte[],int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void AboutSection(android.content.Context,androidx.compose.runtime.Composer,int)
okio.internal.-Path: int getIndexOfLastSlash(okio.Path)
okio.Buffer: okio.BufferedSink writeIntLe(int)
retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Response)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
okio.SegmentedByteString: SegmentedByteString(byte[][],int[])
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
androidx.compose.ui.platform.AndroidComposeView: boolean getShowLayoutBounds()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1$1$1$2: SettingsScreenKt$SelectionDialog$1$1$1$1$2(java.lang.String)
okio.ForwardingTimeout: okio.Timeout clearDeadline()
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
okio.FileHandle: long size()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2: CurrencyExchangeViewModel$onFromAmountChange$2(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel,kotlin.coroutines.Continuation)
androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax: androidx.compose.ui.node.NodeMeasuringIntrinsics$IntrinsicMinMax valueOf(java.lang.String)
okio.JvmSystemFileSystem: void requireCreate(okio.Path)
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api34Impl: void notifyViewsAppeared(android.view.contentcapture.ContentCaptureSession,java.util.List)
okio.internal.ZipEntry: long getCrc()
kotlin.jvm.internal.FunctionReference: boolean isInline()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
okio.-SegmentedByteString: int shl(byte,int)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: double access$parseRateFromResponse(com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl,com.google.gson.JsonObject,com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency)
okio.internal.ZipEntry: long getOffset()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
okio.internal.ZipFilesKt$readOrSkipLocalHeader$1: void invoke(int,long)
okio.RealBufferedSource: okio.Buffer getBuffer()
retrofit2.CallAdapter$Factory: CallAdapter$Factory()
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: void cancel()
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
okio.Buffer: long readAll(okio.Sink)
okio.FileHandle: okio.Source source$default(okio.FileHandle,long,int,java.lang.Object)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
okio.BlackholeSink: void write(okio.Buffer,long)
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.waldy.androidcurrencyexchange.ui.theme.ThemeKt: kotlin.Unit AndroidCurrencyExchangeTheme$lambda$2(boolean,boolean,kotlin.jvm.functions.Function2,int,int,androidx.compose.runtime.Composer,int)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.google.gson.reflect.TypeToken: com.google.gson.reflect.TypeToken getArray(java.lang.reflect.Type)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AndroidComposeView$ViewTreeOwners getViewTreeOwners()
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1: GetConversionRateUseCase$invoke$$inlined$map$1(kotlinx.coroutines.flow.Flow,java.math.BigDecimal)
okio.ByteString: okio.ByteString of(byte[])
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase getGetConversionRateUseCase()
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: void OfflineBadge(androidx.compose.runtime.Composer,int)
okio.Pipe: okio.Sink getFoldedSink$okio()
okio.internal.-RealBufferedSink: okio.BufferedSink commonEmit(okio.RealBufferedSink)
retrofit2.Converter: java.lang.Object convert(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
androidx.compose.ui.platform.AndroidViewsHandler: java.util.HashMap getLayoutNodeToHolder()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performJoinOrSplitGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.JoinOrSplitGesture,androidx.compose.foundation.text.input.internal.TextLayoutState,androidx.compose.ui.platform.ViewConfiguration)
okio.HashingSource$Companion: okio.HashingSource sha512(okio.Source)
androidx.compose.ui.autofill.AutofillType: androidx.compose.ui.autofill.AutofillType valueOf(java.lang.String)
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
kotlin.collections.AbstractCollection: boolean add(java.lang.Object)
retrofit2.BuiltInConverters$VoidResponseBodyConverter: java.lang.Void convert(okhttp3.ResponseBody)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: boolean component2()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
okio.RealBufferedSource: long readLong()
androidx.compose.ui.graphics.layer.RenderNodeVerificationHelper24: void discardDisplayList(android.view.RenderNode)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.OwnerSnapshotObserver getSnapshotObserver()
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
retrofit2.CompletableFutureCallAdapterFactory: retrofit2.CallAdapter get(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
okio.AsyncTimeout: okio.AsyncTimeout access$getHead$cp()
okio.ForwardingFileSystem$listRecursively$1: ForwardingFileSystem$listRecursively$1(okio.ForwardingFileSystem)
okio.internal.-Buffer: short commonReadShort(okio.Buffer)
okio.-SegmentedByteString: int shr(byte,int)
okio.JvmSystemFileSystem: okio.FileMetadata metadataOrNull(okio.Path)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int fallback(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.HandwritingGesture)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
okio.FileHandle: okio.Sink sink(long)
androidx.compose.runtime.Recomposer$State: androidx.compose.runtime.Recomposer$State valueOf(java.lang.String)
retrofit2.ParameterHandler$HeaderMap: ParameterHandler$HeaderMap(java.lang.reflect.Method,int,retrofit2.Converter)
androidx.compose.ui.text.input.CursorAnchorInfoApi33Helper: android.view.inputmethod.CursorAnchorInfo$Builder setEditorBoundsInfo(android.view.inputmethod.CursorAnchorInfo$Builder,androidx.compose.ui.geometry.Rect)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
okio.Options: int getSize()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$1: java.lang.Object invoke(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
okio.Path: okio.Path resolve$default(okio.Path,java.lang.String,boolean,int,java.lang.Object)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
okio.InflaterSource: void close()
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getDarkCream()
okio.Okio__OkioKt: okio.BufferedSource buffer(okio.Source)
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
okio.FileSystem: okio.FileSystem get(java.nio.file.FileSystem)
okio.internal.-Buffer: okio.Buffer commonWriteLong(okio.Buffer,long)
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.compose.ui.text.android.StaticLayoutFactory33: void setLineBreakConfig(android.text.StaticLayout$Builder,int,int)
okio.ZipFileSystem: okio.Sink sink(okio.Path,boolean)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: CurrencyExchangeUiState(com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)
retrofit2.Retrofit: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[])
androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)
okio.Okio__JvmOkioKt: okio.Source source(java.io.File)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
okio.ForwardingFileSystem$listRecursively$1: java.lang.Object invoke(java.lang.Object)
okio.Buffer: okio.Buffer writeLongLe(long)
okio.internal.ZipFilesKt$buildIndex$$inlined$sortedBy$1: ZipFilesKt$buildIndex$$inlined$sortedBy$1()
okio.ByteString: okio.ByteString decodeBase64(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
retrofit2.ServiceMethod: retrofit2.ServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
okio.ByteString: okio.ByteString of(byte[],int,int)
okio.-InflaterSourceExtensions: okio.InflaterSource inflate(okio.Source,java.util.zip.Inflater)
androidx.compose.ui.text.android.CanvasCompatR: boolean quickReject(android.graphics.Canvas,float,float,float,float)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
retrofit2.RequestFactory$Builder: java.lang.Class boxIfPrimitive(java.lang.Class)
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String)
okio.internal.-Buffer: void commonWrite(okio.Buffer,okio.Buffer,long)
retrofit2.HttpException: int code()
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
okio.Throttler$sink$1: void write(okio.Buffer,long)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void SettingsScreen(java.lang.String,com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
okio.BufferedSink: okio.BufferedSink writeHexadecimalUnsignedLong(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
androidx.compose.ui.contentcapture.AndroidContentCaptureManager$TranslateStatus: androidx.compose.ui.contentcapture.AndroidContentCaptureManager$TranslateStatus[] values()
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.waldy.androidcurrencyexchange.MainActivityScreenKt: kotlin.Unit CustomTabRow$lambda$10$lambda$9$lambda$8$lambda$6$lambda$5(kotlin.jvm.functions.Function1,int)
okio.Buffer: okio.Buffer copyTo$default(okio.Buffer,okio.Buffer,long,long,int,java.lang.Object)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
retrofit2.SkipCallbackExecutorImpl: int hashCode()
retrofit2.KotlinExtensions$suspendAndThrow$$inlined$suspendCoroutineUninterceptedOrReturn$lambda$1: void run()
okio.ByteString: void copyInto$default(okio.ByteString,int,byte[],int,int,int,java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
androidx.graphics.path.PathIteratorPreApi34Impl: int internalPathIteratorSize(long)
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: long contentLength()
okio.internal.ZipFilesKt: okio.FileMetadata readOrSkipLocalHeader(okio.BufferedSource,okio.FileMetadata)
kotlin.jvm.internal.Lambda: int getArity()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getCoffeeBrown()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
okio.internal.-SegmentedByteString: byte commonInternalGet(okio.SegmentedByteString,int)
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(int)
okio.ByteString: void setHashCode$okio(int)
androidx.compose.ui.text.platform.extensions.LocaleListHelperMethods: java.lang.Object localeSpan(androidx.compose.ui.text.intl.LocaleList)
androidx.compose.foundation.text.input.internal.EditorInfoApi34: void setHandwritingGestures(android.view.inputmethod.EditorInfo)
okio.internal.-Path: okio.ByteString access$getBACKSLASH$p()
okio.RealBufferedSink: okio.BufferedSink emitCompleteSegments()
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
okio.BufferedSource: boolean request(long)
retrofit2.ParameterHandler$1: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
okio.BufferedSink: okio.Buffer buffer()
androidx.compose.animation.core.RepeatMode: androidx.compose.animation.core.RepeatMode[] values()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.compose.ui.graphics.Api26Bitmap: androidx.compose.ui.graphics.colorspace.ColorSpace composeColorSpace$ui_graphics_release(android.graphics.Bitmap)
okio.HashingSink: okio.HashingSink sha1(okio.Sink)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.compose.ui.window.PopupLayout: void setPositionProvider(androidx.compose.ui.window.PopupPositionProvider)
okio.Throttler: okio.Source source(okio.Source)
okio.Okio: okio.BufferedSink buffer(okio.Sink)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
okio.BufferedSink: okio.BufferedSink write(okio.Source,long)
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.activity.ComponentActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
retrofit2.OkHttpCall: OkHttpCall(retrofit2.RequestFactory,java.lang.Object[],okhttp3.Call$Factory,retrofit2.Converter)
kotlin.LazyThreadSafetyMode: kotlin.LazyThreadSafetyMode valueOf(java.lang.String)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.tabs.TabLayout: void setTabIconTint(android.content.res.ColorStateList)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt: java.lang.String SettingsRoute$lambda$0(androidx.compose.runtime.State)
okio.Buffer: java.io.OutputStream outputStream()
okio.RealBufferedSource: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
okio.Options: okio.ByteString get(int)
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
okio.Path$Companion: okio.Path get$default(okio.Path$Companion,java.nio.file.Path,boolean,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
okio.FileSystem: okio.FileHandle openReadOnly(okio.Path)
okio.RealBufferedSource: int read(byte[])
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
com.google.android.material.button.MaterialButtonToggleGroup: java.lang.String getChildrenA11yClassName()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void access$ThemeSelector(java.lang.String,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
retrofit2.Utils: java.lang.reflect.Type getParameterUpperBound(int,java.lang.reflect.ParameterizedType)
okio.FileHandle: okio.Sink sink$default(okio.FileHandle,long,int,java.lang.Object)
okio.ByteString: okio.ByteString substring(int)
okio.internal.-RealBufferedSource: long commonReadDecimalLong(okio.RealBufferedSource)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$2: SettingsScreenKt$SettingsScreen$1$2(android.content.Context)
com.waldy.androidcurrencyexchange.domain.use_case.GetConversionRateUseCase$invoke$$inlined$map$1$2: GetConversionRateUseCase$invoke$$inlined$map$1$2(kotlinx.coroutines.flow.FlowCollector,java.math.BigDecimal)
okio.RealBufferedSink: okio.BufferedSink writeUtf8(java.lang.String)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.TextToolbar getTextToolbar()
androidx.compose.material3.ColorResourceHelper: long getColor-WaAFU9c(android.content.Context,int)
androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight: androidx.compose.ui.layout.MeasuringIntrinsics$IntrinsicWidthHeight valueOf(java.lang.String)
okio.Pipe: boolean getCanceled$okio()
androidx.compose.ui.platform.AbstractComposeView: void setParentContext(androidx.compose.runtime.CompositionContext)
androidx.compose.ui.platform.coreshims.ViewStructureCompat$Api23Impl: android.os.Bundle getExtras(android.view.ViewStructure)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
okio.BufferedSource: long indexOf(byte,long,long)
okio.AsyncTimeout$source$1: java.lang.String toString()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
okio.Pipe: void setSourceClosed$okio(boolean)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
okio.ForwardingFileSystem: java.util.List list(okio.Path)
retrofit2.RequestFactory$Builder: java.util.Set parsePathParameters(java.lang.String)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
okio.Utf8: long size(java.lang.String,int,int)
androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand: androidx.compose.ui.text.input.TextInputServiceAndroid$TextInputCommand[] values()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: com.waldy.androidcurrencyexchange.domain.use_case.UpdateThemeUseCase access$getUpdateThemeUseCase$p(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel)
okio.JvmSystemFileSystem: void createDirectory(okio.Path,boolean)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
retrofit2.http.Query: java.lang.String value()
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.compose.foundation.layout.Direction: androidx.compose.foundation.layout.Direction[] values()
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
okio.ByteString: okio.ByteString substring(int,int)
okio.FileHandle: void protectedClose()
okio.ByteString$Companion: okio.ByteString -deprecated_of(byte[],int,int)
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
androidx.compose.foundation.MutatePriority: androidx.compose.foundation.MutatePriority[] values()
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
okio.Options: okio.ByteString[] getByteStrings$okio()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: boolean LanguageSelector$lambda$19(androidx.compose.runtime.MutableState)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
okio.internal.-ByteString: okio.ByteString commonDecodeBase64(java.lang.String)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
okio.Pipe: void setFoldedSink$okio(okio.Sink)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
okio.internal.-SegmentedByteString: int segment(okio.SegmentedByteString,int)
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.compose.ui.platform.RenderNodeVerificationHelper28: void setAmbientShadowColor(android.view.RenderNode,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3: CurrencyExchangeViewModel$convert$1$3(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel,kotlin.coroutines.Continuation)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1: void invoke()
okio.Pipe$sink$1: Pipe$sink$1(okio.Pipe)
androidx.compose.ui.layout.IntrinsicMinMax: androidx.compose.ui.layout.IntrinsicMinMax valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: SettingsScreenKt$SelectionDialog$1$1(java.lang.String,java.util.List,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0)
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
androidx.compose.ui.window.PopupLayout: void setParentLayoutCoordinates(androidx.compose.ui.layout.LayoutCoordinates)
retrofit2.ParameterHandler$Body: void apply(retrofit2.RequestBuilder,java.lang.Object)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
okio.RealBufferedSink: okio.Timeout timeout()
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
kotlin.collections.AbstractCollection: boolean addAll(java.util.Collection)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
okio.BufferedSink: okio.BufferedSink emitCompleteSegments()
retrofit2.ParameterHandler$2: ParameterHandler$2(retrofit2.ParameterHandler)
androidx.compose.material3.tokens.ColorSchemeKeyTokens: androidx.compose.material3.tokens.ColorSchemeKeyTokens[] values()
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
retrofit2.http.Part: java.lang.String value()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteUtf8(okio.RealBufferedSink,java.lang.String,int,int)
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
okio.Path: okio.Path get(java.lang.String,boolean)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
retrofit2.RequestBuilder: void addTag(java.lang.Class,java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
okio.Segment$Companion: Segment$Companion()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
okio.Utf8: int process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
okio.Okio__JvmOkioKt: okio.CipherSource cipherSource(okio.Source,javax.crypto.Cipher)
okio.-DeprecatedOkio: okio.Sink sink(java.io.OutputStream)
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
okio.internal.-RealBufferedSource: boolean commonRangeEquals(okio.RealBufferedSource,long,okio.ByteString,int,int)
androidx.compose.ui.node.LayoutNode$LayoutState: androidx.compose.ui.node.LayoutNode$LayoutState valueOf(java.lang.String)
okio.ForwardingFileSystem: okio.Path onPathParameter(okio.Path,java.lang.String,java.lang.String)
androidx.compose.ui.text.android.CanvasCompatS: void drawPatch(android.graphics.Canvas,android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
okio.JvmSystemFileSystem: java.util.List listOrNull(okio.Path)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$4: java.lang.Object emit(com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput,kotlin.coroutines.Continuation)
okio.BufferedSink: okio.BufferedSink writeDecimalLong(long)
okio.internal.-Path: okio.ByteString toSlash(byte)
okhttp3.ResponseBody: okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.input.InputModeManager getInputModeManager()
retrofit2.RequestBuilder: java.lang.String canonicalizeForPath(java.lang.String,boolean)
okio.ForwardingSource: void close()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void performDeletion-Sb-Bc2M(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,long,boolean)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$1: java.lang.Void invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
retrofit2.DefaultCallAdapterFactory$1: java.lang.Object adapt(retrofit2.Call)
androidx.compose.ui.text.android.BoringLayoutFactoryDefault: android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1: CurrencyExchangeScreenKt$CurrencySelector$4$1$1$1$1$1$1(kotlin.jvm.functions.Function1,com.waldy.androidcurrencyexchange.domain.model.Currency,androidx.compose.runtime.MutableState)
com.google.android.material.button.MaterialButtonGroup: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearance()
retrofit2.Retrofit: retrofit2.CallAdapter nextCallAdapter(retrofit2.CallAdapter$Factory,java.lang.reflect.Type,java.lang.annotation.Annotation[])
okio.RealBufferedSource: boolean exhausted()
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
retrofit2.Utils: okhttp3.ResponseBody buffer(okhttp3.ResponseBody)
okio.AsyncTimeout$Companion: void scheduleTimeout(okio.AsyncTimeout,long,boolean)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
okio.Buffer: okio.Buffer copyTo(okio.Buffer,long)
retrofit2.KotlinExtensions$await$2$2: KotlinExtensions$await$2$2(kotlinx.coroutines.CancellableContinuation)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
okio.FileHandle: okio.Sink appendingSink()
retrofit2.Retrofit$Builder: retrofit2.Retrofit build()
retrofit2.OkHttpCall$1: void onResponse(okhttp3.Call,okhttp3.Response)
androidx.compose.ui.graphics.layer.RenderNodeVerificationHelper: void setRenderEffect(android.graphics.RenderNode,androidx.compose.ui.graphics.RenderEffect)
androidx.compose.ui.graphics.layer.OutlineVerificationHelper: void setPath(android.graphics.Outline,androidx.compose.ui.graphics.Path)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
retrofit2.HttpServiceMethod$SuspendForResponse: HttpServiceMethod$SuspendForResponse(retrofit2.RequestFactory,okhttp3.Call$Factory,retrofit2.Converter,retrofit2.CallAdapter)
androidx.compose.ui.platform.coreshims.ViewStructureCompat$Api23Impl: void setText(android.view.ViewStructure,java.lang.CharSequence)
okio.Path: java.io.File toFile()
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
okio.Okio__JvmOkioKt: boolean isAndroidGetsocknameError(java.lang.AssertionError)
okio.internal.-ByteString: byte[] commonInternalArray(okio.ByteString)
okio.FileHandle: void resize(long)
okio.internal.-Buffer: void getHEX_DIGIT_BYTES$annotations()
okio.Okio__OkioKt: okio.BufferedSink buffer(okio.Sink)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: void invoke(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab getTab()
com.google.android.material.button.MaterialButton: androidx.dynamicanimation.animation.SpringForce getCornerSpringForce()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$1: CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$1()
retrofit2.Converter$Factory: java.lang.Class getRawType(java.lang.reflect.Type)
androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.core.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
retrofit2.KotlinExtensions$suspendAndThrow$1: java.lang.Object invokeSuspend(java.lang.Object)
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1: java.lang.String access$invoke$lambda$1(androidx.compose.runtime.State)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
okio.internal.-Buffer: int commonRead(okio.Buffer,byte[])
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
retrofit2.Retrofit$Builder: java.util.List converterFactories()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
okio.ByteString: java.lang.String base64()
retrofit2.Utils$GenericArrayTypeImpl: boolean equals(java.lang.Object)
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1: void invoke(androidx.compose.runtime.Composer,int)
okio.Buffer$outputStream$1: java.lang.String toString()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$special$$inlined$map$2: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
okio.internal.-SegmentedByteString: boolean commonEquals(okio.SegmentedByteString,java.lang.Object)
okio.internal.-ByteString: okio.ByteString commonSubstring(okio.ByteString,int,int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
androidx.graphics.path.PathIteratorPreApi34Impl: int internalPathIteratorNext(long,float[],int)
okio.OutputStreamSink: void close()
okio.AsyncTimeout$sink$1: AsyncTimeout$sink$1(okio.AsyncTimeout,okio.Sink)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
okio.Buffer: okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)
okio.Okio__JvmOkioKt: okio.HashingSource hashingSource(okio.Source,javax.crypto.Mac)
retrofit2.RequestBuilder: void setBody(okhttp3.RequestBody)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
com.waldy.androidcurrencyexchange.R$style: R$style()
okio.RealBufferedSource: long indexOf(okio.ByteString)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$1$1: void invoke(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
retrofit2.http.Part: java.lang.String encoding()
okio.internal.-Buffer: okio.Buffer commonWrite(okio.Buffer,byte[])
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
androidx.activity.ComponentActivity: void access$onBackPressed$s1027565324(androidx.activity.ComponentActivity)
retrofit2.ParameterHandler: ParameterHandler()
kotlin.Metadata: java.lang.String[] d2()
androidx.compose.ui.text.platform.extensions.LocaleListHelperMethods: void setTextLocales(androidx.compose.ui.text.platform.AndroidTextPaint,androidx.compose.ui.text.intl.LocaleList)
okio.-SegmentedByteString: long rightRotate(long,int)
retrofit2.Retrofit: java.lang.Object create(java.lang.Class)
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
okio.internal.-Path: void getBACKSLASH$annotations()
androidx.transition.ViewGroupUtils$Api29Impl: int getChildDrawingOrder(android.view.ViewGroup,int)
androidx.compose.foundation.text.KeyCommand: androidx.compose.foundation.text.KeyCommand valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isTypeVisible(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$onFromAmountChange$2: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
com.google.android.material.shape.StateListSizeChange$SizeChangeType: com.google.android.material.shape.StateListSizeChange$SizeChangeType[] values()
okio.Buffer: okio.Buffer writeShortLe(int)
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteUtf8(okio.RealBufferedSink,java.lang.String)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewDeleteGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.DeleteGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
retrofit2.Utils: boolean isAnnotationPresent(java.lang.annotation.Annotation[],java.lang.Class)
retrofit2.OkHttpCall: void enqueue(retrofit2.Callback)
retrofit2.Platform$Android: Platform$Android()
okio.internal.-Buffer: java.lang.String commonReadUtf8Line(okio.Buffer)
okio.-SegmentedByteString: okio.Buffer$UnsafeCursor resolveDefaultParameter(okio.Buffer$UnsafeCursor)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
androidx.compose.ui.graphics.BlendModeColorFilterHelper: android.graphics.BlendModeColorFilter BlendModeColorFilter-xETnrds(long,int)
okio.RealBufferedSink: okio.BufferedSink emit()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: void invoke(androidx.compose.foundation.layout.ColumnScope,androidx.compose.runtime.Composer,int)
okio.FileHandle: void reposition(okio.Source,long)
okio.BufferedSink: okio.BufferedSink write(okio.ByteString)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: boolean ThemeSelector$lambda$8(androidx.compose.runtime.MutableState)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$2: java.lang.Object invoke(java.lang.Object)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: void SelectionDialog(java.lang.String,java.util.List,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,androidx.compose.runtime.Composer,int)
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
okio.Timeout: okio.Timeout clearDeadline()
okio.FileHandle: void protectedFlush()
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.autofill.Autofill getAutofill()
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api29Impl: void notifyViewTextChanged(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,java.lang.CharSequence)
okio.Pipe: void setCanceled$okio(boolean)
okio.Path: int compareTo(okio.Path)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
okio.Buffer: Buffer()
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
retrofit2.RequestBuilder: void addHeaders(okhttp3.Headers)
okio.CipherSource: CipherSource(okio.BufferedSource,javax.crypto.Cipher)
com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase: UpdateLanguageUseCase(com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository)
okio.ByteString: okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.compose.ui.platform.ViewLayerVerificationHelper31: void setRenderEffect(android.view.View,androidx.compose.ui.graphics.RenderEffect)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
okio.FileSystem$Companion: okio.FileSystem get(java.nio.file.FileSystem)
okio.CipherSink: int update(okio.Buffer,long)
retrofit2.Platform$Android: java.lang.Object invokeDefaultMethod(java.lang.reflect.Method,java.lang.Class,java.lang.Object,java.lang.Object[])
androidx.compose.foundation.Api31Impl: float getDistance(android.widget.EdgeEffect)
okio.Path: okio.Path resolve$default(okio.Path,okio.Path,boolean,int,java.lang.Object)
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
okio.AsyncTimeout: void access$setInQueue$p(okio.AsyncTimeout,boolean)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
okio.-DeprecatedUtf8: long size(java.lang.String)
androidx.compose.ui.window.PopupLayout: int getDisplayWidth()
okio.BufferedSource: int readInt()
retrofit2.HttpServiceMethod: retrofit2.HttpServiceMethod parseAnnotations(retrofit2.Retrofit,java.lang.reflect.Method,retrofit2.RequestFactory)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
okio.HashingSource: okio.ByteString -deprecated_hash()
androidx.compose.foundation.text.input.internal.CursorAnchorInfoApi33Helper: android.view.inputmethod.CursorAnchorInfo$Builder setEditorBoundsInfo(android.view.inputmethod.CursorAnchorInfo$Builder,androidx.compose.ui.geometry.Rect)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
okio.internal.ZipEntry: ZipEntry(okio.Path,boolean,java.lang.String,long,long,long,int,java.lang.Long,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
retrofit2.Retrofit: okhttp3.HttpUrl baseUrl()
okio.internal.-SegmentedByteString: okio.ByteString commonSubstring(okio.SegmentedByteString,int,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.domain.model.Currency getFromCurrency()
retrofit2.ParameterHandler$FieldMap: void apply(retrofit2.RequestBuilder,java.util.Map)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.compose.ui.graphics.ColorSpaceVerificationHelper: android.graphics.ColorSpace androidColorSpace(androidx.compose.ui.graphics.colorspace.ColorSpace)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
retrofit2.ParameterHandler$FieldMap: ParameterHandler$FieldMap(java.lang.reflect.Method,int,retrofit2.Converter,boolean)
okio.Buffer: void setSize$okio(long)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
okio.RealBufferedSource: java.io.InputStream inputStream()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
okio.JvmFileHandle: void protectedResize(long)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
okio.FileSystem: void createDirectories(okio.Path,boolean)
okio.Buffer: okio.Buffer writeTo(java.io.OutputStream,long)
androidx.compose.ui.text.android.AndroidLayoutApi34: int[] getRangeForRect$ui_text_release(androidx.compose.ui.text.android.TextLayout,android.graphics.RectF,int,kotlin.jvm.functions.Function2)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.StateListShapeAppearanceModel getStateListShapeAppearanceModel()
okio.FileSystem: kotlin.sequences.Sequence listRecursively$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object)
okio.Buffer: boolean request(long)
okio.Buffer: byte[] readByteArray()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModelFactory: androidx.lifecycle.ViewModel create(java.lang.Class,androidx.lifecycle.viewmodel.CreationExtras)
androidx.compose.ui.text.android.CanvasCompatQ: void drawDoubleRoundRect(android.graphics.Canvas,android.graphics.RectF,float,float,android.graphics.RectF,float,float,android.graphics.Paint)
okio.Segment: Segment()
okio.internal.ResourceFileSystem$roots$2: ResourceFileSystem$roots$2(java.lang.ClassLoader)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.lang.String)
com.waldy.androidcurrencyexchange.CurrencyApplication: void setContainer(com.waldy.androidcurrencyexchange.di.AppContainer)
androidx.compose.ui.platform.AndroidViewsHandler: java.util.HashMap getHolderToLayoutNode()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
okio.NioFileSystemFileHandle: NioFileSystemFileHandle(boolean,java.nio.channels.FileChannel)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.viewpager2.widget.ViewPager2: void setPageTransformer(androidx.viewpager2.widget.ViewPager2$PageTransformer)
com.google.android.material.button.MaterialButton: void setElevation(float)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
okio.ForwardingSink: ForwardingSink(okio.Sink)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String component7()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
okio.ForwardingTimeout: boolean hasDeadline()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: java.lang.Object saveTheme(java.lang.String,kotlin.coroutines.Continuation)
okio.FileSystem: boolean exists(okio.Path)
androidx.compose.ui.graphics.layer.ViewLayer: androidx.compose.ui.graphics.CanvasHolder getCanvasHolder()
okio.NioFileSystemWrappingFileSystem: okio.FileHandle openReadOnly(okio.Path)
okio.SegmentPool: java.util.concurrent.atomic.AtomicReference firstRef()
okio.RealBufferedSink$outputStream$1: void flush()
kotlin.collections.AbstractList: java.lang.Object remove(int)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
okio.Utf8: int process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1)
okio.internal.-Buffer: byte[] commonReadByteArray(okio.Buffer,long)
okio.NioSystemFileSystem: NioSystemFileSystem()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.domain.model.Currency getToCurrency()
okio.NioFileSystemWrappingFileSystem: okio.Path canonicalize(okio.Path)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
retrofit2.ParameterHandler$QueryName: void apply(retrofit2.RequestBuilder,java.lang.Object)
okio.DeflaterSink: okio.Timeout timeout()
androidx.compose.ui.platform.AbstractComposeView: void setParentCompositionContext(androidx.compose.runtime.CompositionContext)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
okio.FileHandle: void access$writeNoCloseCheck(okio.FileHandle,long,okio.Buffer,long)
androidx.activity.EdgeToEdgeApi23: void setUp(androidx.activity.SystemBarStyle,androidx.activity.SystemBarStyle,android.view.Window,android.view.View,boolean,boolean)
okio.HashingSource$Companion: okio.HashingSource sha256(okio.Source)
androidx.compose.ui.window.Api33Impl: android.window.OnBackInvokedCallback createBackCallback(kotlin.jvm.functions.Function0)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: void onFromCurrencyChange(com.waldy.androidcurrencyexchange.domain.model.Currency)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$2$1: void invoke(com.waldy.androidcurrencyexchange.ui.util.Language)
retrofit2.HttpException: java.lang.String message()
com.google.android.material.chip.Chip: void setBackgroundColor(int)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.compose.ui.platform.ComposeView: boolean getShouldCreateCompositionOnAttachedToWindow()
com.waldy.androidcurrencyexchange.di.AppContainer: com.waldy.androidcurrencyexchange.domain.use_case.GetLanguageUseCase getGetLanguageUseCase()
com.google.android.material.button.MaterialButton: void setDisplayedWidthIncrease(float)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
okio.SegmentPool: int getMAX_SIZE()
okio.ByteString: okio.ByteString hmac$okio(java.lang.String,okio.ByteString)
okio.-SegmentedByteString: java.lang.String toHexString(int)
okio.Utf8: long size(java.lang.String,int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
okio.NioFileSystemWrappingFileSystem: void delete(okio.Path,boolean)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
androidx.activity.ComponentActivity: void onPanelClosed(int,android.view.Menu)
okio.internal.-Path: okio.Path toPath(okio.Buffer,boolean)
androidx.compose.ui.focus.FocusStateImpl: androidx.compose.ui.focus.FocusStateImpl valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.compose.foundation.gestures.Orientation: androidx.compose.foundation.gestures.Orientation[] values()
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: java.lang.String getDate()
okio.internal.ResourceFileSystem$Companion: boolean keepPath(okio.Path)
okio.internal.-RealBufferedSource: boolean commonRequest(okio.RealBufferedSource,long)
androidx.compose.ui.text.android.StaticLayoutFactoryImpl: android.text.StaticLayout create(androidx.compose.ui.text.android.StaticLayoutParams)
okio.internal.-SegmentedByteString: void commonWrite(okio.SegmentedByteString,okio.Buffer,int,int)
okio.GzipSink: void flush()
okio.DeflaterSink: void flush()
androidx.transition.ViewUtilsApi19$Api29Impl: float getTransitionAlpha(android.view.View)
okio.ForwardingSource: ForwardingSource(okio.Source)
okio.ZipFileSystem: okio.Path canonicalize(okio.Path)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository: kotlinx.coroutines.flow.Flow getTheme()
retrofit2.OkHttpCall$ExceptionCatchingResponseBody$1: long read(okio.Buffer,long)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsRouteKt$SettingsRoute$1$1: SettingsRouteKt$SettingsRoute$1$1(java.lang.Object)
okio.AsyncTimeout$sink$1: void flush()
com.waldy.androidcurrencyexchange.R$string: R$string()
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api29Impl: android.view.ViewStructure newVirtualViewStructure(android.view.contentcapture.ContentCaptureSession,android.view.autofill.AutofillId,long)
retrofit2.http.OPTIONS: java.lang.String value()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$3$1: void invoke(com.waldy.androidcurrencyexchange.domain.model.Currency)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
okio.Path: boolean isRoot()
com.google.android.material.button.MaterialButton: int getInsetTop()
okio.Buffer: okio.Buffer writeTo$default(okio.Buffer,java.io.OutputStream,long,int,java.lang.Object)
okio.internal.-SegmentedByteString: byte[] commonToByteArray(okio.SegmentedByteString)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
androidx.compose.ui.platform.AndroidComposeView: long getMeasureIteration()
okio.BufferedSource: short readShortLe()
okio.InflaterSource: long readOrInflate(okio.Buffer,long)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
retrofit2.http.DELETE: java.lang.String value()
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
okio.-DeprecatedOkio: okio.BufferedSource buffer(okio.Source)
okio.JvmSystemFileSystem: java.util.List list(okio.Path,boolean)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
okio.CipherSource: javax.crypto.Cipher getCipher()
retrofit2.CompletableFutureCallAdapterFactory$BodyCallAdapter: java.lang.Object adapt(retrofit2.Call)
androidx.startup.InitializationProvider: InitializationProvider()
okio.internal.-RealBufferedSource: long commonIndexOf(okio.RealBufferedSource,byte,long,long)
okio.internal.ZipFilesKt$openZip$1: java.lang.Boolean invoke(okio.internal.ZipEntry)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
okio.ByteString: int lastIndexOf$default(okio.ByteString,okio.ByteString,int,int,java.lang.Object)
okio.Buffer: okio.BufferedSink writeDecimalLong(long)
okio.Buffer: okio.Buffer write(byte[],int,int)
okio.Buffer: okio.Buffer writeIntLe(int)
okio.FileHandle$FileHandleSink: long getPosition()
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
okio.internal.ZipEntry: ZipEntry(okio.Path,boolean,java.lang.String,long,long,long,int,java.lang.Long,long)
okio.Okio__JvmOkioKt: okio.HashingSource hashingSource(okio.Source,java.security.MessageDigest)
androidx.constraintlayout.core.widgets.ConstraintAnchor$Type: androidx.constraintlayout.core.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
androidx.compose.ui.unit.LayoutDirection: androidx.compose.ui.unit.LayoutDirection valueOf(java.lang.String)
com.google.android.material.button.MaterialButtonGroup: void setInnerCornerSize(com.google.android.material.shape.CornerSize)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
okhttp3.TlsVersion: okhttp3.TlsVersion[] values()
okio.FileHandle$FileHandleSink: FileHandle$FileHandleSink(okio.FileHandle,long)
androidx.graphics.path.PathIteratorPreApi34Impl: int internalPathIteratorPeek(long)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
com.google.android.material.tabs.TabLayout: void setUnboundedRipple(boolean)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit ThemeSelector$lambda$17(java.lang.String,kotlin.jvm.functions.Function1,int,androidx.compose.runtime.Composer,int)
okio.Utf8: void processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1)
com.waldy.androidcurrencyexchange.MainActivityScreenKt: void access$CustomTabRow(java.util.List,int,kotlin.jvm.functions.Function1,androidx.compose.runtime.Composer,int)
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
androidx.activity.ComponentActivity: void onBackPressed()
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
okio.internal.-Buffer: boolean commonRangeEquals(okio.Buffer,long,okio.ByteString,int,int)
okio.Options: int indexOf(okio.ByteString)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
okio.RealBufferedSink$outputStream$1: void write(byte[],int,int)
androidx.compose.ui.graphics.layer.ViewLayerVerificationHelper31: void setRenderEffect(android.view.View,androidx.compose.ui.graphics.RenderEffect)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
okio.FileSystem: okio.Path canonicalize(okio.Path)
okio.FileHandle$FileHandleSink: okio.Timeout timeout()
okio.internal.-Buffer: byte[] commonReadByteArray(okio.Buffer)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
okio.ByteString: java.lang.String base64Url()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.domain.model.Currency component2()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
okio.NioFileSystemWrappingFileSystem: java.util.List list(okio.Path)
com.waldy.androidcurrencyexchange.R$id: R$id()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
okio.ForwardingTimeout: okio.Timeout timeout(long,java.util.concurrent.TimeUnit)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String component4()
com.google.android.material.tabs.TabLayout$TabView: void setSelected(boolean)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.text.font.Font$ResourceLoader getFontLoader()
retrofit2.BuiltInConverters$StreamingResponseBodyConverter: okhttp3.ResponseBody convert(okhttp3.ResponseBody)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit AboutSection$lambda$34(android.content.Context,int,androidx.compose.runtime.Composer,int)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.compose.ui.node.TraversableNode$Companion$TraverseDescendantsAction: androidx.compose.ui.node.TraversableNode$Companion$TraverseDescendantsAction valueOf(java.lang.String)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1: CurrencyExchangeScreenKt$CurrencySelector$4$1(kotlin.jvm.functions.Function1,androidx.compose.runtime.MutableState)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.data.local.CurrencyCache: void saveRates(com.waldy.androidcurrencyexchange.domain.model.Currency,java.lang.String)
okio.Buffer$outputStream$1: void write(byte[],int,int)
okio.Segment: okio.Segment push(okio.Segment)
retrofit2.SkipCallbackExecutorImpl: java.lang.annotation.Annotation[] ensurePresent(java.lang.annotation.Annotation[])
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
androidx.compose.ui.platform.ViewLayerContainer: void dispatchGetDisplayList()
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
okio.BufferedSource: void require(long)
com.waldy.androidcurrencyexchange.ui.util.StringKeys: StringKeys()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState copy(com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okio.internal.-ByteString: java.lang.String commonToString(okio.ByteString)
androidx.compose.ui.platform.AndroidComposeView: long getLastMatrixRecalculationAnimationTime$ui_release()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
okio.internal.-FileSystem$collectRecursively$1: java.lang.Object invokeSuspend(java.lang.Object)
retrofit2.DefaultCallAdapterFactory$1: retrofit2.Call adapt(retrofit2.Call)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.waldy.androidcurrencyexchange.ui.util.Language: kotlin.enums.EnumEntries getEntries()
retrofit2.http.QueryMap: boolean encoded()
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: ConversionOutput(java.math.BigDecimal,boolean)
okio.ByteString: int indexOf(byte[])
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
okhttp3.RequestBody: okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
okio.AsyncTimeout$source$1: void close()
okio.internal.-RealBufferedSink: okio.BufferedSink commonWriteLongLe(okio.RealBufferedSink,long)
androidx.emoji2.text.EmojiExclusions$EmojiExclusions_Api34: java.util.Set getExclusions()
okio.internal.-RealBufferedSource: okio.ByteString commonReadByteString(okio.RealBufferedSource)
com.google.android.material.drawable.DrawableUtils$OutlineCompatL: void setConvexPath(android.graphics.Outline,android.graphics.Path)
okio.Buffer: okio.Buffer buffer()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
okio.ForwardingFileSystem: ForwardingFileSystem(okio.FileSystem)
okio.BufferedSink: okio.BufferedSink writeInt(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState: java.lang.String component3()
retrofit2.RequestFactory$Builder: void parseHttpMethodAndPath(java.lang.String,java.lang.String,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
retrofit2.OkHttpCall: okhttp3.Request request()
com.google.android.material.divider.MaterialDivider: void setDividerColorResource(int)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
okio.Pipe: Pipe(long)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
androidx.compose.ui.platform.coreshims.ViewCompatShims$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
okio.ByteString: okio.ByteString sha512()
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
okio.Buffer: okio.Buffer clone()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository$saveTheme$2: java.lang.Object invokeSuspend(java.lang.Object)
okio.internal.-Buffer: okio.Buffer commonWrite(okio.Buffer,okio.ByteString,int,int)
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
okio.internal.ZipFilesKt$openZip$1: ZipFilesKt$openZip$1()
retrofit2.ParameterHandler$Path: void apply(retrofit2.RequestBuilder,java.lang.Object)
retrofit2.ParameterHandler: retrofit2.ParameterHandler iterable()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
androidx.compose.ui.platform.ViewLayer: float getCameraDistancePx()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
okio.Okio__JvmOkioKt: okio.Source source(java.io.InputStream)
okio.HashingSource: okio.HashingSource hmacSha1(okio.Source,okio.ByteString)
com.google.gson.reflect.TypeToken: boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
com.google.android.material.button.MaterialButton: void setWidth(int)
okio.SegmentedByteString: byte[][] getSegments$okio()
okio.-DeprecatedUtf8: -DeprecatedUtf8()
okio.internal.-ByteString: int access$decodeHexDigit(char)
okio.Options: int indexOf(java.lang.Object)
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
androidx.compose.ui.platform.AndroidComposeView: android.view.View getView()
com.google.android.material.tabs.TabLayout: android.graphics.drawable.Drawable getTabSelectedIndicator()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
okio.ByteString$Companion: okio.ByteString read(java.io.InputStream,int)
androidx.core.os.BundleCompat$Api33Impl: java.io.Serializable getSerializable(android.os.Bundle,java.lang.String,java.lang.Class)
okio.Okio__JvmOkioKt: okio.Sink sink(java.net.Socket)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
androidx.constraintlayout.widget.Barrier: boolean getAllowsGoneWidget()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
okhttp3.ResponseBody: java.lang.String string()
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
okio.-DeprecatedOkio: okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
com.waldy.androidcurrencyexchange.R$xml: R$xml()
okio.ByteString: okio.ByteString read(java.io.InputStream,int)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
okio.FileMetadata: FileMetadata(boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map,int,kotlin.jvm.internal.DefaultConstructorMarker)
okio.ByteString: java.lang.String getUtf8$okio()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
com.google.android.material.textfield.TextInputLayout: int getHintMaxLines()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.material.tabs.TabLayout: void setInlineLabelResource(int)
okio.internal.ResourceFileSystem: okio.Sink appendingSink(okio.Path,boolean)
okio.Options$Companion: void buildTrieRecursive(long,okio.Buffer,int,java.util.List,int,int,java.util.List)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
okio.internal.-Buffer: okio.Buffer$UnsafeCursor commonReadUnsafe(okio.Buffer,okio.Buffer$UnsafeCursor)
okio.FileMetadata: FileMetadata(boolean,boolean,okio.Path,java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long,java.util.Map)
okio.RealBufferedSource: int read(byte[],int,int)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
okio.internal.-ByteString: boolean commonStartsWith(okio.ByteString,byte[])
okio.Options: Options(okio.ByteString[],int[])
okio.internal.-Path: boolean commonIsRoot(okio.Path)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
okio.internal.ZipEntry: java.lang.String getComment()
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
okio.-SegmentedByteString: java.lang.String toHexString(byte)
com.google.gson.reflect.TypeToken: TypeToken(java.lang.reflect.Type)
okio.internal.-FileSystem: java.lang.Object collectRecursively(kotlin.sequences.SequenceScope,okio.FileSystem,kotlin.collections.ArrayDeque,okio.Path,boolean,boolean,kotlin.coroutines.Continuation)
okio.internal.-SegmentedByteString: void forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
okio.internal.ZipFilesKt: java.lang.String getHex(int)
com.google.android.material.internal.BaselineLayout: int getBaseline()
okio.internal.-Buffer: int commonRead(okio.Buffer,byte[],int,int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult: com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult copy$default(com.waldy.androidcurrencyexchange.domain.repository.GetConversionResult,double,boolean,int,java.lang.Object)
okio.ByteString: okio.ByteString substring()
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
okio.AsyncTimeout$sink$1: okio.Timeout timeout()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
okio.-SegmentedByteString: int getDEFAULT__ByteString_size()
com.google.gson.reflect.TypeToken: java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewDeleteRangeGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.DeleteRangeGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager)
okio.internal.-SegmentedByteString: void commonCopyInto(okio.SegmentedByteString,int,byte[],int,int)
com.google.android.material.tabs.TabLayout: void setSelectedTabIndicator(android.graphics.drawable.Drawable)
androidx.compose.ui.window.Api33Impl: void maybeUnregisterBackCallback(android.view.View,java.lang.Object)
com.waldy.androidcurrencyexchange.ui.theme.ThemeKt: kotlin.Unit AndroidCurrencyExchangeTheme$lambda$1$lambda$0(android.view.View,androidx.compose.material3.ColorScheme,boolean)
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
okio.SegmentPool: int getByteCount()
okio.internal.-ByteString: byte[] commonToByteArray(okio.ByteString)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: retrofit2.Call clone()
androidx.compose.ui.platform.RenderNodeVerificationHelper28: int getSpotShadowColor(android.view.RenderNode)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse copy(java.lang.String,java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
okio.ByteString: java.nio.ByteBuffer asByteBuffer()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
okio.internal.ResourceFileSystem: java.lang.String toRelativePath(okio.Path)
retrofit2.BuiltInConverters: retrofit2.Converter requestBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],java.lang.annotation.Annotation[],retrofit2.Retrofit)
okio.RealBufferedSource: void readFully(okio.Buffer,long)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.compose.material.ripple.RippleHostView: void setRippleState$lambda$2(androidx.compose.material.ripple.RippleHostView)
okio.NioSystemFileSystem: okio.FileMetadata metadataOrNull(java.nio.file.Path)
androidx.compose.ui.layout.IntrinsicWidthHeight: androidx.compose.ui.layout.IntrinsicWidthHeight valueOf(java.lang.String)
androidx.compose.ui.platform.AndroidComposeView: void getShowLayoutBounds$annotations()
retrofit2.ParameterHandler$RelativeUrl: ParameterHandler$RelativeUrl(java.lang.reflect.Method,int)
okio.AsyncTimeout$source$1: okio.AsyncTimeout timeout()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewDeleteRangeGesture(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.DeleteRangeGesture,androidx.compose.foundation.text.input.internal.TextLayoutState)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: com.waldy.androidcurrencyexchange.data.remote.CurrencyApiService access$getApiService$p(com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
okio.Buffer: okio.ByteString digest(java.lang.String)
retrofit2.SkipCallbackExecutorImpl: java.lang.String toString()
androidx.compose.ui.platform.coreshims.ContentCaptureSessionCompat$Api29Impl: android.view.ViewStructure newViewStructure(android.view.contentcapture.ContentCaptureSession,android.view.View)
okio.Okio: boolean isAndroidGetsocknameError(java.lang.AssertionError)
okio.RealBufferedSource: void require(long)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
okio.internal.-ByteString: boolean commonRangeEquals(okio.ByteString,int,okio.ByteString,int,int)
androidx.compose.material3.tokens.TypographyKeyTokens: androidx.compose.material3.tokens.TypographyKeyTokens valueOf(java.lang.String)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.hapticfeedback.HapticFeedback getHapticFeedBack()
retrofit2.ParameterHandler$PartMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
okio.Timeout: void waitUntilNotified(java.lang.Object)
okio.NioFileSystemWrappingFileSystem: void createDirectory(okio.Path,boolean)
okio.internal.EocdRecord: int getCommentByteCount()
androidx.activity.ComponentActivity: void getOnBackPressedDispatcher$annotations()
okio.HashingSink: okio.HashingSink md5(okio.Sink)
retrofit2.Utils: boolean hasUnresolvableType(java.lang.reflect.Type)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: kotlinx.coroutines.flow.MutableStateFlow access$get_uiState$p(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
okio.NioFileSystemFileHandle: void protectedWrite(long,byte[],int,int)
okio.FileSystem: void delete(okio.Path)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
okio.internal.-Path: okio.Path commonResolve(okio.Path,okio.Path,boolean)
androidx.compose.foundation.text.Handle: androidx.compose.foundation.text.Handle[] values()
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: java.util.Map getRates()
okio.RealBufferedSource: byte[] readByteArray()
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityScreenKt: ComposableSingletons$MainActivityScreenKt()
androidx.compose.foundation.text.selection.CrossStatus: androidx.compose.foundation.text.selection.CrossStatus valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
okio.internal.-RealBufferedSource: okio.Timeout commonTimeout(okio.RealBufferedSource)
retrofit2.Platform: java.util.List defaultCallAdapterFactories(java.util.concurrent.Executor)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
okio.OutputStreamSink: java.lang.String toString()
retrofit2.RequestBuilder$ContentTypeOverridingRequestBody: long contentLength()
okio.AsyncTimeout: AsyncTimeout()
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
okio.SocketAsyncTimeout: void timedOut()
okio.internal.-ByteString: java.lang.String commonHex(okio.ByteString)
okio.HashingSink$Companion: okio.HashingSink md5(okio.Sink)
com.waldy.androidcurrencyexchange.domain.model.Currency: com.waldy.androidcurrencyexchange.domain.model.Currency[] $values()
okio.internal.-Buffer: byte commonGet(okio.Buffer,long)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.LayoutNodeDrawScope getSharedDrawScope()
okio.internal.ZipFilesKt: okio.ZipFileSystem openZip(okio.Path,okio.FileSystem,kotlin.jvm.functions.Function1)
okio.ByteString$Companion: okio.ByteString decodeHex(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
retrofit2.OkHttpCall: retrofit2.Call clone()
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
okio.Buffer: int readInt()
okio.ForwardingFileSystem: java.util.List listOrNull(okio.Path)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SelectionDialog$1$1: kotlin.Unit invoke$lambda$3$lambda$2$lambda$1$lambda$0(kotlin.jvm.functions.Function1,java.lang.String,kotlin.jvm.functions.Function0)
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
okio.ForwardingTimeout: long timeoutNanos()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
retrofit2.OkHttpCall: java.lang.Object clone()
androidx.compose.ui.platform.AndroidComposeView: kotlin.coroutines.CoroutineContext getCoroutineContext()
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performHandwritingGesture$foundation_release(androidx.compose.foundation.text.input.internal.TransformedTextFieldState,android.view.inputmethod.HandwritingGesture,androidx.compose.foundation.text.input.internal.TextLayoutState,androidx.compose.ui.platform.ViewConfiguration)
okio.-Base64: java.lang.String encodeBase64$default(byte[],byte[],int,java.lang.Object)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
com.waldy.androidcurrencyexchange.MainActivity$onCreate$1: MainActivity$onCreate$1(com.waldy.androidcurrencyexchange.di.AppContainer)
okio.internal.-Buffer: okio.Buffer commonWriteShort(okio.Buffer,int)
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4$1$invoke$lambda$3$lambda$2$$inlined$items$default$3: java.lang.Object invoke(int)
retrofit2.http.HTTP: boolean hasBody()
retrofit2.ParameterHandler: retrofit2.ParameterHandler array()
com.google.android.material.tabs.TabLayout$TabView: void setTab(com.google.android.material.tabs.TabLayout$Tab)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.autofill.AutofillTree getAutofillTree()
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencyExchangeRoute$2$1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
okio.Buffer: okio.Buffer copyTo$default(okio.Buffer,java.io.OutputStream,long,long,int,java.lang.Object)
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput copy$default(com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput,java.math.BigDecimal,boolean,int,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.waldy.androidcurrencyexchange.R$mipmap: R$mipmap()
androidx.activity.ComponentActivity: void onUserLeaveHint()
okio.AsyncTimeout$Watchdog: void run()
okio.-DeprecatedOkio: okio.Source source(java.io.InputStream)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsIgnoringVisibility(int)
okio.SegmentPool: void recycle(okio.Segment)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
okio.AsyncTimeout: void access$setTimeoutAt$p(okio.AsyncTimeout,long)
androidx.compose.ui.graphics.layer.RenderNodeVerificationHelper28: void setSpotShadowColor(android.view.RenderNode,int)
okio.InputStreamSource: InputStreamSource(java.io.InputStream,okio.Timeout)
com.waldy.androidcurrencyexchange.R$layout: R$layout()
androidx.transition.TransitionUtils$Api28Impl: android.graphics.Bitmap createBitmap(android.graphics.Picture)
androidx.compose.ui.autofill.AutofillApi23Helper: void setId(android.view.ViewStructure,int,java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1(retrofit2.Call)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt$CurrencySelector$4: CurrencyExchangeScreenKt$CurrencySelector$4(kotlin.jvm.functions.Function1,androidx.compose.runtime.MutableState)
com.waldy.androidcurrencyexchange.MainActivityScreenKt$MainActivityScreen$1$1$1$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
com.google.android.material.button.MaterialButtonGroup: void setShapeAppearance(com.google.android.material.shape.ShapeAppearanceModel)
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase: kotlinx.coroutines.flow.Flow invoke()
okio.BufferedSource: int readUtf8CodePoint()
okio.internal.-Buffer: java.lang.Object seek(okio.Buffer,long,kotlin.jvm.functions.Function2)
androidx.transition.ViewUtilsApi22$Api29Impl: void setLeftTopRightBottom(android.view.View,int,int,int,int)
androidx.compose.foundation.FocusableKt$FocusableInNonTouchModeElement$1: FocusableKt$FocusableInNonTouchModeElement$1()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$1: SettingsScreenKt$SettingsScreen$1$1(java.lang.String,kotlin.jvm.functions.Function1,com.waldy.androidcurrencyexchange.ui.util.Language,kotlin.jvm.functions.Function1)
retrofit2.Converter$Factory: retrofit2.Converter stringConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt: kotlin.Unit ThemeSelector$lambda$11$lambda$10(androidx.compose.runtime.MutableState)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
okio.BufferedSink: okio.BufferedSink emit()
okio.Okio: okio.FileSystem asResourceFileSystem(java.lang.ClassLoader)
retrofit2.OkHttpCall: okhttp3.Call getRawCall()
com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepositoryKt: androidx.datastore.core.DataStore access$getDataStore(android.content.Context)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.waldy.androidcurrencyexchange.ui.util.Localization: com.waldy.androidcurrencyexchange.ui.util.Language currentLanguage$lambda$0()
okio.GzipSource: void consumeHeader()
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
com.waldy.androidcurrencyexchange.ComposableSingletons$MainActivityKt$lambda-1$1: void invoke(androidx.compose.runtime.Composer,int)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel: com.waldy.androidcurrencyexchange.domain.use_case.UpdateLanguageUseCase access$getUpdateLanguageUseCase$p(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.transition.ViewUtilsApi23$Api29Impl: void setTransitionVisibility(android.view.View,int)
okio.HashingSource: okio.ByteString hash()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2: CurrencyExchangeViewModel$convert$1$2(com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel,kotlin.coroutines.Continuation)
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: int performSelectGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.SelectGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager,kotlin.jvm.functions.Function1)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
okio.Timeout: okio.Timeout clearTimeout()
com.google.android.material.divider.MaterialDivider: void setDividerColor(int)
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.google.android.material.chip.Chip: void setIconStartPadding(float)
okio.Okio__JvmOkioKt: okio.FileSystem asResourceFileSystem(java.lang.ClassLoader)
okio.ByteString: int compareTo(okio.ByteString)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall: java.lang.Object clone()
androidx.transition.ViewUtilsApi19$Api29Impl: void setTransitionAlpha(android.view.View,float)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.platform.AccessibilityManager getAccessibilityManager()
okhttp3.ResponseBody: java.io.InputStream byteStream()
androidx.core.view.PointerIconCompat$Api24Impl: android.view.PointerIcon load(android.content.res.Resources,int)
androidx.compose.ui.graphics.layer.RenderNodeVerificationHelper28: int getAmbientShadowColor(android.view.RenderNode)
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
okio.internal.ZipFilesKt: okio.ZipFileSystem openZip$default(okio.Path,okio.FileSystem,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.material.behavior.HideViewOnScrollBehavior: HideViewOnScrollBehavior()
com.google.gson.reflect.TypeToken: java.lang.Class getRawType()
androidx.compose.animation.core.MutatePriority: androidx.compose.animation.core.MutatePriority[] values()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onLanguageChange$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.viewpager2.widget.ViewPager2: int getPageSize()
retrofit2.Utils: java.lang.String typeToString(java.lang.reflect.Type)
androidx.compose.ui.window.PopupLayout: androidx.compose.ui.layout.LayoutCoordinates getParentLayoutCoordinates()
okio.ByteString$Companion: okio.ByteString -deprecated_decodeBase64(java.lang.String)
com.waldy.androidcurrencyexchange.domain.use_case.GetThemeUseCase: GetThemeUseCase(com.waldy.androidcurrencyexchange.data.preferences.UserPreferencesRepository)
okio.InflaterSource: long read(okio.Buffer,long)
retrofit2.Utils: void checkNotPrimitive(java.lang.reflect.Type)
com.google.android.material.tabs.TabLayout: void setTabIndicatorFullWidth(boolean)
okio.ByteString: java.lang.String utf8()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
okio.BufferedSource: long indexOf(okio.ByteString)
com.waldy.androidcurrencyexchange.data.repository.CurrencyRepositoryImpl: kotlinx.coroutines.flow.Flow getConversionRate(com.waldy.androidcurrencyexchange.domain.model.Currency,com.waldy.androidcurrencyexchange.domain.model.Currency)
okio.Path: okio.Path resolve(okio.Path)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
okio.SegmentedByteString: okio.ByteString substring(int,int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel$convert$1$2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
okio.HashingSource$Companion: okio.HashingSource md5(okio.Source)
okio.RealBufferedSink: void getBuffer$annotations()
okio.ByteString: int -deprecated_size()
okio.ByteString: byte[] getData$okio()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
okio.Sink: okio.Timeout timeout()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorColor()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
okio.Options$Companion: Options$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
okio.ZipFileSystem: void atomicMove(okio.Path,okio.Path)
okio.internal.-Buffer: okio.Buffer commonWriteUtf8(okio.Buffer,java.lang.String,int,int)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
okio.BufferedSource: long indexOf(byte,long)
okio.internal.-Buffer: okio.Buffer commonWriteHexadecimalUnsignedLong(okio.Buffer,long)
okhttp3.RequestBody: boolean isDuplex()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
okio.Path: boolean isAbsolute()
com.google.android.material.button.MaterialButton: void setWidthChangeMax(int)
okio.DeflaterSink: void deflate(boolean)
androidx.compose.ui.autofill.AutofillApi26Helper: java.lang.CharSequence textValue(android.view.autofill.AutofillValue)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
okio.ByteString: byte -deprecated_getByte(int)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
okio.Throttler: java.util.concurrent.locks.ReentrantLock getLock()
okio.BufferedSource: byte[] readByteArray(long)
okio.Buffer: long indexOfElement(okio.ByteString,long)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
kotlin.collections.AbstractCollection: boolean retainAll(java.util.Collection)
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: java.lang.reflect.Type responseType()
retrofit2.converter.gson.GsonConverterFactory: retrofit2.converter.gson.GsonConverterFactory create(com.google.gson.Gson)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
okio.GzipSource: long read(okio.Buffer,long)
okio.ForwardingFileSystem: okio.FileSystem delegate()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
okio.internal._Utf8Kt: byte[] commonAsUtf8ToByteArray(java.lang.String)
retrofit2.KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1: KotlinExtensions$await$$inlined$suspendCancellableCoroutine$lambda$1(retrofit2.Call)
okio.Path$Companion: Path$Companion()
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeViewModel: void convert()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
okio.CipherSink: okio.Timeout timeout()
okio.Buffer: okio.ByteString readByteString(long)
okhttp3.internal.http2.ErrorCode: okhttp3.internal.http2.ErrorCode[] values()
okio.AsyncTimeout$sink$1: okio.AsyncTimeout timeout()
okio.internal.-Path: boolean startsWithVolumeLetterAndColon(okio.Buffer,okio.ByteString)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
androidx.compose.foundation.text.input.internal.HandwritingGestureApi34: void previewSelectGesture(androidx.compose.foundation.text.LegacyTextFieldState,android.view.inputmethod.SelectGesture,androidx.compose.foundation.text.selection.TextFieldSelectionManager)
okio.BufferedSource: java.lang.String readUtf8LineStrict(long)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
retrofit2.Callback: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.viewpager2.widget.ViewPager2: int getCurrentItem()
androidx.compose.ui.text.android.StaticLayoutFactory28: void setUseLineSpacingFromFallbacks(android.text.StaticLayout$Builder,boolean)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
okio.internal.ZipFilesKt: okio.internal.EocdRecord readZip64EocdRecord(okio.BufferedSource,okio.internal.EocdRecord)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
okio.RealBufferedSink: java.io.OutputStream outputStream()
retrofit2.CompletableFutureCallAdapterFactory$ResponseCallAdapter: CompletableFutureCallAdapterFactory$ResponseCallAdapter(java.lang.reflect.Type)
kotlin.collections.AbstractCollection: java.lang.Object[] toArray(java.lang.Object[])
retrofit2.Utils$ParameterizedTypeImpl: boolean equals(java.lang.Object)
retrofit2.KotlinExtensions$awaitResponse$$inlined$suspendCancellableCoroutine$lambda$1: void invoke(java.lang.Throwable)
okio.RealBufferedSource: int read(java.nio.ByteBuffer)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
retrofit2.KotlinExtensions$await$4$2: KotlinExtensions$await$4$2(kotlinx.coroutines.CancellableContinuation)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
okio.ByteString: int compareTo(java.lang.Object)
androidx.compose.ui.platform.ViewLayer: void setInvalidated(boolean)
okio.CipherSink: javax.crypto.Cipher getCipher()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
okio.RealBufferedSource$inputStream$1: int available()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
retrofit2.BuiltInConverters$UnitResponseBodyConverter: java.lang.Object convert(java.lang.Object)
okio.BufferedSource: okio.ByteString readByteString(long)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.compose.material3.ScaffoldLayoutContent: androidx.compose.material3.ScaffoldLayoutContent[] values()
okio.JvmFileHandle: JvmFileHandle(boolean,java.io.RandomAccessFile)
okio.internal.ZipFilesKt: java.util.Map buildIndex(java.util.List)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
androidx.compose.ui.autofill.AutofillApi26Helper: boolean isDate(android.view.autofill.AutofillValue)
retrofit2.Retrofit$Builder: retrofit2.Retrofit$Builder baseUrl(java.net.URL)
retrofit2.converter.gson.GsonConverterFactory: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
retrofit2.http.QueryName: boolean encoded()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
okio.HashingSink$Companion: okio.HashingSink hmacSha1(okio.Sink,okio.ByteString)
okio.Buffer: okio.BufferedSink writeUtf8(java.lang.String,int,int)
androidx.compose.animation.core.AnimationEndReason: androidx.compose.animation.core.AnimationEndReason valueOf(java.lang.String)
androidx.compose.ui.layout.IntrinsicWidthHeight: androidx.compose.ui.layout.IntrinsicWidthHeight[] values()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel$onThemeChange$1: SettingsViewModel$onThemeChange$1(com.waldy.androidcurrencyexchange.presentation.settings.SettingsViewModel,java.lang.String,kotlin.coroutines.Continuation)
com.waldy.androidcurrencyexchange.MainActivityScreenKt: int MainActivityScreen$lambda$1$lambda$0(java.util.List)
okio.Timeout: long timeoutNanos()
androidx.compose.ui.graphics.WrapperVerificationHelperMethods: void setBlendMode-GB0RdKg(android.graphics.Paint,int)
androidx.compose.ui.platform.AndroidComposeView: androidx.compose.ui.node.LayoutNode getRoot()
okio.internal.-RealBufferedSink: long commonWriteAll(okio.RealBufferedSink,okio.Source)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.compose.ui.platform.AndroidComposeViewTranslationCallbackS: void clearViewTranslationCallback(android.view.View)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
okhttp3.ResponseBody: byte[] bytes()
com.waldy.androidcurrencyexchange.data.remote.dto.CurrencyResponse: java.util.Map component2()
retrofit2.Retrofit: retrofit2.Retrofit$Builder newBuilder()
okio.AsyncTimeout$Companion: boolean cancelScheduledTimeout(okio.AsyncTimeout)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
okio.RealBufferedSource$inputStream$1: void close()
com.waldy.androidcurrencyexchange.presentation.settings.SettingsScreenKt$SettingsScreen$1$2: void invoke(androidx.compose.runtime.Composer,int)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
retrofit2.KotlinExtensions$await$2$2: void onResponse(retrofit2.Call,retrofit2.Response)
androidx.compose.ui.platform.AndroidComposeView: kotlin.jvm.functions.Function1 getConfigurationChangeObserver()
androidx.compose.material.ripple.UnprojectedRipple$MRadiusHelper: void setRadius(android.graphics.drawable.RippleDrawable,int)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
retrofit2.OkHttpCall$ExceptionCatchingResponseBody: void close()
androidx.compose.ui.platform.AndroidComposeViewTranslationCallbackS: void setViewTranslationCallback(android.view.View)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: boolean CurrencySelector$lambda$14(androidx.compose.runtime.MutableState)
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
retrofit2.BuiltInConverters: retrofit2.Converter responseBodyConverter(java.lang.reflect.Type,java.lang.annotation.Annotation[],retrofit2.Retrofit)
com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeScreenKt: com.waldy.androidcurrencyexchange.presentation.converter.CurrencyExchangeUiState CurrencyExchangeRoute$lambda$0(androidx.compose.runtime.State)
retrofit2.RequestFactory: RequestFactory(retrofit2.RequestFactory$Builder)
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
com.google.android.material.divider.MaterialDivider: void setDividerThickness(int)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
okio.SegmentedByteString: boolean rangeEquals(int,byte[],int,int)
okio.Utf8: boolean isIsoControl(int)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.waldy.androidcurrencyexchange.domain.use_case.ConversionOutput: boolean equals(java.lang.Object)
com.waldy.androidcurrencyexchange.ui.theme.ColorKt: long getDarkRoast()
okio.ByteString: okio.ByteString sha256()
okio.RealBufferedSink: boolean isOpen()
okio.Buffer: int read(byte[],int,int)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
okio.RealBufferedSource: java.lang.String readString(java.nio.charset.Charset)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
okio.FileSystem: void createDirectories$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object)
okio.OutputStreamSink: okio.Timeout timeout()
okio.internal.-Buffer: okio.Buffer commonWrite(okio.Buffer,okio.Source,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
retrofit2.ParameterHandler$HeaderMap: void apply(retrofit2.RequestBuilder,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
androidx.compose.ui.text.android.CanvasCompatM: void drawTextRun(android.graphics.Canvas,char[],int,int,int,int,float,float,boolean,android.graphics.Paint)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.waldy.androidcurrencyexchange.data.local.CurrencyCache: java.lang.String getRates(com.waldy.androidcurrencyexchange.domain.model.Currency)
okio.BufferedSource: okio.BufferedSource peek()
androidx.compose.ui.platform.AndroidComposeView: boolean getScrollCaptureInProgress$ui_release()
okio.Throttler: long bytesToNanos(long)
androidx.compose.ui.platform.AndroidComposeViewAccessibilityDelegateCompat$Api24Impl: void addSetProgressAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.compose.ui.semantics.SemanticsNode)
okio.FileSystem: void delete$default(okio.FileSystem,okio.Path,boolean,int,java.lang.Object)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
